;;; this file is automatically generated, do not edit
#||
Copyright 2015-2021 The Khronos Group Inc.

SPDX-License-Identifier: Apache-2.0 OR MIT
||#

(in-package :vk)

(defvk-create-handle-fun (create-instance
                          %vk:create-instance
                          "Represents [vkCreateInstance](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateInstance.html).

Args:
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    INSTANCE
    RESULT)

See ALLOCATION-CALLBACKS
See INSTANCE
See INSTANCE-CREATE-INFO
See RESULT
"
                          ((create-info (or vk:instance-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (create-info '(:struct %vk:instance-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (instance '%vk:instance instance :out :handle))

(defvk-simple-fun (destroy-instance
                   %vk:destroy-instance
                   "Represents [vkDestroyInstance](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyInstance.html).

Args:
 - INSTANCE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See INSTANCE
"
                   ()
                   (((instance (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (instance '%vk:instance instance :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-enumerate-fun (enumerate-physical-devices
                      %vk:enumerate-physical-devices
                      "Represents [vkEnumeratePhysicalDevices](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkEnumeratePhysicalDevices.html).

Args:
 - INSTANCE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PHYSICAL-DEVICE
    RESULT)

See INSTANCE
See PHYSICAL-DEVICE
See RESULT
"
                      ((instance cffi:foreign-pointer))
                      ()
                      physical-device-count
                      physical-devices
                      nil)
  (instance '%vk:instance instance :in :handle)
  (physical-device-count :uint32 physical-device-count :out)
  (physical-devices '%vk:physical-device physical-devices :out :handle :list))

(defvk-simple-fun (get-device-proc-addr
                   %vk:get-device-proc-addr
                   "Represents [vkGetDeviceProcAddr](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceProcAddr.html).

Args:
 - DEVICE: <a description>
 - NAME: <a description>

Returns:
  (CL:VALUES
    CFFI:FOREIGN-POINTER ;; a function pointer)

See DEVICE
"
                   ((device cffi:foreign-pointer) (name string))
                   ()
                  '%vk:pfn-void-function)
  (device '%vk:device device :in :handle)
  (name :string name :in :raw))

(defvk-simple-fun (get-instance-proc-addr
                   %vk:get-instance-proc-addr
                   "Represents [vkGetInstanceProcAddr](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetInstanceProcAddr.html).

Args:
 - NAME: <a description>
 - INSTANCE: (optional) <a description>

Returns:
  (CL:VALUES
    CFFI:FOREIGN-POINTER ;; a function pointer)

See INSTANCE
"
                   ((name string))
                   (((instance (cffi:null-pointer)) cffi:foreign-pointer))
                  '%vk:pfn-void-function)
  (instance '%vk:instance instance :in :handle :optional)
  (name :string name :in :raw))

(defvk-get-struct-fun (get-physical-device-properties
                       %vk:get-physical-device-properties
                       "Represents [vkGetPhysicalDeviceProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    PHYSICAL-DEVICE-PROPERTIES)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-PROPERTIES
"
                       ((physical-device cffi:foreign-pointer))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (properties '(:struct %vk:physical-device-properties) properties :out))

(defvk-get-structs-fun (get-physical-device-queue-family-properties
                        %vk:get-physical-device-queue-family-properties
                        "Represents [vkGetPhysicalDeviceQueueFamilyProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceQueueFamilyProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    QUEUE-FAMILY-PROPERTIES)

See PHYSICAL-DEVICE
See QUEUE-FAMILY-PROPERTIES
"
                        ((physical-device cffi:foreign-pointer))
                        ()
                        queue-family-property-count
                        queue-family-properties
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-property-count :uint32 queue-family-property-count :out)
  (queue-family-properties '(:struct %vk:queue-family-properties) queue-family-properties :out :list))

(defvk-get-struct-fun (get-physical-device-memory-properties
                       %vk:get-physical-device-memory-properties
                       "Represents [vkGetPhysicalDeviceMemoryProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceMemoryProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    PHYSICAL-DEVICE-MEMORY-PROPERTIES)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-MEMORY-PROPERTIES
"
                       ((physical-device cffi:foreign-pointer))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (memory-properties '(:struct %vk:physical-device-memory-properties) memory-properties :out))

(defvk-get-struct-fun (get-physical-device-features
                       %vk:get-physical-device-features
                       "Represents [vkGetPhysicalDeviceFeatures](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceFeatures.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    PHYSICAL-DEVICE-FEATURES)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-FEATURES
"
                       ((physical-device cffi:foreign-pointer))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (features '(:struct %vk:physical-device-features) features :out))

(defvk-get-struct-fun (get-physical-device-format-properties
                       %vk:get-physical-device-format-properties
                       "Represents [vkGetPhysicalDeviceFormatProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceFormatProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - FORMAT: <a description>

Returns:
  (CL:VALUES
    FORMAT-PROPERTIES)

See FORMAT
See FORMAT-PROPERTIES
See PHYSICAL-DEVICE
"
                       ((physical-device cffi:foreign-pointer) (format keyword))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (format '%vk:format format :in :raw)
  (format-properties '(:struct %vk:format-properties) format-properties :out))

(defvk-get-struct-fun (get-physical-device-image-format-properties
                       %vk:get-physical-device-image-format-properties
                       "Represents [vkGetPhysicalDeviceImageFormatProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceImageFormatProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - FORMAT: <a description>
 - TYPE: <a description>
 - TILING: <a description>
 - USAGE: <a description>
 - FLAGS: (optional) <a description>

Returns:
  (CL:VALUES
    IMAGE-FORMAT-PROPERTIES
    RESULT)

See FORMAT
See IMAGE-CREATE-FLAGS
See IMAGE-FORMAT-PROPERTIES
See IMAGE-TILING
See IMAGE-TYPE
See IMAGE-USAGE-FLAGS
See PHYSICAL-DEVICE
See RESULT
"
                       ((physical-device cffi:foreign-pointer) (format keyword) (type keyword) (tiling keyword) (usage (or unsigned-byte list)))
                       (((flags nil) (or unsigned-byte list))))
  (physical-device '%vk:physical-device physical-device :in :handle)
  (format '%vk:format format :in :raw)
  (type '%vk:image-type type :in :raw)
  (tiling '%vk:image-tiling tiling :in :raw)
  (usage '%vk:image-usage-flags usage :in :raw)
  (flags '%vk:image-create-flags flags :in :raw :optional)
  (image-format-properties '(:struct %vk:image-format-properties) image-format-properties :out))

(defvk-create-handle-fun (create-device
                          %vk:create-device
                          "Represents [vkCreateDevice](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDevice.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    DEVICE
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See DEVICE-CREATE-INFO
See PHYSICAL-DEVICE
See RESULT
"
                          ((physical-device cffi:foreign-pointer) (create-info (or vk:device-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (create-info '(:struct %vk:device-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (device '%vk:device device :out :handle))

(defvk-simple-fun (destroy-device
                   %vk:destroy-device
                   "Represents [vkDestroyDevice](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyDevice.html).

Args:
 - DEVICE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
"
                   ()
                   (((device (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (enumerate-instance-version
                          %vk:enumerate-instance-version
                          "Represents [vkEnumerateInstanceVersion](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkEnumerateInstanceVersion.html).

Args:

Returns:
  (CL:VALUES
    UINT-3-2_T
    RESULT)

See RESULT
"
                          ()
                          ()
                          nil)
  (api-version :uint32 api-version :out))

(defvk-enumerate-fun (enumerate-instance-layer-properties
                      %vk:enumerate-instance-layer-properties
                      "Represents [vkEnumerateInstanceLayerProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkEnumerateInstanceLayerProperties.html).

Args:

Returns:
  (CL:VALUES
    UINT-3-2_T
    LAYER-PROPERTIES
    RESULT)

See LAYER-PROPERTIES
See RESULT
"
                      ()
                      ()
                      property-count
                      properties
                      nil)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:layer-properties) properties :out :list))

(defvk-enumerate-fun (enumerate-instance-extension-properties
                      %vk:enumerate-instance-extension-properties
                      "Represents [vkEnumerateInstanceExtensionProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkEnumerateInstanceExtensionProperties.html).

Args:
 - LAYER-NAME: (optional) <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    EXTENSION-PROPERTIES
    RESULT)

See EXTENSION-PROPERTIES
See RESULT
"
                      ()
                      (((layer-name "") string))
                      property-count
                      properties
                      nil)
  (layer-name :string layer-name :in :raw :optional)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:extension-properties) properties :out :list))

(defvk-enumerate-fun (enumerate-device-layer-properties
                      %vk:enumerate-device-layer-properties
                      "Represents [vkEnumerateDeviceLayerProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkEnumerateDeviceLayerProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    LAYER-PROPERTIES
    RESULT)

See LAYER-PROPERTIES
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer))
                      ()
                      property-count
                      properties
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:layer-properties) properties :out :list))

(defvk-enumerate-fun (enumerate-device-extension-properties
                      %vk:enumerate-device-extension-properties
                      "Represents [vkEnumerateDeviceExtensionProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkEnumerateDeviceExtensionProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - LAYER-NAME: (optional) <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    EXTENSION-PROPERTIES
    RESULT)

See EXTENSION-PROPERTIES
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer))
                      (((layer-name "") string))
                      property-count
                      properties
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (layer-name :string layer-name :in :raw :optional)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:extension-properties) properties :out :list))

(defvk-create-handle-fun (get-device-queue
                          %vk:get-device-queue
                          "Represents [vkGetDeviceQueue](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceQueue.html).

Args:
 - DEVICE: <a description>
 - QUEUE-FAMILY-INDEX: <a description>
 - QUEUE-INDEX: <a description>

Returns:
  (CL:VALUES
    QUEUE)

See DEVICE
See QUEUE
"
                          ((device cffi:foreign-pointer) (queue-family-index unsigned-byte) (queue-index unsigned-byte))
                          ()
                          t)
  (device '%vk:device device :in :handle)
  (queue-family-index :uint32 queue-family-index :in :raw)
  (queue-index :uint32 queue-index :in :raw)
  (queue '%vk:queue queue :out :handle))

(defvk-simple-fun (queue-submit
                   %vk:queue-submit
                   "Represents [vkQueueSubmit](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkQueueSubmit.html).

Args:
 - QUEUE: <a description>
 - SUBMITS: <a description>
 - FENCE: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See FENCE
See QUEUE
See RESULT
See SUBMIT-INFO
"
                   ((queue cffi:foreign-pointer) (submits list))
                   (((fence (cffi:null-pointer)) cffi:foreign-pointer))
                  nil)
  (queue '%vk:queue queue :in :handle)
  (submit-count :uint32 (length submits) :in :raw)
  (submits '(:struct %vk:submit-info) submits :in :list)
  (fence '%vk:fence fence :in :handle :optional))

(defvk-simple-fun (queue-wait-idle
                   %vk:queue-wait-idle
                   "Represents [vkQueueWaitIdle](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkQueueWaitIdle.html).

Args:
 - QUEUE: <a description>

Returns:
  (CL:VALUES
    RESULT)

See QUEUE
See RESULT
"
                   ((queue cffi:foreign-pointer))
                   ()
                  nil)
  (queue '%vk:queue queue :in :handle))

(defvk-simple-fun (device-wait-idle
                   %vk:device-wait-idle
                   "Represents [vkDeviceWaitIdle](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDeviceWaitIdle.html).

Args:
 - DEVICE: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle))

(defvk-create-handle-fun (allocate-memory
                          %vk:allocate-memory
                          "Represents [vkAllocateMemory](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkAllocateMemory.html).

Args:
 - DEVICE: <a description>
 - ALLOCATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    DEVICE-MEMORY
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See DEVICE-MEMORY
See MEMORY-ALLOCATE-INFO
See RESULT
"
                          ((device cffi:foreign-pointer) (allocate-info (or vk:memory-allocate-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (allocate-info '(:struct %vk:memory-allocate-info) allocate-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (memory '%vk:device-memory memory :out :handle))

(defvk-simple-fun (free-memory
                   %vk:free-memory
                   "Represents [vkFreeMemory](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkFreeMemory.html).

Args:
 - DEVICE: <a description>
 - MEMORY: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See DEVICE-MEMORY
"
                   ((device cffi:foreign-pointer))
                   (((memory (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (memory '%vk:device-memory memory :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (map-memory
                   %vk:map-memory
                   "Represents [vkMapMemory](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkMapMemory.html).

Args:
 - DEVICE: <a description>
 - MEMORY: <a description>
 - OFFSET: <a description>
 - SIZE: <a description>
 - P-DATA: <a description>
 - FLAGS: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See DEVICE-MEMORY
See DEVICE-SIZE
See MEMORY-MAP-FLAGS
See RESULT
"
                   ((device cffi:foreign-pointer) (memory cffi:foreign-pointer) (offset unsigned-byte) (size unsigned-byte) (p-data cffi:foreign-pointer))
                   (((flags nil) (or unsigned-byte list)))
                  nil)
  (device '%vk:device device :in :handle)
  (memory '%vk:device-memory memory :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (size '%vk:device-size size :in :raw)
  (flags '%vk:memory-map-flags flags :in :raw :optional)
  (p-data '(:pointer :void) p-data :in :handle))

(defvk-simple-fun (unmap-memory
                   %vk:unmap-memory
                   "Represents [vkUnmapMemory](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkUnmapMemory.html).

Args:
 - DEVICE: <a description>
 - MEMORY: <a description>

See DEVICE
See DEVICE-MEMORY
"
                   ((device cffi:foreign-pointer) (memory cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (memory '%vk:device-memory memory :in :handle))

(defvk-simple-fun (flush-mapped-memory-ranges
                   %vk:flush-mapped-memory-ranges
                   "Represents [vkFlushMappedMemoryRanges](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkFlushMappedMemoryRanges.html).

Args:
 - DEVICE: <a description>
 - MEMORY-RANGES: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See MAPPED-MEMORY-RANGE
See RESULT
"
                   ((device cffi:foreign-pointer) (memory-ranges list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (memory-range-count :uint32 (length memory-ranges) :in :raw)
  (memory-ranges '(:struct %vk:mapped-memory-range) memory-ranges :in :list))

(defvk-simple-fun (invalidate-mapped-memory-ranges
                   %vk:invalidate-mapped-memory-ranges
                   "Represents [vkInvalidateMappedMemoryRanges](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkInvalidateMappedMemoryRanges.html).

Args:
 - DEVICE: <a description>
 - MEMORY-RANGES: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See MAPPED-MEMORY-RANGE
See RESULT
"
                   ((device cffi:foreign-pointer) (memory-ranges list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (memory-range-count :uint32 (length memory-ranges) :in :raw)
  (memory-ranges '(:struct %vk:mapped-memory-range) memory-ranges :in :list))

(defvk-create-handle-fun (get-device-memory-commitment
                          %vk:get-device-memory-commitment
                          "Represents [vkGetDeviceMemoryCommitment](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceMemoryCommitment.html).

Args:
 - DEVICE: <a description>
 - MEMORY: <a description>

Returns:
  (CL:VALUES
    DEVICE-SIZE)

See DEVICE
See DEVICE-MEMORY
See DEVICE-SIZE
"
                          ((device cffi:foreign-pointer) (memory cffi:foreign-pointer))
                          ()
                          t)
  (device '%vk:device device :in :handle)
  (memory '%vk:device-memory memory :in :handle)
  (committed-memory-in-bytes '%vk:device-size committed-memory-in-bytes :out))

(defvk-get-struct-fun (get-buffer-memory-requirements
                       %vk:get-buffer-memory-requirements
                       "Represents [vkGetBufferMemoryRequirements](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetBufferMemoryRequirements.html).

Args:
 - DEVICE: <a description>
 - BUFFER: <a description>

Returns:
  (CL:VALUES
    MEMORY-REQUIREMENTS)

See BUFFER
See DEVICE
See MEMORY-REQUIREMENTS
"
                       ((device cffi:foreign-pointer) (buffer cffi:foreign-pointer))
                       ())
  (device '%vk:device device :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (memory-requirements '(:struct %vk:memory-requirements) memory-requirements :out))

(defvk-simple-fun (bind-buffer-memory
                   %vk:bind-buffer-memory
                   "Represents [vkBindBufferMemory](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkBindBufferMemory.html).

Args:
 - DEVICE: <a description>
 - BUFFER: <a description>
 - MEMORY: <a description>
 - MEMORY-OFFSET: <a description>

Returns:
  (CL:VALUES
    RESULT)

See BUFFER
See DEVICE
See DEVICE-MEMORY
See DEVICE-SIZE
See RESULT
"
                   ((device cffi:foreign-pointer) (buffer cffi:foreign-pointer) (memory cffi:foreign-pointer) (memory-offset unsigned-byte))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (memory '%vk:device-memory memory :in :handle)
  (memory-offset '%vk:device-size memory-offset :in :raw))

(defvk-get-struct-fun (get-image-memory-requirements
                       %vk:get-image-memory-requirements
                       "Represents [vkGetImageMemoryRequirements](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetImageMemoryRequirements.html).

Args:
 - DEVICE: <a description>
 - IMAGE: <a description>

Returns:
  (CL:VALUES
    MEMORY-REQUIREMENTS)

See DEVICE
See IMAGE
See MEMORY-REQUIREMENTS
"
                       ((device cffi:foreign-pointer) (image cffi:foreign-pointer))
                       ())
  (device '%vk:device device :in :handle)
  (image '%vk:image image :in :handle)
  (memory-requirements '(:struct %vk:memory-requirements) memory-requirements :out))

(defvk-simple-fun (bind-image-memory
                   %vk:bind-image-memory
                   "Represents [vkBindImageMemory](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkBindImageMemory.html).

Args:
 - DEVICE: <a description>
 - IMAGE: <a description>
 - MEMORY: <a description>
 - MEMORY-OFFSET: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See DEVICE-MEMORY
See DEVICE-SIZE
See IMAGE
See RESULT
"
                   ((device cffi:foreign-pointer) (image cffi:foreign-pointer) (memory cffi:foreign-pointer) (memory-offset unsigned-byte))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (image '%vk:image image :in :handle)
  (memory '%vk:device-memory memory :in :handle)
  (memory-offset '%vk:device-size memory-offset :in :raw))

(defvk-get-structs-fun (get-image-sparse-memory-requirements
                        %vk:get-image-sparse-memory-requirements
                        "Represents [vkGetImageSparseMemoryRequirements](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetImageSparseMemoryRequirements.html).

Args:
 - DEVICE: <a description>
 - IMAGE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    SPARSE-IMAGE-MEMORY-REQUIREMENTS)

See DEVICE
See IMAGE
See SPARSE-IMAGE-MEMORY-REQUIREMENTS
"
                        ((device cffi:foreign-pointer) (image cffi:foreign-pointer))
                        ()
                        sparse-memory-requirement-count
                        sparse-memory-requirements
                      t)
  (device '%vk:device device :in :handle)
  (image '%vk:image image :in :handle)
  (sparse-memory-requirement-count :uint32 sparse-memory-requirement-count :out)
  (sparse-memory-requirements '(:struct %vk:sparse-image-memory-requirements) sparse-memory-requirements :out :list))

(defvk-get-structs-fun (get-physical-device-sparse-image-format-properties
                        %vk:get-physical-device-sparse-image-format-properties
                        "Represents [vkGetPhysicalDeviceSparseImageFormatProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSparseImageFormatProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - FORMAT: <a description>
 - TYPE: <a description>
 - SAMPLES: <a description>
 - USAGE: <a description>
 - TILING: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    SPARSE-IMAGE-FORMAT-PROPERTIES)

See FORMAT
See IMAGE-TILING
See IMAGE-TYPE
See IMAGE-USAGE-FLAGS
See PHYSICAL-DEVICE
See SAMPLE-COUNT-FLAG-BITS
See SPARSE-IMAGE-FORMAT-PROPERTIES
"
                        ((physical-device cffi:foreign-pointer) (format keyword) (type keyword) (samples keyword) (usage (or unsigned-byte list)) (tiling keyword))
                        ()
                        property-count
                        properties
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (format '%vk:format format :in :raw)
  (type '%vk:image-type type :in :raw)
  (samples '%vk:sample-count-flag-bits samples :in :raw)
  (usage '%vk:image-usage-flags usage :in :raw)
  (tiling '%vk:image-tiling tiling :in :raw)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:sparse-image-format-properties) properties :out :list))

(defvk-simple-fun (queue-bind-sparse
                   %vk:queue-bind-sparse
                   "Represents [vkQueueBindSparse](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkQueueBindSparse.html).

Args:
 - QUEUE: <a description>
 - BIND-INFO: <a description>
 - FENCE: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See BIND-SPARSE-INFO
See FENCE
See QUEUE
See RESULT
"
                   ((queue cffi:foreign-pointer) (bind-info list))
                   (((fence (cffi:null-pointer)) cffi:foreign-pointer))
                  nil)
  (queue '%vk:queue queue :in :handle)
  (bind-info-count :uint32 (length bind-info) :in :raw)
  (bind-info '(:struct %vk:bind-sparse-info) bind-info :in :list)
  (fence '%vk:fence fence :in :handle :optional))

(defvk-create-handle-fun (create-fence
                          %vk:create-fence
                          "Represents [vkCreateFence](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateFence.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    FENCE
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See FENCE
See FENCE-CREATE-INFO
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:fence-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:fence-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (fence '%vk:fence fence :out :handle))

(defvk-simple-fun (destroy-fence
                   %vk:destroy-fence
                   "Represents [vkDestroyFence](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyFence.html).

Args:
 - DEVICE: <a description>
 - FENCE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See FENCE
"
                   ((device cffi:foreign-pointer))
                   (((fence (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (fence '%vk:fence fence :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (reset-fences
                   %vk:reset-fences
                   "Represents [vkResetFences](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkResetFences.html).

Args:
 - DEVICE: <a description>
 - FENCES: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See FENCE
See RESULT
"
                   ((device cffi:foreign-pointer) (fences list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (fence-count :uint32 (length fences) :in :raw)
  (fences '%vk:fence fences :in :handle :list))

(defvk-simple-fun (get-fence-status
                   %vk:get-fence-status
                   "Represents [vkGetFenceStatus](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetFenceStatus.html).

Args:
 - DEVICE: <a description>
 - FENCE: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See FENCE
See RESULT
"
                   ((device cffi:foreign-pointer) (fence cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (fence '%vk:fence fence :in :handle))

(defvk-simple-fun (wait-for-fences
                   %vk:wait-for-fences
                   "Represents [vkWaitForFences](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkWaitForFences.html).

Args:
 - DEVICE: <a description>
 - FENCES: <a description>
 - WAIT-ALL: <a description>
 - TIMEOUT: <a description>

Returns:
  (CL:VALUES
    RESULT)

See BOOL32
See DEVICE
See FENCE
See RESULT
"
                   ((device cffi:foreign-pointer) (fences list) (wait-all boolean) (timeout unsigned-byte))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (fence-count :uint32 (length fences) :in :raw)
  (fences '%vk:fence fences :in :handle :list)
  (wait-all '%vk:bool32 wait-all :in :raw)
  (timeout :uint64 timeout :in :raw))

(defvk-create-handle-fun (create-semaphore
                          %vk:create-semaphore
                          "Represents [vkCreateSemaphore](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateSemaphore.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SEMAPHORE
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RESULT
See SEMAPHORE
See SEMAPHORE-CREATE-INFO
"
                          ((device cffi:foreign-pointer) (create-info (or vk:semaphore-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:semaphore-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (semaphore '%vk:semaphore semaphore :out :handle))

(defvk-simple-fun (destroy-semaphore
                   %vk:destroy-semaphore
                   "Represents [vkDestroySemaphore](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroySemaphore.html).

Args:
 - DEVICE: <a description>
 - SEMAPHORE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See SEMAPHORE
"
                   ((device cffi:foreign-pointer))
                   (((semaphore (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (semaphore '%vk:semaphore semaphore :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (create-event
                          %vk:create-event
                          "Represents [vkCreateEvent](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateEvent.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    EVENT
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See EVENT
See EVENT-CREATE-INFO
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:event-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:event-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (event '%vk:event event :out :handle))

(defvk-simple-fun (destroy-event
                   %vk:destroy-event
                   "Represents [vkDestroyEvent](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyEvent.html).

Args:
 - DEVICE: <a description>
 - EVENT: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See EVENT
"
                   ((device cffi:foreign-pointer))
                   (((event (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (event '%vk:event event :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (get-event-status
                   %vk:get-event-status
                   "Represents [vkGetEventStatus](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetEventStatus.html).

Args:
 - DEVICE: <a description>
 - EVENT: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See EVENT
See RESULT
"
                   ((device cffi:foreign-pointer) (event cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (event '%vk:event event :in :handle))

(defvk-simple-fun (set-event
                   %vk:set-event
                   "Represents [vkSetEvent](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkSetEvent.html).

Args:
 - DEVICE: <a description>
 - EVENT: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See EVENT
See RESULT
"
                   ((device cffi:foreign-pointer) (event cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (event '%vk:event event :in :handle))

(defvk-simple-fun (reset-event
                   %vk:reset-event
                   "Represents [vkResetEvent](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkResetEvent.html).

Args:
 - DEVICE: <a description>
 - EVENT: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See EVENT
See RESULT
"
                   ((device cffi:foreign-pointer) (event cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (event '%vk:event event :in :handle))

(defvk-create-handle-fun (create-query-pool
                          %vk:create-query-pool
                          "Represents [vkCreateQueryPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateQueryPool.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    QUERY-POOL
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See QUERY-POOL
See QUERY-POOL-CREATE-INFO
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:query-pool-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:query-pool-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (query-pool '%vk:query-pool query-pool :out :handle))

(defvk-simple-fun (destroy-query-pool
                   %vk:destroy-query-pool
                   "Represents [vkDestroyQueryPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyQueryPool.html).

Args:
 - DEVICE: <a description>
 - QUERY-POOL: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See QUERY-POOL
"
                   ((device cffi:foreign-pointer))
                   (((query-pool (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (query-pool '%vk:query-pool query-pool :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (get-query-pool-results
                   %vk:get-query-pool-results
                   "Represents [vkGetQueryPoolResults](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetQueryPoolResults.html).

Args:
 - DEVICE: <a description>
 - QUERY-POOL: <a description>
 - FIRST-QUERY: <a description>
 - QUERY-COUNT: <a description>
 - DATA-SIZE: <a description>
 - DATA: <a description>
 - STRIDE: <a description>
 - FLAGS: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See DEVICE-SIZE
See QUERY-POOL
See QUERY-RESULT-FLAGS
See RESULT
"
                   ((device cffi:foreign-pointer) (query-pool cffi:foreign-pointer) (first-query unsigned-byte) (query-count unsigned-byte) (data-size unsigned-byte) (data cffi:foreign-pointer) (stride unsigned-byte))
                   (((flags nil) (or unsigned-byte list)))
                  nil)
  (device '%vk:device device :in :handle)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (first-query :uint32 first-query :in :raw)
  (query-count :uint32 query-count :in :raw)
  (data-size '%vk:size-t data-size :in :raw)
  (data '(:pointer :void) data :in :handle)
  (stride '%vk:device-size stride :in :raw)
  (flags '%vk:query-result-flags flags :in :raw :optional))

(defvk-simple-fun (reset-query-pool
                   %vk:reset-query-pool
                   "Represents [vkResetQueryPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkResetQueryPool.html).

Args:
 - DEVICE: <a description>
 - QUERY-POOL: <a description>
 - FIRST-QUERY: <a description>
 - QUERY-COUNT: <a description>

See DEVICE
See QUERY-POOL
"
                   ((device cffi:foreign-pointer) (query-pool cffi:foreign-pointer) (first-query unsigned-byte) (query-count unsigned-byte))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (first-query :uint32 first-query :in :raw)
  (query-count :uint32 query-count :in :raw))

(defvk-simple-fun (reset-query-pool-ext
                   %vk:reset-query-pool-ext
                   "Represents [vkResetQueryPoolEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkResetQueryPoolEXT.html).

Args:
 - DEVICE: <a description>
 - QUERY-POOL: <a description>
 - FIRST-QUERY: <a description>
 - QUERY-COUNT: <a description>

See DEVICE
See QUERY-POOL
"
                   ((device cffi:foreign-pointer) (query-pool cffi:foreign-pointer) (first-query unsigned-byte) (query-count unsigned-byte))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (first-query :uint32 first-query :in :raw)
  (query-count :uint32 query-count :in :raw))

(defvk-create-handle-fun (create-buffer
                          %vk:create-buffer
                          "Represents [vkCreateBuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateBuffer.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    BUFFER
    RESULT)

See ALLOCATION-CALLBACKS
See BUFFER
See BUFFER-CREATE-INFO
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:buffer-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:buffer-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (buffer '%vk:buffer buffer :out :handle))

(defvk-simple-fun (destroy-buffer
                   %vk:destroy-buffer
                   "Represents [vkDestroyBuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyBuffer.html).

Args:
 - DEVICE: <a description>
 - BUFFER: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See BUFFER
See DEVICE
"
                   ((device cffi:foreign-pointer))
                   (((buffer (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (buffer '%vk:buffer buffer :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (create-buffer-view
                          %vk:create-buffer-view
                          "Represents [vkCreateBufferView](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateBufferView.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    BUFFER-VIEW
    RESULT)

See ALLOCATION-CALLBACKS
See BUFFER-VIEW
See BUFFER-VIEW-CREATE-INFO
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:buffer-view-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:buffer-view-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (view '%vk:buffer-view view :out :handle))

(defvk-simple-fun (destroy-buffer-view
                   %vk:destroy-buffer-view
                   "Represents [vkDestroyBufferView](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyBufferView.html).

Args:
 - DEVICE: <a description>
 - BUFFER-VIEW: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See BUFFER-VIEW
See DEVICE
"
                   ((device cffi:foreign-pointer))
                   (((buffer-view (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (buffer-view '%vk:buffer-view buffer-view :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (create-image
                          %vk:create-image
                          "Represents [vkCreateImage](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateImage.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    IMAGE
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See IMAGE
See IMAGE-CREATE-INFO
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:image-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:image-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (image '%vk:image image :out :handle))

(defvk-simple-fun (destroy-image
                   %vk:destroy-image
                   "Represents [vkDestroyImage](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyImage.html).

Args:
 - DEVICE: <a description>
 - IMAGE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See IMAGE
"
                   ((device cffi:foreign-pointer))
                   (((image (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (image '%vk:image image :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-get-struct-fun (get-image-subresource-layout
                       %vk:get-image-subresource-layout
                       "Represents [vkGetImageSubresourceLayout](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetImageSubresourceLayout.html).

Args:
 - DEVICE: <a description>
 - IMAGE: <a description>
 - SUBRESOURCE: <a description>

Returns:
  (CL:VALUES
    SUBRESOURCE-LAYOUT)

See DEVICE
See IMAGE
See IMAGE-SUBRESOURCE
See SUBRESOURCE-LAYOUT
"
                       ((device cffi:foreign-pointer) (image cffi:foreign-pointer) (subresource (or vk:image-subresource cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (image '%vk:image image :in :handle)
  (subresource '(:struct %vk:image-subresource) subresource :in)
  (layout '(:struct %vk:subresource-layout) layout :out))

(defvk-create-handle-fun (create-image-view
                          %vk:create-image-view
                          "Represents [vkCreateImageView](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateImageView.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    IMAGE-VIEW
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See IMAGE-VIEW
See IMAGE-VIEW-CREATE-INFO
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:image-view-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:image-view-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (view '%vk:image-view view :out :handle))

(defvk-simple-fun (destroy-image-view
                   %vk:destroy-image-view
                   "Represents [vkDestroyImageView](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyImageView.html).

Args:
 - DEVICE: <a description>
 - IMAGE-VIEW: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See IMAGE-VIEW
"
                   ((device cffi:foreign-pointer))
                   (((image-view (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (image-view '%vk:image-view image-view :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (create-shader-module
                          %vk:create-shader-module
                          "Represents [vkCreateShaderModule](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateShaderModule.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SHADER-MODULE
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RESULT
See SHADER-MODULE
See SHADER-MODULE-CREATE-INFO
"
                          ((device cffi:foreign-pointer) (create-info (or vk:shader-module-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:shader-module-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (shader-module '%vk:shader-module shader-module :out :handle))

(defvk-simple-fun (destroy-shader-module
                   %vk:destroy-shader-module
                   "Represents [vkDestroyShaderModule](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyShaderModule.html).

Args:
 - DEVICE: <a description>
 - SHADER-MODULE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See SHADER-MODULE
"
                   ((device cffi:foreign-pointer))
                   (((shader-module (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (shader-module '%vk:shader-module shader-module :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (create-pipeline-cache
                          %vk:create-pipeline-cache
                          "Represents [vkCreatePipelineCache](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreatePipelineCache.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    PIPELINE-CACHE
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See PIPELINE-CACHE
See PIPELINE-CACHE-CREATE-INFO
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:pipeline-cache-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:pipeline-cache-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (pipeline-cache '%vk:pipeline-cache pipeline-cache :out :handle))

(defvk-simple-fun (destroy-pipeline-cache
                   %vk:destroy-pipeline-cache
                   "Represents [vkDestroyPipelineCache](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyPipelineCache.html).

Args:
 - DEVICE: <a description>
 - PIPELINE-CACHE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See PIPELINE-CACHE
"
                   ((device cffi:foreign-pointer))
                   (((pipeline-cache (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (pipeline-cache '%vk:pipeline-cache pipeline-cache :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (get-pipeline-cache-data
                          %vk:get-pipeline-cache-data
                          "Represents [vkGetPipelineCacheData](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPipelineCacheData.html).

Args:
 - DEVICE: <a description>
 - PIPELINE-CACHE: <a description>
 - DATA: (optional) <a description>

Returns:
  (CL:VALUES
    SIZE_T
    RESULT)

See DEVICE
See PIPELINE-CACHE
See RESULT
"
                          ((device cffi:foreign-pointer) (pipeline-cache cffi:foreign-pointer))
                          (((data nil) cffi:foreign-pointer))
                          nil)
  (device '%vk:device device :in :handle)
  (pipeline-cache '%vk:pipeline-cache pipeline-cache :in :handle)
  (data-size '%vk:size-t data-size :out)
  (data '(:pointer :void) data :in :handle :optional))

(defvk-simple-fun (merge-pipeline-caches
                   %vk:merge-pipeline-caches
                   "Represents [vkMergePipelineCaches](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkMergePipelineCaches.html).

Args:
 - DEVICE: <a description>
 - DST-CACHE: <a description>
 - SRC-CACHES: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See PIPELINE-CACHE
See RESULT
"
                   ((device cffi:foreign-pointer) (dst-cache cffi:foreign-pointer) (src-caches list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (dst-cache '%vk:pipeline-cache dst-cache :in :handle)
  (src-cache-count :uint32 (length src-caches) :in :raw)
  (src-caches '%vk:pipeline-cache src-caches :in :handle :list))

(defvk-create-handles-fun (create-graphics-pipelines
                           %vk:create-graphics-pipelines
                           "Represents [vkCreateGraphicsPipelines](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateGraphicsPipelines.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFOS: <a description>
 - PIPELINE-CACHE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    PIPELINE
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See GRAPHICS-PIPELINE-CREATE-INFO
See PIPELINE
See PIPELINE-CACHE
See RESULT
"
                           ((device cffi:foreign-pointer) (create-infos list))
                           (((pipeline-cache (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                           (length create-infos))
  (device '%vk:device device :in :handle)
  (pipeline-cache '%vk:pipeline-cache pipeline-cache :in :handle :optional)
  (create-info-count :uint32 (length create-infos) :in :raw)
  (create-infos '(:struct %vk:graphics-pipeline-create-info) create-infos :in :list)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (pipelines '%vk:pipeline pipelines :out :handle :list))

(defvk-create-handles-fun (create-compute-pipelines
                           %vk:create-compute-pipelines
                           "Represents [vkCreateComputePipelines](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateComputePipelines.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFOS: <a description>
 - PIPELINE-CACHE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    PIPELINE
    RESULT)

See ALLOCATION-CALLBACKS
See COMPUTE-PIPELINE-CREATE-INFO
See DEVICE
See PIPELINE
See PIPELINE-CACHE
See RESULT
"
                           ((device cffi:foreign-pointer) (create-infos list))
                           (((pipeline-cache (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                           (length create-infos))
  (device '%vk:device device :in :handle)
  (pipeline-cache '%vk:pipeline-cache pipeline-cache :in :handle :optional)
  (create-info-count :uint32 (length create-infos) :in :raw)
  (create-infos '(:struct %vk:compute-pipeline-create-info) create-infos :in :list)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (pipelines '%vk:pipeline pipelines :out :handle :list))

(defvk-simple-fun (destroy-pipeline
                   %vk:destroy-pipeline
                   "Represents [vkDestroyPipeline](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyPipeline.html).

Args:
 - DEVICE: <a description>
 - PIPELINE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See PIPELINE
"
                   ((device cffi:foreign-pointer))
                   (((pipeline (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (pipeline '%vk:pipeline pipeline :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (create-pipeline-layout
                          %vk:create-pipeline-layout
                          "Represents [vkCreatePipelineLayout](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreatePipelineLayout.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    PIPELINE-LAYOUT
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See PIPELINE-LAYOUT
See PIPELINE-LAYOUT-CREATE-INFO
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:pipeline-layout-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:pipeline-layout-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (pipeline-layout '%vk:pipeline-layout pipeline-layout :out :handle))

(defvk-simple-fun (destroy-pipeline-layout
                   %vk:destroy-pipeline-layout
                   "Represents [vkDestroyPipelineLayout](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyPipelineLayout.html).

Args:
 - DEVICE: <a description>
 - PIPELINE-LAYOUT: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See PIPELINE-LAYOUT
"
                   ((device cffi:foreign-pointer))
                   (((pipeline-layout (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (pipeline-layout '%vk:pipeline-layout pipeline-layout :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (create-sampler
                          %vk:create-sampler
                          "Represents [vkCreateSampler](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateSampler.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SAMPLER
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RESULT
See SAMPLER
See SAMPLER-CREATE-INFO
"
                          ((device cffi:foreign-pointer) (create-info (or vk:sampler-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:sampler-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (sampler '%vk:sampler sampler :out :handle))

(defvk-simple-fun (destroy-sampler
                   %vk:destroy-sampler
                   "Represents [vkDestroySampler](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroySampler.html).

Args:
 - DEVICE: <a description>
 - SAMPLER: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See SAMPLER
"
                   ((device cffi:foreign-pointer))
                   (((sampler (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (sampler '%vk:sampler sampler :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (create-descriptor-set-layout
                          %vk:create-descriptor-set-layout
                          "Represents [vkCreateDescriptorSetLayout](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDescriptorSetLayout.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    DESCRIPTOR-SET-LAYOUT
    RESULT)

See ALLOCATION-CALLBACKS
See DESCRIPTOR-SET-LAYOUT
See DESCRIPTOR-SET-LAYOUT-CREATE-INFO
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:descriptor-set-layout-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:descriptor-set-layout-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (set-layout '%vk:descriptor-set-layout set-layout :out :handle))

(defvk-simple-fun (destroy-descriptor-set-layout
                   %vk:destroy-descriptor-set-layout
                   "Represents [vkDestroyDescriptorSetLayout](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyDescriptorSetLayout.html).

Args:
 - DEVICE: <a description>
 - DESCRIPTOR-SET-LAYOUT: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DESCRIPTOR-SET-LAYOUT
See DEVICE
"
                   ((device cffi:foreign-pointer))
                   (((descriptor-set-layout (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (descriptor-set-layout '%vk:descriptor-set-layout descriptor-set-layout :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (create-descriptor-pool
                          %vk:create-descriptor-pool
                          "Represents [vkCreateDescriptorPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDescriptorPool.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    DESCRIPTOR-POOL
    RESULT)

See ALLOCATION-CALLBACKS
See DESCRIPTOR-POOL
See DESCRIPTOR-POOL-CREATE-INFO
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:descriptor-pool-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:descriptor-pool-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (descriptor-pool '%vk:descriptor-pool descriptor-pool :out :handle))

(defvk-simple-fun (destroy-descriptor-pool
                   %vk:destroy-descriptor-pool
                   "Represents [vkDestroyDescriptorPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyDescriptorPool.html).

Args:
 - DEVICE: <a description>
 - DESCRIPTOR-POOL: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DESCRIPTOR-POOL
See DEVICE
"
                   ((device cffi:foreign-pointer))
                   (((descriptor-pool (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (descriptor-pool '%vk:descriptor-pool descriptor-pool :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (reset-descriptor-pool
                   %vk:reset-descriptor-pool
                   "Represents [vkResetDescriptorPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkResetDescriptorPool.html).

Args:
 - DEVICE: <a description>
 - DESCRIPTOR-POOL: <a description>
 - FLAGS: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See DESCRIPTOR-POOL
See DESCRIPTOR-POOL-RESET-FLAGS
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (descriptor-pool cffi:foreign-pointer))
                   (((flags nil) (or unsigned-byte list)))
                  nil)
  (device '%vk:device device :in :handle)
  (descriptor-pool '%vk:descriptor-pool descriptor-pool :in :handle)
  (flags '%vk:descriptor-pool-reset-flags flags :in :raw :optional))

(defvk-create-handles-fun (allocate-descriptor-sets
                           %vk:allocate-descriptor-sets
                           "Represents [vkAllocateDescriptorSets](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkAllocateDescriptorSets.html).

Args:
 - DEVICE: <a description>
 - ALLOCATE-INFO: <a description>

Returns:
  (CL:VALUES
    DESCRIPTOR-SET
    RESULT)

See DESCRIPTOR-SET
See DESCRIPTOR-SET-ALLOCATE-INFO
See DEVICE
See RESULT
"
                           ((device cffi:foreign-pointer) (allocate-info (or vk:descriptor-set-allocate-info cffi:foreign-pointer)))
                           ()
                           (length (vk:set-layouts allocate-info)))
  (device '%vk:device device :in :handle)
  (allocate-info '(:struct %vk:descriptor-set-allocate-info) allocate-info :in)
  (descriptor-sets '%vk:descriptor-set descriptor-sets :out :handle :list))

(defvk-simple-fun (free-descriptor-sets
                   %vk:free-descriptor-sets
                   "Represents [vkFreeDescriptorSets](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkFreeDescriptorSets.html).

Args:
 - DEVICE: <a description>
 - DESCRIPTOR-POOL: <a description>
 - DESCRIPTOR-SETS: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DESCRIPTOR-POOL
See DESCRIPTOR-SET
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (descriptor-pool cffi:foreign-pointer) (descriptor-sets list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (descriptor-pool '%vk:descriptor-pool descriptor-pool :in :handle)
  (descriptor-set-count :uint32 (length descriptor-sets) :in :raw)
  (descriptor-sets '%vk:descriptor-set descriptor-sets :in :handle :list))

(defvk-simple-fun (update-descriptor-sets
                   %vk:update-descriptor-sets
                   "Represents [vkUpdateDescriptorSets](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkUpdateDescriptorSets.html).

Args:
 - DEVICE: <a description>
 - DESCRIPTOR-WRITES: <a description>
 - DESCRIPTOR-COPIES: <a description>

See COPY-DESCRIPTOR-SET
See DEVICE
See WRITE-DESCRIPTOR-SET
"
                   ((device cffi:foreign-pointer) (descriptor-writes list) (descriptor-copies list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (descriptor-write-count :uint32 (length descriptor-writes) :in :raw)
  (descriptor-writes '(:struct %vk:write-descriptor-set) descriptor-writes :in :list)
  (descriptor-copy-count :uint32 (length descriptor-copies) :in :raw)
  (descriptor-copies '(:struct %vk:copy-descriptor-set) descriptor-copies :in :list))

(defvk-create-handle-fun (create-framebuffer
                          %vk:create-framebuffer
                          "Represents [vkCreateFramebuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateFramebuffer.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    FRAMEBUFFER
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See FRAMEBUFFER
See FRAMEBUFFER-CREATE-INFO
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:framebuffer-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:framebuffer-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (framebuffer '%vk:framebuffer framebuffer :out :handle))

(defvk-simple-fun (destroy-framebuffer
                   %vk:destroy-framebuffer
                   "Represents [vkDestroyFramebuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyFramebuffer.html).

Args:
 - DEVICE: <a description>
 - FRAMEBUFFER: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See FRAMEBUFFER
"
                   ((device cffi:foreign-pointer))
                   (((framebuffer (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (framebuffer '%vk:framebuffer framebuffer :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (create-render-pass
                          %vk:create-render-pass
                          "Represents [vkCreateRenderPass](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateRenderPass.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    RENDER-PASS
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RENDER-PASS
See RENDER-PASS-CREATE-INFO
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:render-pass-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:render-pass-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (render-pass '%vk:render-pass render-pass :out :handle))

(defvk-simple-fun (destroy-render-pass
                   %vk:destroy-render-pass
                   "Represents [vkDestroyRenderPass](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyRenderPass.html).

Args:
 - DEVICE: <a description>
 - RENDER-PASS: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See RENDER-PASS
"
                   ((device cffi:foreign-pointer))
                   (((render-pass (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (render-pass '%vk:render-pass render-pass :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-get-struct-fun (get-render-area-granularity
                       %vk:get-render-area-granularity
                       "Represents [vkGetRenderAreaGranularity](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetRenderAreaGranularity.html).

Args:
 - DEVICE: <a description>
 - RENDER-PASS: <a description>

Returns:
  (CL:VALUES
    EXTENT-2D)

See DEVICE
See EXTENT-2D
See RENDER-PASS
"
                       ((device cffi:foreign-pointer) (render-pass cffi:foreign-pointer))
                       ())
  (device '%vk:device device :in :handle)
  (render-pass '%vk:render-pass render-pass :in :handle)
  (granularity '(:struct %vk:extent-2d) granularity :out))

(defvk-create-handle-fun (create-command-pool
                          %vk:create-command-pool
                          "Represents [vkCreateCommandPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateCommandPool.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    COMMAND-POOL
    RESULT)

See ALLOCATION-CALLBACKS
See COMMAND-POOL
See COMMAND-POOL-CREATE-INFO
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:command-pool-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:command-pool-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (command-pool '%vk:command-pool command-pool :out :handle))

(defvk-simple-fun (destroy-command-pool
                   %vk:destroy-command-pool
                   "Represents [vkDestroyCommandPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyCommandPool.html).

Args:
 - DEVICE: <a description>
 - COMMAND-POOL: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See COMMAND-POOL
See DEVICE
"
                   ((device cffi:foreign-pointer))
                   (((command-pool (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (command-pool '%vk:command-pool command-pool :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (reset-command-pool
                   %vk:reset-command-pool
                   "Represents [vkResetCommandPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkResetCommandPool.html).

Args:
 - DEVICE: <a description>
 - COMMAND-POOL: <a description>
 - FLAGS: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See COMMAND-POOL
See COMMAND-POOL-RESET-FLAGS
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (command-pool cffi:foreign-pointer))
                   (((flags nil) (or unsigned-byte list)))
                  nil)
  (device '%vk:device device :in :handle)
  (command-pool '%vk:command-pool command-pool :in :handle)
  (flags '%vk:command-pool-reset-flags flags :in :raw :optional))

(defvk-create-handles-fun (allocate-command-buffers
                           %vk:allocate-command-buffers
                           "Represents [vkAllocateCommandBuffers](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkAllocateCommandBuffers.html).

Args:
 - DEVICE: <a description>
 - ALLOCATE-INFO: <a description>

Returns:
  (CL:VALUES
    COMMAND-BUFFER
    RESULT)

See COMMAND-BUFFER
See COMMAND-BUFFER-ALLOCATE-INFO
See DEVICE
See RESULT
"
                           ((device cffi:foreign-pointer) (allocate-info (or vk:command-buffer-allocate-info cffi:foreign-pointer)))
                           ()
                           (vk:command-buffer-count allocate-info))
  (device '%vk:device device :in :handle)
  (allocate-info '(:struct %vk:command-buffer-allocate-info) allocate-info :in)
  (command-buffers '%vk:command-buffer command-buffers :out :handle :list))

(defvk-simple-fun (free-command-buffers
                   %vk:free-command-buffers
                   "Represents [vkFreeCommandBuffers](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkFreeCommandBuffers.html).

Args:
 - DEVICE: <a description>
 - COMMAND-POOL: <a description>
 - COMMAND-BUFFERS: <a description>

See COMMAND-BUFFER
See COMMAND-POOL
See DEVICE
"
                   ((device cffi:foreign-pointer) (command-pool cffi:foreign-pointer) (command-buffers list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (command-pool '%vk:command-pool command-pool :in :handle)
  (command-buffer-count :uint32 (length command-buffers) :in :raw)
  (command-buffers '%vk:command-buffer command-buffers :in :handle :list))

(defvk-simple-fun (begin-command-buffer
                   %vk:begin-command-buffer
                   "Represents [vkBeginCommandBuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkBeginCommandBuffer.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BEGIN-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See COMMAND-BUFFER
See COMMAND-BUFFER-BEGIN-INFO
See RESULT
"
                   ((command-buffer cffi:foreign-pointer) (begin-info (or vk:command-buffer-begin-info cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (begin-info '(:struct %vk:command-buffer-begin-info) begin-info :in))

(defvk-simple-fun (end-command-buffer
                   %vk:end-command-buffer
                   "Represents [vkEndCommandBuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkEndCommandBuffer.html).

Args:
 - COMMAND-BUFFER: <a description>

Returns:
  (CL:VALUES
    RESULT)

See COMMAND-BUFFER
See RESULT
"
                   ((command-buffer cffi:foreign-pointer))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle))

(defvk-simple-fun (reset-command-buffer
                   %vk:reset-command-buffer
                   "Represents [vkResetCommandBuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkResetCommandBuffer.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FLAGS: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See COMMAND-BUFFER
See COMMAND-BUFFER-RESET-FLAGS
See RESULT
"
                   ((command-buffer cffi:foreign-pointer))
                   (((flags nil) (or unsigned-byte list)))
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (flags '%vk:command-buffer-reset-flags flags :in :raw :optional))

(defvk-simple-fun (cmd-bind-pipeline
                   %vk:cmd-bind-pipeline
                   "Represents [vkCmdBindPipeline](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBindPipeline.html).

Args:
 - COMMAND-BUFFER: <a description>
 - PIPELINE-BIND-POINT: <a description>
 - PIPELINE: <a description>

See COMMAND-BUFFER
See PIPELINE
See PIPELINE-BIND-POINT
"
                   ((command-buffer cffi:foreign-pointer) (pipeline-bind-point keyword) (pipeline cffi:foreign-pointer))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (pipeline-bind-point '%vk:pipeline-bind-point pipeline-bind-point :in :raw)
  (pipeline '%vk:pipeline pipeline :in :handle))

(defvk-simple-fun (cmd-set-viewport
                   %vk:cmd-set-viewport
                   "Represents [vkCmdSetViewport](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetViewport.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-VIEWPORT: <a description>
 - VIEWPORTS: <a description>

See COMMAND-BUFFER
See VIEWPORT
"
                   ((command-buffer cffi:foreign-pointer) (first-viewport unsigned-byte) (viewports list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-viewport :uint32 first-viewport :in :raw)
  (viewport-count :uint32 (length viewports) :in :raw)
  (viewports '(:struct %vk:viewport) viewports :in :list))

(defvk-simple-fun (cmd-set-scissor
                   %vk:cmd-set-scissor
                   "Represents [vkCmdSetScissor](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetScissor.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-SCISSOR: <a description>
 - SCISSORS: <a description>

See COMMAND-BUFFER
See RECT-2D
"
                   ((command-buffer cffi:foreign-pointer) (first-scissor unsigned-byte) (scissors list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-scissor :uint32 first-scissor :in :raw)
  (scissor-count :uint32 (length scissors) :in :raw)
  (scissors '(:struct %vk:rect-2d) scissors :in :list))

(defvk-simple-fun (cmd-set-line-width
                   %vk:cmd-set-line-width
                   "Represents [vkCmdSetLineWidth](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetLineWidth.html).

Args:
 - COMMAND-BUFFER: <a description>
 - LINE-WIDTH: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (line-width real))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (line-width :float line-width :in :raw))

(defvk-simple-fun (cmd-set-depth-bias
                   %vk:cmd-set-depth-bias
                   "Represents [vkCmdSetDepthBias](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetDepthBias.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DEPTH-BIAS-CONSTANT-FACTOR: <a description>
 - DEPTH-BIAS-CLAMP: <a description>
 - DEPTH-BIAS-SLOPE-FACTOR: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (depth-bias-constant-factor real) (depth-bias-clamp real) (depth-bias-slope-factor real))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (depth-bias-constant-factor :float depth-bias-constant-factor :in :raw)
  (depth-bias-clamp :float depth-bias-clamp :in :raw)
  (depth-bias-slope-factor :float depth-bias-slope-factor :in :raw))

(defvk-simple-fun (cmd-set-blend-constants
                   %vk:cmd-set-blend-constants
                   "Represents [vkCmdSetBlendConstants](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetBlendConstants.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BLEND-CONSTANTS: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (blend-constants real))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (blend-constants :float blend-constants :in :raw))

(defvk-simple-fun (cmd-set-depth-bounds
                   %vk:cmd-set-depth-bounds
                   "Represents [vkCmdSetDepthBounds](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetDepthBounds.html).

Args:
 - COMMAND-BUFFER: <a description>
 - MIN-DEPTH-BOUNDS: <a description>
 - MAX-DEPTH-BOUNDS: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (min-depth-bounds real) (max-depth-bounds real))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (min-depth-bounds :float min-depth-bounds :in :raw)
  (max-depth-bounds :float max-depth-bounds :in :raw))

(defvk-simple-fun (cmd-set-stencil-compare-mask
                   %vk:cmd-set-stencil-compare-mask
                   "Represents [vkCmdSetStencilCompareMask](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetStencilCompareMask.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FACE-MASK: <a description>
 - COMPARE-MASK: <a description>

See COMMAND-BUFFER
See STENCIL-FACE-FLAGS
"
                   ((command-buffer cffi:foreign-pointer) (face-mask (or unsigned-byte list)) (compare-mask unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (face-mask '%vk:stencil-face-flags face-mask :in :raw)
  (compare-mask :uint32 compare-mask :in :raw))

(defvk-simple-fun (cmd-set-stencil-write-mask
                   %vk:cmd-set-stencil-write-mask
                   "Represents [vkCmdSetStencilWriteMask](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetStencilWriteMask.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FACE-MASK: <a description>
 - WRITE-MASK: <a description>

See COMMAND-BUFFER
See STENCIL-FACE-FLAGS
"
                   ((command-buffer cffi:foreign-pointer) (face-mask (or unsigned-byte list)) (write-mask unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (face-mask '%vk:stencil-face-flags face-mask :in :raw)
  (write-mask :uint32 write-mask :in :raw))

(defvk-simple-fun (cmd-set-stencil-reference
                   %vk:cmd-set-stencil-reference
                   "Represents [vkCmdSetStencilReference](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetStencilReference.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FACE-MASK: <a description>
 - REFERENCE: <a description>

See COMMAND-BUFFER
See STENCIL-FACE-FLAGS
"
                   ((command-buffer cffi:foreign-pointer) (face-mask (or unsigned-byte list)) (reference unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (face-mask '%vk:stencil-face-flags face-mask :in :raw)
  (reference :uint32 reference :in :raw))

(defvk-simple-fun (cmd-bind-descriptor-sets
                   %vk:cmd-bind-descriptor-sets
                   "Represents [vkCmdBindDescriptorSets](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBindDescriptorSets.html).

Args:
 - COMMAND-BUFFER: <a description>
 - PIPELINE-BIND-POINT: <a description>
 - LAYOUT: <a description>
 - FIRST-SET: <a description>
 - DESCRIPTOR-SETS: <a description>
 - DYNAMIC-OFFSETS: <a description>

See COMMAND-BUFFER
See DESCRIPTOR-SET
See PIPELINE-BIND-POINT
See PIPELINE-LAYOUT
"
                   ((command-buffer cffi:foreign-pointer) (pipeline-bind-point keyword) (layout cffi:foreign-pointer) (first-set unsigned-byte) (descriptor-sets list) (dynamic-offsets list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (pipeline-bind-point '%vk:pipeline-bind-point pipeline-bind-point :in :raw)
  (layout '%vk:pipeline-layout layout :in :handle)
  (first-set :uint32 first-set :in :raw)
  (descriptor-set-count :uint32 (length descriptor-sets) :in :raw)
  (descriptor-sets '%vk:descriptor-set descriptor-sets :in :handle :list)
  (dynamic-offset-count :uint32 (length dynamic-offsets) :in :raw)
  (dynamic-offsets :uint32 dynamic-offsets :in :list))

(defvk-simple-fun (cmd-bind-index-buffer
                   %vk:cmd-bind-index-buffer
                   "Represents [vkCmdBindIndexBuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBindIndexBuffer.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - INDEX-TYPE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
See INDEX-TYPE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (index-type keyword))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (index-type '%vk:index-type index-type :in :raw))

(defvk-simple-fun (cmd-bind-vertex-buffers
                   %vk:cmd-bind-vertex-buffers
                   "Represents [vkCmdBindVertexBuffers](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBindVertexBuffers.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-BINDING: <a description>
 - BUFFERS: <a description>
 - OFFSETS: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (first-binding unsigned-byte) (buffers list) (offsets list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-binding :uint32 first-binding :in :raw)
  (binding-count :uint32 (length offsets) :in :raw)
  (buffers '%vk:buffer buffers :in :handle :list)
  (offsets '%vk:device-size offsets :in :list))

(defvk-simple-fun (cmd-draw
                   %vk:cmd-draw
                   "Represents [vkCmdDraw](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDraw.html).

Args:
 - COMMAND-BUFFER: <a description>
 - VERTEX-COUNT: <a description>
 - INSTANCE-COUNT: <a description>
 - FIRST-VERTEX: <a description>
 - FIRST-INSTANCE: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (vertex-count unsigned-byte) (instance-count unsigned-byte) (first-vertex unsigned-byte) (first-instance unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (vertex-count :uint32 vertex-count :in :raw)
  (instance-count :uint32 instance-count :in :raw)
  (first-vertex :uint32 first-vertex :in :raw)
  (first-instance :uint32 first-instance :in :raw))

(defvk-simple-fun (cmd-draw-indexed
                   %vk:cmd-draw-indexed
                   "Represents [vkCmdDrawIndexed](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndexed.html).

Args:
 - COMMAND-BUFFER: <a description>
 - INDEX-COUNT: <a description>
 - INSTANCE-COUNT: <a description>
 - FIRST-INDEX: <a description>
 - VERTEX-OFFSET: <a description>
 - FIRST-INSTANCE: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (index-count unsigned-byte) (instance-count unsigned-byte) (first-index unsigned-byte) (vertex-offset integer) (first-instance unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (index-count :uint32 index-count :in :raw)
  (instance-count :uint32 instance-count :in :raw)
  (first-index :uint32 first-index :in :raw)
  (vertex-offset :int32 vertex-offset :in :raw)
  (first-instance :uint32 first-instance :in :raw))

(defvk-simple-fun (cmd-draw-indirect
                   %vk:cmd-draw-indirect
                   "Represents [vkCmdDrawIndirect](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndirect.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - DRAW-COUNT: <a description>
 - STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (draw-count unsigned-byte) (stride unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (draw-count :uint32 draw-count :in :raw)
  (stride :uint32 stride :in :raw))

(defvk-simple-fun (cmd-draw-indexed-indirect
                   %vk:cmd-draw-indexed-indirect
                   "Represents [vkCmdDrawIndexedIndirect](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndexedIndirect.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - DRAW-COUNT: <a description>
 - STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (draw-count unsigned-byte) (stride unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (draw-count :uint32 draw-count :in :raw)
  (stride :uint32 stride :in :raw))

(defvk-simple-fun (cmd-dispatch
                   %vk:cmd-dispatch
                   "Represents [vkCmdDispatch](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDispatch.html).

Args:
 - COMMAND-BUFFER: <a description>
 - GROUP-COUNT-X: <a description>
 - GROUP-COUNT-Y: <a description>
 - GROUP-COUNT-Z: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (group-count-x unsigned-byte) (group-count-y unsigned-byte) (group-count-z unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (group-count-x :uint32 group-count-x :in :raw)
  (group-count-y :uint32 group-count-y :in :raw)
  (group-count-z :uint32 group-count-z :in :raw))

(defvk-simple-fun (cmd-dispatch-indirect
                   %vk:cmd-dispatch-indirect
                   "Represents [vkCmdDispatchIndirect](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDispatchIndirect.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw))

(defvk-simple-fun (cmd-copy-buffer
                   %vk:cmd-copy-buffer
                   "Represents [vkCmdCopyBuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyBuffer.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SRC-BUFFER: <a description>
 - DST-BUFFER: <a description>
 - REGIONS: <a description>

See BUFFER
See BUFFER-COPY
See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (src-buffer cffi:foreign-pointer) (dst-buffer cffi:foreign-pointer) (regions list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (src-buffer '%vk:buffer src-buffer :in :handle)
  (dst-buffer '%vk:buffer dst-buffer :in :handle)
  (region-count :uint32 (length regions) :in :raw)
  (regions '(:struct %vk:buffer-copy) regions :in :list))

(defvk-simple-fun (cmd-copy-image
                   %vk:cmd-copy-image
                   "Represents [vkCmdCopyImage](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyImage.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SRC-IMAGE: <a description>
 - SRC-IMAGE-LAYOUT: <a description>
 - DST-IMAGE: <a description>
 - DST-IMAGE-LAYOUT: <a description>
 - REGIONS: <a description>

See COMMAND-BUFFER
See IMAGE
See IMAGE-COPY
See IMAGE-LAYOUT
"
                   ((command-buffer cffi:foreign-pointer) (src-image cffi:foreign-pointer) (src-image-layout keyword) (dst-image cffi:foreign-pointer) (dst-image-layout keyword) (regions list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (src-image '%vk:image src-image :in :handle)
  (src-image-layout '%vk:image-layout src-image-layout :in :raw)
  (dst-image '%vk:image dst-image :in :handle)
  (dst-image-layout '%vk:image-layout dst-image-layout :in :raw)
  (region-count :uint32 (length regions) :in :raw)
  (regions '(:struct %vk:image-copy) regions :in :list))

(defvk-simple-fun (cmd-blit-image
                   %vk:cmd-blit-image
                   "Represents [vkCmdBlitImage](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBlitImage.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SRC-IMAGE: <a description>
 - SRC-IMAGE-LAYOUT: <a description>
 - DST-IMAGE: <a description>
 - DST-IMAGE-LAYOUT: <a description>
 - REGIONS: <a description>
 - FILTER: <a description>

See COMMAND-BUFFER
See FILTER
See IMAGE
See IMAGE-BLIT
See IMAGE-LAYOUT
"
                   ((command-buffer cffi:foreign-pointer) (src-image cffi:foreign-pointer) (src-image-layout keyword) (dst-image cffi:foreign-pointer) (dst-image-layout keyword) (regions list) (filter keyword))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (src-image '%vk:image src-image :in :handle)
  (src-image-layout '%vk:image-layout src-image-layout :in :raw)
  (dst-image '%vk:image dst-image :in :handle)
  (dst-image-layout '%vk:image-layout dst-image-layout :in :raw)
  (region-count :uint32 (length regions) :in :raw)
  (regions '(:struct %vk:image-blit) regions :in :list)
  (filter '%vk:filter filter :in :raw))

(defvk-simple-fun (cmd-copy-buffer-to-image
                   %vk:cmd-copy-buffer-to-image
                   "Represents [vkCmdCopyBufferToImage](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyBufferToImage.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SRC-BUFFER: <a description>
 - DST-IMAGE: <a description>
 - DST-IMAGE-LAYOUT: <a description>
 - REGIONS: <a description>

See BUFFER
See BUFFER-IMAGE-COPY
See COMMAND-BUFFER
See IMAGE
See IMAGE-LAYOUT
"
                   ((command-buffer cffi:foreign-pointer) (src-buffer cffi:foreign-pointer) (dst-image cffi:foreign-pointer) (dst-image-layout keyword) (regions list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (src-buffer '%vk:buffer src-buffer :in :handle)
  (dst-image '%vk:image dst-image :in :handle)
  (dst-image-layout '%vk:image-layout dst-image-layout :in :raw)
  (region-count :uint32 (length regions) :in :raw)
  (regions '(:struct %vk:buffer-image-copy) regions :in :list))

(defvk-simple-fun (cmd-copy-image-to-buffer
                   %vk:cmd-copy-image-to-buffer
                   "Represents [vkCmdCopyImageToBuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyImageToBuffer.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SRC-IMAGE: <a description>
 - SRC-IMAGE-LAYOUT: <a description>
 - DST-BUFFER: <a description>
 - REGIONS: <a description>

See BUFFER
See BUFFER-IMAGE-COPY
See COMMAND-BUFFER
See IMAGE
See IMAGE-LAYOUT
"
                   ((command-buffer cffi:foreign-pointer) (src-image cffi:foreign-pointer) (src-image-layout keyword) (dst-buffer cffi:foreign-pointer) (regions list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (src-image '%vk:image src-image :in :handle)
  (src-image-layout '%vk:image-layout src-image-layout :in :raw)
  (dst-buffer '%vk:buffer dst-buffer :in :handle)
  (region-count :uint32 (length regions) :in :raw)
  (regions '(:struct %vk:buffer-image-copy) regions :in :list))

(defvk-simple-fun (cmd-update-buffer
                   %vk:cmd-update-buffer
                   "Represents [vkCmdUpdateBuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdUpdateBuffer.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DST-BUFFER: <a description>
 - DST-OFFSET: <a description>
 - DATA-SIZE: <a description>
 - DATA: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (dst-buffer cffi:foreign-pointer) (dst-offset unsigned-byte) (data-size unsigned-byte) (data cffi:foreign-pointer))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (dst-buffer '%vk:buffer dst-buffer :in :handle)
  (dst-offset '%vk:device-size dst-offset :in :raw)
  (data-size '%vk:device-size data-size :in :raw)
  (data '(:pointer :void) data :in :handle))

(defvk-simple-fun (cmd-fill-buffer
                   %vk:cmd-fill-buffer
                   "Represents [vkCmdFillBuffer](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdFillBuffer.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DST-BUFFER: <a description>
 - DST-OFFSET: <a description>
 - SIZE: <a description>
 - DATA: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (dst-buffer cffi:foreign-pointer) (dst-offset unsigned-byte) (size unsigned-byte) (data unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (dst-buffer '%vk:buffer dst-buffer :in :handle)
  (dst-offset '%vk:device-size dst-offset :in :raw)
  (size '%vk:device-size size :in :raw)
  (data :uint32 data :in :raw))

(defvk-simple-fun (cmd-clear-color-image
                   %vk:cmd-clear-color-image
                   "Represents [vkCmdClearColorImage](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdClearColorImage.html).

Args:
 - COMMAND-BUFFER: <a description>
 - IMAGE: <a description>
 - IMAGE-LAYOUT: <a description>
 - COLOR: <a description>
 - RANGES: <a description>

See CLEAR-COLOR-VALUE
See COMMAND-BUFFER
See IMAGE
See IMAGE-LAYOUT
See IMAGE-SUBRESOURCE-RANGE
"
                   ((command-buffer cffi:foreign-pointer) (image cffi:foreign-pointer) (image-layout keyword) (color (or vk:clear-color-value cffi:foreign-pointer)) (ranges list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (image '%vk:image image :in :handle)
  (image-layout '%vk:image-layout image-layout :in :raw)
  (color '(:union %vk:clear-color-value) color :in)
  (range-count :uint32 (length ranges) :in :raw)
  (ranges '(:struct %vk:image-subresource-range) ranges :in :list))

(defvk-simple-fun (cmd-clear-depth-stencil-image
                   %vk:cmd-clear-depth-stencil-image
                   "Represents [vkCmdClearDepthStencilImage](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdClearDepthStencilImage.html).

Args:
 - COMMAND-BUFFER: <a description>
 - IMAGE: <a description>
 - IMAGE-LAYOUT: <a description>
 - DEPTH-STENCIL: <a description>
 - RANGES: <a description>

See CLEAR-DEPTH-STENCIL-VALUE
See COMMAND-BUFFER
See IMAGE
See IMAGE-LAYOUT
See IMAGE-SUBRESOURCE-RANGE
"
                   ((command-buffer cffi:foreign-pointer) (image cffi:foreign-pointer) (image-layout keyword) (depth-stencil (or vk:clear-depth-stencil-value cffi:foreign-pointer)) (ranges list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (image '%vk:image image :in :handle)
  (image-layout '%vk:image-layout image-layout :in :raw)
  (depth-stencil '(:struct %vk:clear-depth-stencil-value) depth-stencil :in)
  (range-count :uint32 (length ranges) :in :raw)
  (ranges '(:struct %vk:image-subresource-range) ranges :in :list))

(defvk-simple-fun (cmd-clear-attachments
                   %vk:cmd-clear-attachments
                   "Represents [vkCmdClearAttachments](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdClearAttachments.html).

Args:
 - COMMAND-BUFFER: <a description>
 - ATTACHMENTS: <a description>
 - RECTS: <a description>

See CLEAR-ATTACHMENT
See CLEAR-RECT
See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (attachments list) (rects list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (attachment-count :uint32 (length attachments) :in :raw)
  (attachments '(:struct %vk:clear-attachment) attachments :in :list)
  (rect-count :uint32 (length rects) :in :raw)
  (rects '(:struct %vk:clear-rect) rects :in :list))

(defvk-simple-fun (cmd-resolve-image
                   %vk:cmd-resolve-image
                   "Represents [vkCmdResolveImage](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdResolveImage.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SRC-IMAGE: <a description>
 - SRC-IMAGE-LAYOUT: <a description>
 - DST-IMAGE: <a description>
 - DST-IMAGE-LAYOUT: <a description>
 - REGIONS: <a description>

See COMMAND-BUFFER
See IMAGE
See IMAGE-LAYOUT
See IMAGE-RESOLVE
"
                   ((command-buffer cffi:foreign-pointer) (src-image cffi:foreign-pointer) (src-image-layout keyword) (dst-image cffi:foreign-pointer) (dst-image-layout keyword) (regions list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (src-image '%vk:image src-image :in :handle)
  (src-image-layout '%vk:image-layout src-image-layout :in :raw)
  (dst-image '%vk:image dst-image :in :handle)
  (dst-image-layout '%vk:image-layout dst-image-layout :in :raw)
  (region-count :uint32 (length regions) :in :raw)
  (regions '(:struct %vk:image-resolve) regions :in :list))

(defvk-simple-fun (cmd-set-event
                   %vk:cmd-set-event
                   "Represents [vkCmdSetEvent](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetEvent.html).

Args:
 - COMMAND-BUFFER: <a description>
 - EVENT: <a description>
 - STAGE-MASK: <a description>

See COMMAND-BUFFER
See EVENT
See PIPELINE-STAGE-FLAGS
"
                   ((command-buffer cffi:foreign-pointer) (event cffi:foreign-pointer) (stage-mask (or unsigned-byte list)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (event '%vk:event event :in :handle)
  (stage-mask '%vk:pipeline-stage-flags stage-mask :in :raw))

(defvk-simple-fun (cmd-reset-event
                   %vk:cmd-reset-event
                   "Represents [vkCmdResetEvent](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdResetEvent.html).

Args:
 - COMMAND-BUFFER: <a description>
 - EVENT: <a description>
 - STAGE-MASK: <a description>

See COMMAND-BUFFER
See EVENT
See PIPELINE-STAGE-FLAGS
"
                   ((command-buffer cffi:foreign-pointer) (event cffi:foreign-pointer) (stage-mask (or unsigned-byte list)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (event '%vk:event event :in :handle)
  (stage-mask '%vk:pipeline-stage-flags stage-mask :in :raw))

(defvk-simple-fun (cmd-wait-events
                   %vk:cmd-wait-events
                   "Represents [vkCmdWaitEvents](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdWaitEvents.html).

Args:
 - COMMAND-BUFFER: <a description>
 - EVENTS: <a description>
 - MEMORY-BARRIERS: <a description>
 - BUFFER-MEMORY-BARRIERS: <a description>
 - IMAGE-MEMORY-BARRIERS: <a description>
 - SRC-STAGE-MASK: (optional) <a description>
 - DST-STAGE-MASK: (optional) <a description>

See BUFFER-MEMORY-BARRIER
See COMMAND-BUFFER
See EVENT
See IMAGE-MEMORY-BARRIER
See MEMORY-BARRIER
See PIPELINE-STAGE-FLAGS
"
                   ((command-buffer cffi:foreign-pointer) (events list) (memory-barriers list) (buffer-memory-barriers list) (image-memory-barriers list))
                   (((src-stage-mask nil) (or unsigned-byte list)) ((dst-stage-mask nil) (or unsigned-byte list)))
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (event-count :uint32 (length events) :in :raw)
  (events '%vk:event events :in :handle :list)
  (src-stage-mask '%vk:pipeline-stage-flags src-stage-mask :in :raw :optional)
  (dst-stage-mask '%vk:pipeline-stage-flags dst-stage-mask :in :raw :optional)
  (memory-barrier-count :uint32 (length memory-barriers) :in :raw)
  (memory-barriers '(:struct %vk:memory-barrier) memory-barriers :in :list)
  (buffer-memory-barrier-count :uint32 (length buffer-memory-barriers) :in :raw)
  (buffer-memory-barriers '(:struct %vk:buffer-memory-barrier) buffer-memory-barriers :in :list)
  (image-memory-barrier-count :uint32 (length image-memory-barriers) :in :raw)
  (image-memory-barriers '(:struct %vk:image-memory-barrier) image-memory-barriers :in :list))

(defvk-simple-fun (cmd-pipeline-barrier
                   %vk:cmd-pipeline-barrier
                   "Represents [vkCmdPipelineBarrier](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdPipelineBarrier.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SRC-STAGE-MASK: <a description>
 - DST-STAGE-MASK: <a description>
 - MEMORY-BARRIERS: <a description>
 - BUFFER-MEMORY-BARRIERS: <a description>
 - IMAGE-MEMORY-BARRIERS: <a description>
 - DEPENDENCY-FLAGS: (optional) <a description>

See BUFFER-MEMORY-BARRIER
See COMMAND-BUFFER
See DEPENDENCY-FLAGS
See IMAGE-MEMORY-BARRIER
See MEMORY-BARRIER
See PIPELINE-STAGE-FLAGS
"
                   ((command-buffer cffi:foreign-pointer) (src-stage-mask (or unsigned-byte list)) (dst-stage-mask (or unsigned-byte list)) (memory-barriers list) (buffer-memory-barriers list) (image-memory-barriers list))
                   (((dependency-flags nil) (or unsigned-byte list)))
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (src-stage-mask '%vk:pipeline-stage-flags src-stage-mask :in :raw)
  (dst-stage-mask '%vk:pipeline-stage-flags dst-stage-mask :in :raw)
  (dependency-flags '%vk:dependency-flags dependency-flags :in :raw :optional)
  (memory-barrier-count :uint32 (length memory-barriers) :in :raw)
  (memory-barriers '(:struct %vk:memory-barrier) memory-barriers :in :list)
  (buffer-memory-barrier-count :uint32 (length buffer-memory-barriers) :in :raw)
  (buffer-memory-barriers '(:struct %vk:buffer-memory-barrier) buffer-memory-barriers :in :list)
  (image-memory-barrier-count :uint32 (length image-memory-barriers) :in :raw)
  (image-memory-barriers '(:struct %vk:image-memory-barrier) image-memory-barriers :in :list))

(defvk-simple-fun (cmd-begin-query
                   %vk:cmd-begin-query
                   "Represents [vkCmdBeginQuery](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBeginQuery.html).

Args:
 - COMMAND-BUFFER: <a description>
 - QUERY-POOL: <a description>
 - QUERY: <a description>
 - FLAGS: (optional) <a description>

See COMMAND-BUFFER
See QUERY-CONTROL-FLAGS
See QUERY-POOL
"
                   ((command-buffer cffi:foreign-pointer) (query-pool cffi:foreign-pointer) (query unsigned-byte))
                   (((flags nil) (or unsigned-byte list)))
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (query :uint32 query :in :raw)
  (flags '%vk:query-control-flags flags :in :raw :optional))

(defvk-simple-fun (cmd-end-query
                   %vk:cmd-end-query
                   "Represents [vkCmdEndQuery](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdEndQuery.html).

Args:
 - COMMAND-BUFFER: <a description>
 - QUERY-POOL: <a description>
 - QUERY: <a description>

See COMMAND-BUFFER
See QUERY-POOL
"
                   ((command-buffer cffi:foreign-pointer) (query-pool cffi:foreign-pointer) (query unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (query :uint32 query :in :raw))

(defvk-simple-fun (cmd-begin-conditional-rendering-ext
                   %vk:cmd-begin-conditional-rendering-ext
                   "Represents [vkCmdBeginConditionalRenderingEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBeginConditionalRenderingEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - CONDITIONAL-RENDERING-BEGIN: <a description>

See COMMAND-BUFFER
See CONDITIONAL-RENDERING-BEGIN-INFO-EXT
"
                   ((command-buffer cffi:foreign-pointer) (conditional-rendering-begin (or vk:conditional-rendering-begin-info-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (conditional-rendering-begin '(:struct %vk:conditional-rendering-begin-info-ext) conditional-rendering-begin :in))

(defvk-simple-fun (cmd-end-conditional-rendering-ext
                   %vk:cmd-end-conditional-rendering-ext
                   "Represents [vkCmdEndConditionalRenderingEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdEndConditionalRenderingEXT.html).

Args:
 - COMMAND-BUFFER: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle))

(defvk-simple-fun (cmd-reset-query-pool
                   %vk:cmd-reset-query-pool
                   "Represents [vkCmdResetQueryPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdResetQueryPool.html).

Args:
 - COMMAND-BUFFER: <a description>
 - QUERY-POOL: <a description>
 - FIRST-QUERY: <a description>
 - QUERY-COUNT: <a description>

See COMMAND-BUFFER
See QUERY-POOL
"
                   ((command-buffer cffi:foreign-pointer) (query-pool cffi:foreign-pointer) (first-query unsigned-byte) (query-count unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (first-query :uint32 first-query :in :raw)
  (query-count :uint32 query-count :in :raw))

(defvk-simple-fun (cmd-write-timestamp
                   %vk:cmd-write-timestamp
                   "Represents [vkCmdWriteTimestamp](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdWriteTimestamp.html).

Args:
 - COMMAND-BUFFER: <a description>
 - PIPELINE-STAGE: <a description>
 - QUERY-POOL: <a description>
 - QUERY: <a description>

See COMMAND-BUFFER
See PIPELINE-STAGE-FLAG-BITS
See QUERY-POOL
"
                   ((command-buffer cffi:foreign-pointer) (pipeline-stage keyword) (query-pool cffi:foreign-pointer) (query unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (pipeline-stage '%vk:pipeline-stage-flag-bits pipeline-stage :in :raw)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (query :uint32 query :in :raw))

(defvk-simple-fun (cmd-copy-query-pool-results
                   %vk:cmd-copy-query-pool-results
                   "Represents [vkCmdCopyQueryPoolResults](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyQueryPoolResults.html).

Args:
 - COMMAND-BUFFER: <a description>
 - QUERY-POOL: <a description>
 - FIRST-QUERY: <a description>
 - QUERY-COUNT: <a description>
 - DST-BUFFER: <a description>
 - DST-OFFSET: <a description>
 - STRIDE: <a description>
 - FLAGS: (optional) <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
See QUERY-POOL
See QUERY-RESULT-FLAGS
"
                   ((command-buffer cffi:foreign-pointer) (query-pool cffi:foreign-pointer) (first-query unsigned-byte) (query-count unsigned-byte) (dst-buffer cffi:foreign-pointer) (dst-offset unsigned-byte) (stride unsigned-byte))
                   (((flags nil) (or unsigned-byte list)))
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (first-query :uint32 first-query :in :raw)
  (query-count :uint32 query-count :in :raw)
  (dst-buffer '%vk:buffer dst-buffer :in :handle)
  (dst-offset '%vk:device-size dst-offset :in :raw)
  (stride '%vk:device-size stride :in :raw)
  (flags '%vk:query-result-flags flags :in :raw :optional))

(defvk-simple-fun (cmd-push-constants
                   %vk:cmd-push-constants
                   "Represents [vkCmdPushConstants](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdPushConstants.html).

Args:
 - COMMAND-BUFFER: <a description>
 - LAYOUT: <a description>
 - STAGE-FLAGS: <a description>
 - OFFSET: <a description>
 - SIZE: <a description>
 - VALUES: <a description>

See COMMAND-BUFFER
See PIPELINE-LAYOUT
See SHADER-STAGE-FLAGS
"
                   ((command-buffer cffi:foreign-pointer) (layout cffi:foreign-pointer) (stage-flags (or unsigned-byte list)) (offset unsigned-byte) (size unsigned-byte) (values cffi:foreign-pointer))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (layout '%vk:pipeline-layout layout :in :handle)
  (stage-flags '%vk:shader-stage-flags stage-flags :in :raw)
  (offset :uint32 offset :in :raw)
  (size :uint32 size :in :raw)
  (values '(:pointer :void) values :in :handle))

(defvk-simple-fun (cmd-begin-render-pass
                   %vk:cmd-begin-render-pass
                   "Represents [vkCmdBeginRenderPass](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBeginRenderPass.html).

Args:
 - COMMAND-BUFFER: <a description>
 - RENDER-PASS-BEGIN: <a description>
 - CONTENTS: <a description>

See COMMAND-BUFFER
See RENDER-PASS-BEGIN-INFO
See SUBPASS-CONTENTS
"
                   ((command-buffer cffi:foreign-pointer) (render-pass-begin (or vk:render-pass-begin-info cffi:foreign-pointer)) (contents keyword))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (render-pass-begin '(:struct %vk:render-pass-begin-info) render-pass-begin :in)
  (contents '%vk:subpass-contents contents :in :raw))

(defvk-simple-fun (cmd-next-subpass
                   %vk:cmd-next-subpass
                   "Represents [vkCmdNextSubpass](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdNextSubpass.html).

Args:
 - COMMAND-BUFFER: <a description>
 - CONTENTS: <a description>

See COMMAND-BUFFER
See SUBPASS-CONTENTS
"
                   ((command-buffer cffi:foreign-pointer) (contents keyword))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (contents '%vk:subpass-contents contents :in :raw))

(defvk-simple-fun (cmd-end-render-pass
                   %vk:cmd-end-render-pass
                   "Represents [vkCmdEndRenderPass](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdEndRenderPass.html).

Args:
 - COMMAND-BUFFER: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle))

(defvk-simple-fun (cmd-execute-commands
                   %vk:cmd-execute-commands
                   "Represents [vkCmdExecuteCommands](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdExecuteCommands.html).

Args:
 - COMMAND-BUFFER: <a description>
 - COMMAND-BUFFERS: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (command-buffers list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (command-buffer-count :uint32 (length command-buffers) :in :raw)
  (command-buffers '%vk:command-buffer command-buffers :in :handle :list))

(defvk-create-handle-fun (create-android-surface-khr
                          %vk:create-android-surface-khr
                          "Represents [vkCreateAndroidSurfaceKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateAndroidSurfaceKHR.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See ANDROID-SURFACE-CREATE-INFO-KHR
See INSTANCE
See RESULT
See SURFACE-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:android-surface-create-info-khr cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:android-surface-create-info-khr) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-enumerate-fun (get-physical-device-display-properties-khr
                      %vk:get-physical-device-display-properties-khr
                      "Represents [vkGetPhysicalDeviceDisplayPropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceDisplayPropertiesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    DISPLAY-PROPERTIES-KHR
    RESULT)

See DISPLAY-PROPERTIES-KHR
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer))
                      ()
                      property-count
                      properties
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:display-properties-khr) properties :out :list))

(defvk-enumerate-fun (get-physical-device-display-plane-properties-khr
                      %vk:get-physical-device-display-plane-properties-khr
                      "Represents [vkGetPhysicalDeviceDisplayPlanePropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceDisplayPlanePropertiesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    DISPLAY-PLANE-PROPERTIES-KHR
    RESULT)

See DISPLAY-PLANE-PROPERTIES-KHR
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer))
                      ()
                      property-count
                      properties
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:display-plane-properties-khr) properties :out :list))

(defvk-enumerate-fun (get-display-plane-supported-displays-khr
                      %vk:get-display-plane-supported-displays-khr
                      "Represents [vkGetDisplayPlaneSupportedDisplaysKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDisplayPlaneSupportedDisplaysKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - PLANE-INDEX: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    DISPLAY-KHR
    RESULT)

See DISPLAY-KHR
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer) (plane-index unsigned-byte))
                      ()
                      display-count
                      displays
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (plane-index :uint32 plane-index :in :raw)
  (display-count :uint32 display-count :out)
  (displays '%vk:display-khr displays :out :handle :list))

(defvk-enumerate-fun (get-display-mode-properties-khr
                      %vk:get-display-mode-properties-khr
                      "Represents [vkGetDisplayModePropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDisplayModePropertiesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - DISPLAY: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    DISPLAY-MODE-PROPERTIES-KHR
    RESULT)

See DISPLAY-KHR
See DISPLAY-MODE-PROPERTIES-KHR
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer) (display cffi:foreign-pointer))
                      ()
                      property-count
                      properties
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (display '%vk:display-khr display :in :handle)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:display-mode-properties-khr) properties :out :list))

(defvk-create-handle-fun (create-display-mode-khr
                          %vk:create-display-mode-khr
                          "Represents [vkCreateDisplayModeKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDisplayModeKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - DISPLAY: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    DISPLAY-MODE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See DISPLAY-KHR
See DISPLAY-MODE-CREATE-INFO-KHR
See DISPLAY-MODE-KHR
See PHYSICAL-DEVICE
See RESULT
"
                          ((physical-device cffi:foreign-pointer) (display cffi:foreign-pointer) (create-info (or vk:display-mode-create-info-khr cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (display '%vk:display-khr display :in :handle)
  (create-info '(:struct %vk:display-mode-create-info-khr) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (mode '%vk:display-mode-khr mode :out :handle))

(defvk-get-struct-fun (get-display-plane-capabilities-khr
                       %vk:get-display-plane-capabilities-khr
                       "Represents [vkGetDisplayPlaneCapabilitiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDisplayPlaneCapabilitiesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - MODE: <a description>
 - PLANE-INDEX: <a description>

Returns:
  (CL:VALUES
    DISPLAY-PLANE-CAPABILITIES-KHR
    RESULT)

See DISPLAY-MODE-KHR
See DISPLAY-PLANE-CAPABILITIES-KHR
See PHYSICAL-DEVICE
See RESULT
"
                       ((physical-device cffi:foreign-pointer) (mode cffi:foreign-pointer) (plane-index unsigned-byte))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (mode '%vk:display-mode-khr mode :in :handle)
  (plane-index :uint32 plane-index :in :raw)
  (capabilities '(:struct %vk:display-plane-capabilities-khr) capabilities :out))

(defvk-create-handle-fun (create-display-plane-surface-khr
                          %vk:create-display-plane-surface-khr
                          "Represents [vkCreateDisplayPlaneSurfaceKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDisplayPlaneSurfaceKHR.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See DISPLAY-SURFACE-CREATE-INFO-KHR
See INSTANCE
See RESULT
See SURFACE-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:display-surface-create-info-khr cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:display-surface-create-info-khr) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-create-handles-fun (create-shared-swapchains-khr
                           %vk:create-shared-swapchains-khr
                           "Represents [vkCreateSharedSwapchainsKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateSharedSwapchainsKHR.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFOS: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SWAPCHAIN-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RESULT
See SWAPCHAIN-CREATE-INFO-KHR
See SWAPCHAIN-KHR
"
                           ((device cffi:foreign-pointer) (create-infos list))
                           (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                           (length create-infos))
  (device '%vk:device device :in :handle)
  (swapchain-count :uint32 (length create-infos) :in :raw)
  (create-infos '(:struct %vk:swapchain-create-info-khr) create-infos :in :list)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (swapchains '%vk:swapchain-khr swapchains :out :handle :list))

(defvk-simple-fun (destroy-surface-khr
                   %vk:destroy-surface-khr
                   "Represents [vkDestroySurfaceKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroySurfaceKHR.html).

Args:
 - INSTANCE: <a description>
 - SURFACE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See INSTANCE
See SURFACE-KHR
"
                   ((instance cffi:foreign-pointer))
                   (((surface (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (instance '%vk:instance instance :in :handle)
  (surface '%vk:surface-khr surface :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (get-physical-device-surface-support-khr
                          %vk:get-physical-device-surface-support-khr
                          "Represents [vkGetPhysicalDeviceSurfaceSupportKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSurfaceSupportKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - QUEUE-FAMILY-INDEX: <a description>
 - SURFACE: <a description>

Returns:
  (CL:VALUES
    BOOL32
    RESULT)

See BOOL32
See PHYSICAL-DEVICE
See RESULT
See SURFACE-KHR
"
                          ((physical-device cffi:foreign-pointer) (queue-family-index unsigned-byte) (surface cffi:foreign-pointer))
                          ()
                          nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-index :uint32 queue-family-index :in :raw)
  (surface '%vk:surface-khr surface :in :handle)
  (supported '%vk:bool32 supported :out))

(defvk-get-struct-fun (get-physical-device-surface-capabilities-khr
                       %vk:get-physical-device-surface-capabilities-khr
                       "Represents [vkGetPhysicalDeviceSurfaceCapabilitiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSurfaceCapabilitiesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - SURFACE: <a description>

Returns:
  (CL:VALUES
    SURFACE-CAPABILITIES-KHR
    RESULT)

See PHYSICAL-DEVICE
See RESULT
See SURFACE-CAPABILITIES-KHR
See SURFACE-KHR
"
                       ((physical-device cffi:foreign-pointer) (surface cffi:foreign-pointer))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (surface '%vk:surface-khr surface :in :handle)
  (surface-capabilities '(:struct %vk:surface-capabilities-khr) surface-capabilities :out))

(defvk-enumerate-fun (get-physical-device-surface-formats-khr
                      %vk:get-physical-device-surface-formats-khr
                      "Represents [vkGetPhysicalDeviceSurfaceFormatsKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSurfaceFormatsKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - SURFACE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    SURFACE-FORMAT-KHR
    RESULT)

See PHYSICAL-DEVICE
See RESULT
See SURFACE-FORMAT-KHR
See SURFACE-KHR
"
                      ((physical-device cffi:foreign-pointer) (surface cffi:foreign-pointer))
                      ()
                      surface-format-count
                      surface-formats
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (surface '%vk:surface-khr surface :in :handle)
  (surface-format-count :uint32 surface-format-count :out)
  (surface-formats '(:struct %vk:surface-format-khr) surface-formats :out :list))

(defvk-enumerate-fun (get-physical-device-surface-present-modes-khr
                      %vk:get-physical-device-surface-present-modes-khr
                      "Represents [vkGetPhysicalDeviceSurfacePresentModesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSurfacePresentModesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - SURFACE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PRESENT-MODE-KHR
    RESULT)

See PHYSICAL-DEVICE
See PRESENT-MODE-KHR
See RESULT
See SURFACE-KHR
"
                      ((physical-device cffi:foreign-pointer) (surface cffi:foreign-pointer))
                      ()
                      present-mode-count
                      present-modes
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (surface '%vk:surface-khr surface :in :handle)
  (present-mode-count :uint32 present-mode-count :out)
  (present-modes '%vk:present-mode-khr present-modes :out :raw :list))

(defvk-create-handle-fun (create-swapchain-khr
                          %vk:create-swapchain-khr
                          "Represents [vkCreateSwapchainKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateSwapchainKHR.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SWAPCHAIN-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RESULT
See SWAPCHAIN-CREATE-INFO-KHR
See SWAPCHAIN-KHR
"
                          ((device cffi:foreign-pointer) (create-info (or vk:swapchain-create-info-khr cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:swapchain-create-info-khr) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (swapchain '%vk:swapchain-khr swapchain :out :handle))

(defvk-simple-fun (destroy-swapchain-khr
                   %vk:destroy-swapchain-khr
                   "Represents [vkDestroySwapchainKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroySwapchainKHR.html).

Args:
 - DEVICE: <a description>
 - SWAPCHAIN: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See SWAPCHAIN-KHR
"
                   ((device cffi:foreign-pointer))
                   (((swapchain (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (swapchain '%vk:swapchain-khr swapchain :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-enumerate-fun (get-swapchain-images-khr
                      %vk:get-swapchain-images-khr
                      "Represents [vkGetSwapchainImagesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetSwapchainImagesKHR.html).

Args:
 - DEVICE: <a description>
 - SWAPCHAIN: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    IMAGE
    RESULT)

See DEVICE
See IMAGE
See RESULT
See SWAPCHAIN-KHR
"
                      ((device cffi:foreign-pointer) (swapchain cffi:foreign-pointer))
                      ()
                      swapchain-image-count
                      swapchain-images
                      nil)
  (device '%vk:device device :in :handle)
  (swapchain '%vk:swapchain-khr swapchain :in :handle)
  (swapchain-image-count :uint32 swapchain-image-count :out)
  (swapchain-images '%vk:image swapchain-images :out :handle :list))

(defvk-create-handle-fun (acquire-next-image-khr
                          %vk:acquire-next-image-khr
                          "Represents [vkAcquireNextImageKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkAcquireNextImageKHR.html).

Args:
 - DEVICE: <a description>
 - SWAPCHAIN: <a description>
 - TIMEOUT: <a description>
 - SEMAPHORE: (optional) <a description>
 - FENCE: (optional) <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    RESULT)

See DEVICE
See FENCE
See RESULT
See SEMAPHORE
See SWAPCHAIN-KHR
"
                          ((device cffi:foreign-pointer) (swapchain cffi:foreign-pointer) (timeout unsigned-byte))
                          (((semaphore (cffi:null-pointer)) cffi:foreign-pointer) ((fence (cffi:null-pointer)) cffi:foreign-pointer))
                          nil)
  (device '%vk:device device :in :handle)
  (swapchain '%vk:swapchain-khr swapchain :in :handle)
  (timeout :uint64 timeout :in :raw)
  (semaphore '%vk:semaphore semaphore :in :handle :optional)
  (fence '%vk:fence fence :in :handle :optional)
  (image-index :uint32 image-index :out))

(defvk-simple-fun (queue-present-khr
                   %vk:queue-present-khr
                   "Represents [vkQueuePresentKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkQueuePresentKHR.html).

Args:
 - QUEUE: <a description>
 - PRESENT-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See PRESENT-INFO-KHR
See QUEUE
See RESULT
"
                   ((queue cffi:foreign-pointer) (present-info (or vk:present-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (queue '%vk:queue queue :in :handle)
  (present-info '(:struct %vk:present-info-khr) present-info :in))

(defvk-create-handle-fun (create-vi-surface-nn
                          %vk:create-vi-surface-nn
                          "Represents [vkCreateViSurfaceNN](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateViSurfaceNN.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See INSTANCE
See RESULT
See SURFACE-KHR
See VI-SURFACE-CREATE-INFO-NN
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:vi-surface-create-info-nn cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:vi-surface-create-info-nn) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-create-handle-fun (create-wayland-surface-khr
                          %vk:create-wayland-surface-khr
                          "Represents [vkCreateWaylandSurfaceKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateWaylandSurfaceKHR.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See INSTANCE
See RESULT
See SURFACE-KHR
See WAYLAND-SURFACE-CREATE-INFO-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:wayland-surface-create-info-khr cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:wayland-surface-create-info-khr) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-simple-fun (get-physical-device-wayland-presentation-support-khr
                   %vk:get-physical-device-wayland-presentation-support-khr
                   "Represents [vkGetPhysicalDeviceWaylandPresentationSupportKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceWaylandPresentationSupportKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - QUEUE-FAMILY-INDEX: <a description>
 - DISPLAY: <a description>

Returns:
  (CL:VALUES
    BOOLEAN)

See PHYSICAL-DEVICE
See WL_DISPLAY
"
                   ((physical-device cffi:foreign-pointer) (queue-family-index unsigned-byte) (display cffi:foreign-pointer))
                   ()
                  nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-index :uint32 queue-family-index :in :raw)
  (display '(:pointer :void) display :in :handle))

(defvk-create-handle-fun (create-win32-surface-khr
                          %vk:create-win32-surface-khr
                          "Represents [vkCreateWin32SurfaceKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateWin32SurfaceKHR.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See INSTANCE
See RESULT
See SURFACE-KHR
See WIN32-SURFACE-CREATE-INFO-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:win32-surface-create-info-khr cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:win32-surface-create-info-khr) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-simple-fun (get-physical-device-win32-presentation-support-khr
                   %vk:get-physical-device-win32-presentation-support-khr
                   "Represents [vkGetPhysicalDeviceWin32PresentationSupportKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceWin32PresentationSupportKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - QUEUE-FAMILY-INDEX: <a description>

Returns:
  (CL:VALUES
    BOOLEAN)

See PHYSICAL-DEVICE
"
                   ((physical-device cffi:foreign-pointer) (queue-family-index unsigned-byte))
                   ()
                  nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-index :uint32 queue-family-index :in :raw))

(defvk-create-handle-fun (create-xlib-surface-khr
                          %vk:create-xlib-surface-khr
                          "Represents [vkCreateXlibSurfaceKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateXlibSurfaceKHR.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See INSTANCE
See RESULT
See SURFACE-KHR
See XLIB-SURFACE-CREATE-INFO-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:xlib-surface-create-info-khr cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:xlib-surface-create-info-khr) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-simple-fun (get-physical-device-xlib-presentation-support-khr
                   %vk:get-physical-device-xlib-presentation-support-khr
                   "Represents [vkGetPhysicalDeviceXlibPresentationSupportKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceXlibPresentationSupportKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - QUEUE-FAMILY-INDEX: <a description>
 - DPY: <a description>
 - VISUAL-ID: <a description>

Returns:
  (CL:VALUES
    BOOLEAN)

See DISPLAY
See PHYSICAL-DEVICE
See VISUAL-ID
"
                   ((physical-device cffi:foreign-pointer) (queue-family-index unsigned-byte) (dpy cffi:foreign-pointer) (visual-id cffi:foreign-pointer))
                   ()
                  nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-index :uint32 queue-family-index :in :raw)
  (dpy '(:pointer :void) dpy :in :handle)
  (visual-id '(:pointer :void) visual-id :in :handle))

(defvk-create-handle-fun (create-xcb-surface-khr
                          %vk:create-xcb-surface-khr
                          "Represents [vkCreateXcbSurfaceKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateXcbSurfaceKHR.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See INSTANCE
See RESULT
See SURFACE-KHR
See XCB-SURFACE-CREATE-INFO-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:xcb-surface-create-info-khr cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:xcb-surface-create-info-khr) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-simple-fun (get-physical-device-xcb-presentation-support-khr
                   %vk:get-physical-device-xcb-presentation-support-khr
                   "Represents [vkGetPhysicalDeviceXcbPresentationSupportKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceXcbPresentationSupportKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - QUEUE-FAMILY-INDEX: <a description>
 - CONNECTION: <a description>
 - VISUAL_ID: <a description>

Returns:
  (CL:VALUES
    BOOLEAN)

See PHYSICAL-DEVICE
See XCB_CONNECTION_T
See XCB_VISUALID_T
"
                   ((physical-device cffi:foreign-pointer) (queue-family-index unsigned-byte) (connection cffi:foreign-pointer) (visual_id cffi:foreign-pointer))
                   ()
                  nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-index :uint32 queue-family-index :in :raw)
  (connection '(:pointer :void) connection :in :handle)
  (visual_id '(:pointer :void) visual_id :in :handle))

(defvk-create-handle-fun (create-direct-fb-surface-ext
                          %vk:create-direct-fb-surface-ext
                          "Represents [vkCreateDirectFBSurfaceEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDirectFBSurfaceEXT.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See DIRECT-FB-SURFACE-CREATE-INFO-EXT
See INSTANCE
See RESULT
See SURFACE-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:direct-fb-surface-create-info-ext cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:direct-fb-surface-create-info-ext) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-simple-fun (get-physical-device-direct-fb-presentation-support-ext
                   %vk:get-physical-device-direct-fb-presentation-support-ext
                   "Represents [vkGetPhysicalDeviceDirectFBPresentationSupportEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceDirectFBPresentationSupportEXT.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - QUEUE-FAMILY-INDEX: <a description>
 - DFB: <a description>

Returns:
  (CL:VALUES
    BOOLEAN)

See I-DIRECT-FB
See PHYSICAL-DEVICE
"
                   ((physical-device cffi:foreign-pointer) (queue-family-index unsigned-byte) (dfb cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-index :uint32 queue-family-index :in :raw)
  (dfb '(:pointer :void) dfb :in :handle))

(defvk-create-handle-fun (create-image-pipe-surface-fuchsia
                          %vk:create-image-pipe-surface-fuchsia
                          "Represents [vkCreateImagePipeSurfaceFUCHSIA](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateImagePipeSurfaceFUCHSIA.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See IMAGE-PIPE-SURFACE-CREATE-INFO-FUCHSIA
See INSTANCE
See RESULT
See SURFACE-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:image-pipe-surface-create-info-fuchsia cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:image-pipe-surface-create-info-fuchsia) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-create-handle-fun (create-stream-descriptor-surface-ggp
                          %vk:create-stream-descriptor-surface-ggp
                          "Represents [vkCreateStreamDescriptorSurfaceGGP](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateStreamDescriptorSurfaceGGP.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See INSTANCE
See RESULT
See STREAM-DESCRIPTOR-SURFACE-CREATE-INFO-GGP
See SURFACE-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:stream-descriptor-surface-create-info-ggp cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:stream-descriptor-surface-create-info-ggp) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-create-handle-fun (create-screen-surface-qnx
                          %vk:create-screen-surface-qnx
                          "Represents [vkCreateScreenSurfaceQNX](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateScreenSurfaceQNX.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See INSTANCE
See RESULT
See SCREEN-SURFACE-CREATE-INFO-QNX
See SURFACE-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:screen-surface-create-info-qnx cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:screen-surface-create-info-qnx) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-get-struct-fun (get-physical-device-screen-presentation-support-qnx
                       %vk:get-physical-device-screen-presentation-support-qnx
                       "Represents [vkGetPhysicalDeviceScreenPresentationSupportQNX](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceScreenPresentationSupportQNX.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - QUEUE-FAMILY-INDEX: <a description>

Returns:
  (CL:VALUES
    _SCREEN_WINDOW
    BOOLEAN)

See PHYSICAL-DEVICE
See _SCREEN_WINDOW
"
                       ((physical-device cffi:foreign-pointer) (queue-family-index unsigned-byte))
                       ()
                       t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-index :uint32 queue-family-index :in :raw)
  (window '(:pointer :void) window :out :handle))

(defvk-create-handle-fun (create-debug-report-callback-ext
                          %vk:create-debug-report-callback-ext
                          "Represents [vkCreateDebugReportCallbackEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDebugReportCallbackEXT.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    DEBUG-REPORT-CALLBACK-EXT
    RESULT)

See ALLOCATION-CALLBACKS
See DEBUG-REPORT-CALLBACK-CREATE-INFO-EXT
See DEBUG-REPORT-CALLBACK-EXT
See INSTANCE
See RESULT
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:debug-report-callback-create-info-ext cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:debug-report-callback-create-info-ext) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (callback '%vk:debug-report-callback-ext callback :out :handle))

(defvk-simple-fun (destroy-debug-report-callback-ext
                   %vk:destroy-debug-report-callback-ext
                   "Represents [vkDestroyDebugReportCallbackEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyDebugReportCallbackEXT.html).

Args:
 - INSTANCE: <a description>
 - CALLBACK: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEBUG-REPORT-CALLBACK-EXT
See INSTANCE
"
                   ((instance cffi:foreign-pointer))
                   (((callback (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil
                  t)
  (instance '%vk:instance instance :in :handle)
  (callback '%vk:debug-report-callback-ext callback :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (debug-report-message-ext
                   %vk:debug-report-message-ext
                   "Represents [vkDebugReportMessageEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDebugReportMessageEXT.html).

Args:
 - INSTANCE: <a description>
 - FLAGS: <a description>
 - OBJECT-TYPE: <a description>
 - OBJECT: <a description>
 - LOCATION: <a description>
 - MESSAGE-CODE: <a description>
 - LAYER-PREFIX: <a description>
 - MESSAGE: <a description>

See DEBUG-REPORT-FLAGS-EXT
See DEBUG-REPORT-OBJECT-TYPE-EXT
See INSTANCE
"
                   ((instance cffi:foreign-pointer) (flags (or unsigned-byte list)) (object-type keyword) (object unsigned-byte) (location unsigned-byte) (message-code integer) (layer-prefix string) (message string))
                   ()
                  nil
                  t)
  (instance '%vk:instance instance :in :handle)
  (flags '%vk:debug-report-flags-ext flags :in :raw)
  (object-type '%vk:debug-report-object-type-ext object-type :in :raw)
  (object :uint64 object :in :raw)
  (location '%vk:size-t location :in :raw)
  (message-code :int32 message-code :in :raw)
  (layer-prefix :string layer-prefix :in :raw)
  (message :string message :in :raw))

(defvk-simple-fun (debug-marker-set-object-name-ext
                   %vk:debug-marker-set-object-name-ext
                   "Represents [vkDebugMarkerSetObjectNameEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDebugMarkerSetObjectNameEXT.html).

Args:
 - DEVICE: <a description>
 - NAME-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEBUG-MARKER-OBJECT-NAME-INFO-EXT
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (name-info (or vk:debug-marker-object-name-info-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (name-info '(:struct %vk:debug-marker-object-name-info-ext) name-info :in))

(defvk-simple-fun (debug-marker-set-object-tag-ext
                   %vk:debug-marker-set-object-tag-ext
                   "Represents [vkDebugMarkerSetObjectTagEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDebugMarkerSetObjectTagEXT.html).

Args:
 - DEVICE: <a description>
 - TAG-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEBUG-MARKER-OBJECT-TAG-INFO-EXT
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (tag-info (or vk:debug-marker-object-tag-info-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (tag-info '(:struct %vk:debug-marker-object-tag-info-ext) tag-info :in))

(defvk-simple-fun (cmd-debug-marker-begin-ext
                   %vk:cmd-debug-marker-begin-ext
                   "Represents [vkCmdDebugMarkerBeginEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDebugMarkerBeginEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - MARKER-INFO: <a description>

See COMMAND-BUFFER
See DEBUG-MARKER-MARKER-INFO-EXT
"
                   ((command-buffer cffi:foreign-pointer) (marker-info (or vk:debug-marker-marker-info-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (marker-info '(:struct %vk:debug-marker-marker-info-ext) marker-info :in))

(defvk-simple-fun (cmd-debug-marker-end-ext
                   %vk:cmd-debug-marker-end-ext
                   "Represents [vkCmdDebugMarkerEndEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDebugMarkerEndEXT.html).

Args:
 - COMMAND-BUFFER: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle))

(defvk-simple-fun (cmd-debug-marker-insert-ext
                   %vk:cmd-debug-marker-insert-ext
                   "Represents [vkCmdDebugMarkerInsertEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDebugMarkerInsertEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - MARKER-INFO: <a description>

See COMMAND-BUFFER
See DEBUG-MARKER-MARKER-INFO-EXT
"
                   ((command-buffer cffi:foreign-pointer) (marker-info (or vk:debug-marker-marker-info-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (marker-info '(:struct %vk:debug-marker-marker-info-ext) marker-info :in))

(defvk-get-struct-fun (get-physical-device-external-image-format-properties-nv
                       %vk:get-physical-device-external-image-format-properties-nv
                       "Represents [vkGetPhysicalDeviceExternalImageFormatPropertiesNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceExternalImageFormatPropertiesNV.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - FORMAT: <a description>
 - TYPE: <a description>
 - TILING: <a description>
 - USAGE: <a description>
 - FLAGS: (optional) <a description>
 - EXTERNAL-HANDLE-TYPE: (optional) <a description>

Returns:
  (CL:VALUES
    EXTERNAL-IMAGE-FORMAT-PROPERTIES-NV
    RESULT)

See EXTERNAL-IMAGE-FORMAT-PROPERTIES-NV
See EXTERNAL-MEMORY-HANDLE-TYPE-FLAGS-NV
See FORMAT
See IMAGE-CREATE-FLAGS
See IMAGE-TILING
See IMAGE-TYPE
See IMAGE-USAGE-FLAGS
See PHYSICAL-DEVICE
See RESULT
"
                       ((physical-device cffi:foreign-pointer) (format keyword) (type keyword) (tiling keyword) (usage (or unsigned-byte list)))
                       (((flags nil) (or unsigned-byte list)) ((external-handle-type nil) (or unsigned-byte list)))
                       t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (format '%vk:format format :in :raw)
  (type '%vk:image-type type :in :raw)
  (tiling '%vk:image-tiling tiling :in :raw)
  (usage '%vk:image-usage-flags usage :in :raw)
  (flags '%vk:image-create-flags flags :in :raw :optional)
  (external-handle-type '%vk:external-memory-handle-type-flags-nv external-handle-type :in :raw :optional)
  (external-image-format-properties '(:struct %vk:external-image-format-properties-nv) external-image-format-properties :out))

(defvk-get-struct-fun (get-memory-win32-handle-nv
                       %vk:get-memory-win32-handle-nv
                       "Represents [vkGetMemoryWin32HandleNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetMemoryWin32HandleNV.html).

Args:
 - DEVICE: <a description>
 - MEMORY: <a description>
 - HANDLE-TYPE: <a description>

Returns:
  (CL:VALUES
    HANDLE
    RESULT)

See DEVICE
See DEVICE-MEMORY
See EXTERNAL-MEMORY-HANDLE-TYPE-FLAGS-NV
See HANDLE
See RESULT
"
                       ((device cffi:foreign-pointer) (memory cffi:foreign-pointer) (handle-type (or unsigned-byte list)))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (memory '%vk:device-memory memory :in :handle)
  (handle-type '%vk:external-memory-handle-type-flags-nv handle-type :in :raw)
  (handle '(:pointer :void) handle :out :handle))

(defvk-simple-fun (cmd-execute-generated-commands-nv
                   %vk:cmd-execute-generated-commands-nv
                   "Represents [vkCmdExecuteGeneratedCommandsNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdExecuteGeneratedCommandsNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - IS-PREPROCESSED: <a description>
 - GENERATED-COMMANDS-INFO: <a description>

See BOOL32
See COMMAND-BUFFER
See GENERATED-COMMANDS-INFO-NV
"
                   ((command-buffer cffi:foreign-pointer) (is-preprocessed boolean) (generated-commands-info (or vk:generated-commands-info-nv cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (is-preprocessed '%vk:bool32 is-preprocessed :in :raw)
  (generated-commands-info '(:struct %vk:generated-commands-info-nv) generated-commands-info :in))

(defvk-simple-fun (cmd-preprocess-generated-commands-nv
                   %vk:cmd-preprocess-generated-commands-nv
                   "Represents [vkCmdPreprocessGeneratedCommandsNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdPreprocessGeneratedCommandsNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - GENERATED-COMMANDS-INFO: <a description>

See COMMAND-BUFFER
See GENERATED-COMMANDS-INFO-NV
"
                   ((command-buffer cffi:foreign-pointer) (generated-commands-info (or vk:generated-commands-info-nv cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (generated-commands-info '(:struct %vk:generated-commands-info-nv) generated-commands-info :in))

(defvk-simple-fun (cmd-bind-pipeline-shader-group-nv
                   %vk:cmd-bind-pipeline-shader-group-nv
                   "Represents [vkCmdBindPipelineShaderGroupNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBindPipelineShaderGroupNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - PIPELINE-BIND-POINT: <a description>
 - PIPELINE: <a description>
 - GROUP-INDEX: <a description>

See COMMAND-BUFFER
See PIPELINE
See PIPELINE-BIND-POINT
"
                   ((command-buffer cffi:foreign-pointer) (pipeline-bind-point keyword) (pipeline cffi:foreign-pointer) (group-index unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (pipeline-bind-point '%vk:pipeline-bind-point pipeline-bind-point :in :raw)
  (pipeline '%vk:pipeline pipeline :in :handle)
  (group-index :uint32 group-index :in :raw))

(defvk-get-struct-fun (get-generated-commands-memory-requirements-nv
                       %vk:get-generated-commands-memory-requirements-nv
                       "Represents [vkGetGeneratedCommandsMemoryRequirementsNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetGeneratedCommandsMemoryRequirementsNV.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    MEMORY-REQUIREMENTS-2)

See DEVICE
See GENERATED-COMMANDS-MEMORY-REQUIREMENTS-INFO-NV
See MEMORY-REQUIREMENTS-2
"
                       ((device cffi:foreign-pointer) (info (or vk:generated-commands-memory-requirements-info-nv cffi:foreign-pointer)))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:generated-commands-memory-requirements-info-nv) info :in)
  (memory-requirements '(:struct %vk:memory-requirements-2) memory-requirements :out))

(defvk-create-handle-fun (create-indirect-commands-layout-nv
                          %vk:create-indirect-commands-layout-nv
                          "Represents [vkCreateIndirectCommandsLayoutNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateIndirectCommandsLayoutNV.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    INDIRECT-COMMANDS-LAYOUT-NV
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See INDIRECT-COMMANDS-LAYOUT-CREATE-INFO-NV
See INDIRECT-COMMANDS-LAYOUT-NV
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:indirect-commands-layout-create-info-nv cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:indirect-commands-layout-create-info-nv) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (indirect-commands-layout '%vk:indirect-commands-layout-nv indirect-commands-layout :out :handle))

(defvk-simple-fun (destroy-indirect-commands-layout-nv
                   %vk:destroy-indirect-commands-layout-nv
                   "Represents [vkDestroyIndirectCommandsLayoutNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyIndirectCommandsLayoutNV.html).

Args:
 - DEVICE: <a description>
 - INDIRECT-COMMANDS-LAYOUT: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See INDIRECT-COMMANDS-LAYOUT-NV
"
                   ((device cffi:foreign-pointer))
                   (((indirect-commands-layout (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (indirect-commands-layout '%vk:indirect-commands-layout-nv indirect-commands-layout :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-get-struct-fun (get-physical-device-features-2
                       %vk:get-physical-device-features-2
                       "Represents [vkGetPhysicalDeviceFeatures2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceFeatures2.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    PHYSICAL-DEVICE-FEATURES-2)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-FEATURES-2
"
                       ((physical-device cffi:foreign-pointer))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (features '(:struct %vk:physical-device-features-2) features :out))

(defvk-get-struct-fun (get-physical-device-features-2-khr
                       %vk:get-physical-device-features-2-khr
                       "Represents [vkGetPhysicalDeviceFeatures2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceFeatures2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    PHYSICAL-DEVICE-FEATURES-2)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-FEATURES-2
"
                       ((physical-device cffi:foreign-pointer))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (features '(:struct %vk:physical-device-features-2) features :out))

(defvk-get-struct-fun (get-physical-device-properties-2
                       %vk:get-physical-device-properties-2
                       "Represents [vkGetPhysicalDeviceProperties2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceProperties2.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    PHYSICAL-DEVICE-PROPERTIES-2)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-PROPERTIES-2
"
                       ((physical-device cffi:foreign-pointer))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (properties '(:struct %vk:physical-device-properties-2) properties :out))

(defvk-get-struct-fun (get-physical-device-properties-2-khr
                       %vk:get-physical-device-properties-2-khr
                       "Represents [vkGetPhysicalDeviceProperties2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceProperties2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    PHYSICAL-DEVICE-PROPERTIES-2)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-PROPERTIES-2
"
                       ((physical-device cffi:foreign-pointer))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (properties '(:struct %vk:physical-device-properties-2) properties :out))

(defvk-get-struct-fun (get-physical-device-format-properties-2
                       %vk:get-physical-device-format-properties-2
                       "Represents [vkGetPhysicalDeviceFormatProperties2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceFormatProperties2.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - FORMAT: <a description>

Returns:
  (CL:VALUES
    FORMAT-PROPERTIES-2)

See FORMAT
See FORMAT-PROPERTIES-2
See PHYSICAL-DEVICE
"
                       ((physical-device cffi:foreign-pointer) (format keyword))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (format '%vk:format format :in :raw)
  (format-properties '(:struct %vk:format-properties-2) format-properties :out))

(defvk-get-struct-fun (get-physical-device-format-properties-2-khr
                       %vk:get-physical-device-format-properties-2-khr
                       "Represents [vkGetPhysicalDeviceFormatProperties2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceFormatProperties2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - FORMAT: <a description>

Returns:
  (CL:VALUES
    FORMAT-PROPERTIES-2)

See FORMAT
See FORMAT-PROPERTIES-2
See PHYSICAL-DEVICE
"
                       ((physical-device cffi:foreign-pointer) (format keyword))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (format '%vk:format format :in :raw)
  (format-properties '(:struct %vk:format-properties-2) format-properties :out))

(defvk-get-struct-fun (get-physical-device-image-format-properties-2
                       %vk:get-physical-device-image-format-properties-2
                       "Represents [vkGetPhysicalDeviceImageFormatProperties2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceImageFormatProperties2.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - IMAGE-FORMAT-INFO: <a description>

Returns:
  (CL:VALUES
    IMAGE-FORMAT-PROPERTIES-2
    RESULT)

See IMAGE-FORMAT-PROPERTIES-2
See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-IMAGE-FORMAT-INFO-2
See RESULT
"
                       ((physical-device cffi:foreign-pointer) (image-format-info (or vk:physical-device-image-format-info-2 cffi:foreign-pointer)))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (image-format-info '(:struct %vk:physical-device-image-format-info-2) image-format-info :in)
  (image-format-properties '(:struct %vk:image-format-properties-2) image-format-properties :out))

(defvk-get-struct-fun (get-physical-device-image-format-properties-2-khr
                       %vk:get-physical-device-image-format-properties-2-khr
                       "Represents [vkGetPhysicalDeviceImageFormatProperties2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceImageFormatProperties2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - IMAGE-FORMAT-INFO: <a description>

Returns:
  (CL:VALUES
    IMAGE-FORMAT-PROPERTIES-2
    RESULT)

See IMAGE-FORMAT-PROPERTIES-2
See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-IMAGE-FORMAT-INFO-2
See RESULT
"
                       ((physical-device cffi:foreign-pointer) (image-format-info (or vk:physical-device-image-format-info-2 cffi:foreign-pointer)))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (image-format-info '(:struct %vk:physical-device-image-format-info-2) image-format-info :in)
  (image-format-properties '(:struct %vk:image-format-properties-2) image-format-properties :out))

(defvk-get-structs-fun (get-physical-device-queue-family-properties-2
                        %vk:get-physical-device-queue-family-properties-2
                        "Represents [vkGetPhysicalDeviceQueueFamilyProperties2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceQueueFamilyProperties2.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    QUEUE-FAMILY-PROPERTIES-2)

See PHYSICAL-DEVICE
See QUEUE-FAMILY-PROPERTIES-2
"
                        ((physical-device cffi:foreign-pointer))
                        ()
                        queue-family-property-count
                        queue-family-properties
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-property-count :uint32 queue-family-property-count :out)
  (queue-family-properties '(:struct %vk:queue-family-properties-2) queue-family-properties :out :list))

(defvk-get-structs-fun (get-physical-device-queue-family-properties-2-khr
                        %vk:get-physical-device-queue-family-properties-2-khr
                        "Represents [vkGetPhysicalDeviceQueueFamilyProperties2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceQueueFamilyProperties2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    QUEUE-FAMILY-PROPERTIES-2)

See PHYSICAL-DEVICE
See QUEUE-FAMILY-PROPERTIES-2
"
                        ((physical-device cffi:foreign-pointer))
                        ()
                        queue-family-property-count
                        queue-family-properties
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-property-count :uint32 queue-family-property-count :out)
  (queue-family-properties '(:struct %vk:queue-family-properties-2) queue-family-properties :out :list))

(defvk-get-struct-fun (get-physical-device-memory-properties-2
                       %vk:get-physical-device-memory-properties-2
                       "Represents [vkGetPhysicalDeviceMemoryProperties2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceMemoryProperties2.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    PHYSICAL-DEVICE-MEMORY-PROPERTIES-2)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-MEMORY-PROPERTIES-2
"
                       ((physical-device cffi:foreign-pointer))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (memory-properties '(:struct %vk:physical-device-memory-properties-2) memory-properties :out))

(defvk-get-struct-fun (get-physical-device-memory-properties-2-khr
                       %vk:get-physical-device-memory-properties-2-khr
                       "Represents [vkGetPhysicalDeviceMemoryProperties2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceMemoryProperties2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    PHYSICAL-DEVICE-MEMORY-PROPERTIES-2)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-MEMORY-PROPERTIES-2
"
                       ((physical-device cffi:foreign-pointer))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (memory-properties '(:struct %vk:physical-device-memory-properties-2) memory-properties :out))

(defvk-get-structs-fun (get-physical-device-sparse-image-format-properties-2
                        %vk:get-physical-device-sparse-image-format-properties-2
                        "Represents [vkGetPhysicalDeviceSparseImageFormatProperties2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSparseImageFormatProperties2.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - FORMAT-INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    SPARSE-IMAGE-FORMAT-PROPERTIES-2)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-SPARSE-IMAGE-FORMAT-INFO-2
See SPARSE-IMAGE-FORMAT-PROPERTIES-2
"
                        ((physical-device cffi:foreign-pointer) (format-info (or vk:physical-device-sparse-image-format-info-2 cffi:foreign-pointer)))
                        ()
                        property-count
                        properties
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (format-info '(:struct %vk:physical-device-sparse-image-format-info-2) format-info :in)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:sparse-image-format-properties-2) properties :out :list))

(defvk-get-structs-fun (get-physical-device-sparse-image-format-properties-2-khr
                        %vk:get-physical-device-sparse-image-format-properties-2-khr
                        "Represents [vkGetPhysicalDeviceSparseImageFormatProperties2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSparseImageFormatProperties2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - FORMAT-INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    SPARSE-IMAGE-FORMAT-PROPERTIES-2)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-SPARSE-IMAGE-FORMAT-INFO-2
See SPARSE-IMAGE-FORMAT-PROPERTIES-2
"
                        ((physical-device cffi:foreign-pointer) (format-info (or vk:physical-device-sparse-image-format-info-2 cffi:foreign-pointer)))
                        ()
                        property-count
                        properties
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (format-info '(:struct %vk:physical-device-sparse-image-format-info-2) format-info :in)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:sparse-image-format-properties-2) properties :out :list))

(defvk-simple-fun (cmd-push-descriptor-set-khr
                   %vk:cmd-push-descriptor-set-khr
                   "Represents [vkCmdPushDescriptorSetKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdPushDescriptorSetKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - PIPELINE-BIND-POINT: <a description>
 - LAYOUT: <a description>
 - SET: <a description>
 - DESCRIPTOR-WRITES: <a description>

See COMMAND-BUFFER
See PIPELINE-BIND-POINT
See PIPELINE-LAYOUT
See WRITE-DESCRIPTOR-SET
"
                   ((command-buffer cffi:foreign-pointer) (pipeline-bind-point keyword) (layout cffi:foreign-pointer) (set unsigned-byte) (descriptor-writes list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (pipeline-bind-point '%vk:pipeline-bind-point pipeline-bind-point :in :raw)
  (layout '%vk:pipeline-layout layout :in :handle)
  (set :uint32 set :in :raw)
  (descriptor-write-count :uint32 (length descriptor-writes) :in :raw)
  (descriptor-writes '(:struct %vk:write-descriptor-set) descriptor-writes :in :list))

(defvk-simple-fun (trim-command-pool
                   %vk:trim-command-pool
                   "Represents [vkTrimCommandPool](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkTrimCommandPool.html).

Args:
 - DEVICE: <a description>
 - COMMAND-POOL: <a description>
 - FLAGS: (optional) <a description>

See COMMAND-POOL
See COMMAND-POOL-TRIM-FLAGS
See DEVICE
"
                   ((device cffi:foreign-pointer) (command-pool cffi:foreign-pointer))
                   (((flags nil) (or unsigned-byte list)))
                  nil)
  (device '%vk:device device :in :handle)
  (command-pool '%vk:command-pool command-pool :in :handle)
  (flags '%vk:command-pool-trim-flags flags :in :raw :optional))

(defvk-simple-fun (trim-command-pool-khr
                   %vk:trim-command-pool-khr
                   "Represents [vkTrimCommandPoolKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkTrimCommandPoolKHR.html).

Args:
 - DEVICE: <a description>
 - COMMAND-POOL: <a description>
 - FLAGS: (optional) <a description>

See COMMAND-POOL
See COMMAND-POOL-TRIM-FLAGS
See DEVICE
"
                   ((device cffi:foreign-pointer) (command-pool cffi:foreign-pointer))
                   (((flags nil) (or unsigned-byte list)))
                  nil)
  (device '%vk:device device :in :handle)
  (command-pool '%vk:command-pool command-pool :in :handle)
  (flags '%vk:command-pool-trim-flags flags :in :raw :optional))

(defvk-get-struct-fun (get-physical-device-external-buffer-properties
                       %vk:get-physical-device-external-buffer-properties
                       "Represents [vkGetPhysicalDeviceExternalBufferProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceExternalBufferProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - EXTERNAL-BUFFER-INFO: <a description>

Returns:
  (CL:VALUES
    EXTERNAL-BUFFER-PROPERTIES)

See EXTERNAL-BUFFER-PROPERTIES
See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-EXTERNAL-BUFFER-INFO
"
                       ((physical-device cffi:foreign-pointer) (external-buffer-info (or vk:physical-device-external-buffer-info cffi:foreign-pointer)))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (external-buffer-info '(:struct %vk:physical-device-external-buffer-info) external-buffer-info :in)
  (external-buffer-properties '(:struct %vk:external-buffer-properties) external-buffer-properties :out))

(defvk-get-struct-fun (get-physical-device-external-buffer-properties-khr
                       %vk:get-physical-device-external-buffer-properties-khr
                       "Represents [vkGetPhysicalDeviceExternalBufferPropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceExternalBufferPropertiesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - EXTERNAL-BUFFER-INFO: <a description>

Returns:
  (CL:VALUES
    EXTERNAL-BUFFER-PROPERTIES)

See EXTERNAL-BUFFER-PROPERTIES
See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-EXTERNAL-BUFFER-INFO
"
                       ((physical-device cffi:foreign-pointer) (external-buffer-info (or vk:physical-device-external-buffer-info cffi:foreign-pointer)))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (external-buffer-info '(:struct %vk:physical-device-external-buffer-info) external-buffer-info :in)
  (external-buffer-properties '(:struct %vk:external-buffer-properties) external-buffer-properties :out))

(defvk-get-struct-fun (get-memory-win32-handle-khr
                       %vk:get-memory-win32-handle-khr
                       "Represents [vkGetMemoryWin32HandleKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetMemoryWin32HandleKHR.html).

Args:
 - DEVICE: <a description>
 - GET-WIN32-HANDLE-INFO: <a description>

Returns:
  (CL:VALUES
    HANDLE
    RESULT)

See DEVICE
See HANDLE
See MEMORY-GET-WIN32-HANDLE-INFO-KHR
See RESULT
"
                       ((device cffi:foreign-pointer) (get-win32-handle-info (or vk:memory-get-win32-handle-info-khr cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (get-win32-handle-info '(:struct %vk:memory-get-win32-handle-info-khr) get-win32-handle-info :in)
  (handle '(:pointer :void) handle :out :handle))

(defvk-get-struct-fun (get-memory-win32-handle-properties-khr
                       %vk:get-memory-win32-handle-properties-khr
                       "Represents [vkGetMemoryWin32HandlePropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetMemoryWin32HandlePropertiesKHR.html).

Args:
 - DEVICE: <a description>
 - HANDLE-TYPE: <a description>
 - HANDLE: <a description>

Returns:
  (CL:VALUES
    MEMORY-WIN32-HANDLE-PROPERTIES-KHR
    RESULT)

See DEVICE
See EXTERNAL-MEMORY-HANDLE-TYPE-FLAG-BITS
See HANDLE
See MEMORY-WIN32-HANDLE-PROPERTIES-KHR
See RESULT
"
                       ((device cffi:foreign-pointer) (handle-type keyword) (handle cffi:foreign-pointer))
                       ())
  (device '%vk:device device :in :handle)
  (handle-type '%vk:external-memory-handle-type-flag-bits handle-type :in :raw)
  (handle '(:pointer :void) handle :in :handle)
  (memory-win32-handle-properties '(:struct %vk:memory-win32-handle-properties-khr) memory-win32-handle-properties :out))

(defvk-create-handle-fun (get-memory-fd-khr
                          %vk:get-memory-fd-khr
                          "Represents [vkGetMemoryFdKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetMemoryFdKHR.html).

Args:
 - DEVICE: <a description>
 - GET-FD-INFO: <a description>

Returns:
  (CL:VALUES
    INT
    RESULT)

See DEVICE
See MEMORY-GET-FD-INFO-KHR
See RESULT
"
                          ((device cffi:foreign-pointer) (get-fd-info (or vk:memory-get-fd-info-khr cffi:foreign-pointer)))
                          ()
                          nil)
  (device '%vk:device device :in :handle)
  (get-fd-info '(:struct %vk:memory-get-fd-info-khr) get-fd-info :in)
  (fd :int fd :out))

(defvk-get-struct-fun (get-memory-fd-properties-khr
                       %vk:get-memory-fd-properties-khr
                       "Represents [vkGetMemoryFdPropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetMemoryFdPropertiesKHR.html).

Args:
 - DEVICE: <a description>
 - HANDLE-TYPE: <a description>
 - FD: <a description>

Returns:
  (CL:VALUES
    MEMORY-FD-PROPERTIES-KHR
    RESULT)

See DEVICE
See EXTERNAL-MEMORY-HANDLE-TYPE-FLAG-BITS
See MEMORY-FD-PROPERTIES-KHR
See RESULT
"
                       ((device cffi:foreign-pointer) (handle-type keyword) (fd integer))
                       ())
  (device '%vk:device device :in :handle)
  (handle-type '%vk:external-memory-handle-type-flag-bits handle-type :in :raw)
  (fd :int fd :in :raw)
  (memory-fd-properties '(:struct %vk:memory-fd-properties-khr) memory-fd-properties :out))

(defvk-get-struct-fun (get-memory-zircon-handle-fuchsia
                       %vk:get-memory-zircon-handle-fuchsia
                       "Represents [vkGetMemoryZirconHandleFUCHSIA](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetMemoryZirconHandleFUCHSIA.html).

Args:
 - DEVICE: <a description>
 - GET-ZIRCON-HANDLE-INFO: <a description>

Returns:
  (CL:VALUES
    ZX_HANDLE_T
    RESULT)

See DEVICE
See MEMORY-GET-ZIRCON-HANDLE-INFO-FUCHSIA
See RESULT
See ZX_HANDLE_T
"
                       ((device cffi:foreign-pointer) (get-zircon-handle-info (or vk:memory-get-zircon-handle-info-fuchsia cffi:foreign-pointer)))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (get-zircon-handle-info '(:struct %vk:memory-get-zircon-handle-info-fuchsia) get-zircon-handle-info :in)
  (zircon-handle '(:pointer :void) zircon-handle :out :handle))

(defvk-get-struct-fun (get-memory-zircon-handle-properties-fuchsia
                       %vk:get-memory-zircon-handle-properties-fuchsia
                       "Represents [vkGetMemoryZirconHandlePropertiesFUCHSIA](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetMemoryZirconHandlePropertiesFUCHSIA.html).

Args:
 - DEVICE: <a description>
 - HANDLE-TYPE: <a description>
 - ZIRCON-HANDLE: <a description>

Returns:
  (CL:VALUES
    MEMORY-ZIRCON-HANDLE-PROPERTIES-FUCHSIA
    RESULT)

See DEVICE
See EXTERNAL-MEMORY-HANDLE-TYPE-FLAG-BITS
See MEMORY-ZIRCON-HANDLE-PROPERTIES-FUCHSIA
See RESULT
See ZX_HANDLE_T
"
                       ((device cffi:foreign-pointer) (handle-type keyword) (zircon-handle cffi:foreign-pointer))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (handle-type '%vk:external-memory-handle-type-flag-bits handle-type :in :raw)
  (zircon-handle '(:pointer :void) zircon-handle :in :handle)
  (memory-zircon-handle-properties '(:struct %vk:memory-zircon-handle-properties-fuchsia) memory-zircon-handle-properties :out))

(defvk-get-struct-fun (get-physical-device-external-semaphore-properties
                       %vk:get-physical-device-external-semaphore-properties
                       "Represents [vkGetPhysicalDeviceExternalSemaphoreProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceExternalSemaphoreProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - EXTERNAL-SEMAPHORE-INFO: <a description>

Returns:
  (CL:VALUES
    EXTERNAL-SEMAPHORE-PROPERTIES)

See EXTERNAL-SEMAPHORE-PROPERTIES
See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-EXTERNAL-SEMAPHORE-INFO
"
                       ((physical-device cffi:foreign-pointer) (external-semaphore-info (or vk:physical-device-external-semaphore-info cffi:foreign-pointer)))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (external-semaphore-info '(:struct %vk:physical-device-external-semaphore-info) external-semaphore-info :in)
  (external-semaphore-properties '(:struct %vk:external-semaphore-properties) external-semaphore-properties :out))

(defvk-get-struct-fun (get-physical-device-external-semaphore-properties-khr
                       %vk:get-physical-device-external-semaphore-properties-khr
                       "Represents [vkGetPhysicalDeviceExternalSemaphorePropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceExternalSemaphorePropertiesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - EXTERNAL-SEMAPHORE-INFO: <a description>

Returns:
  (CL:VALUES
    EXTERNAL-SEMAPHORE-PROPERTIES)

See EXTERNAL-SEMAPHORE-PROPERTIES
See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-EXTERNAL-SEMAPHORE-INFO
"
                       ((physical-device cffi:foreign-pointer) (external-semaphore-info (or vk:physical-device-external-semaphore-info cffi:foreign-pointer)))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (external-semaphore-info '(:struct %vk:physical-device-external-semaphore-info) external-semaphore-info :in)
  (external-semaphore-properties '(:struct %vk:external-semaphore-properties) external-semaphore-properties :out))

(defvk-get-struct-fun (get-semaphore-win32-handle-khr
                       %vk:get-semaphore-win32-handle-khr
                       "Represents [vkGetSemaphoreWin32HandleKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetSemaphoreWin32HandleKHR.html).

Args:
 - DEVICE: <a description>
 - GET-WIN32-HANDLE-INFO: <a description>

Returns:
  (CL:VALUES
    HANDLE
    RESULT)

See DEVICE
See HANDLE
See RESULT
See SEMAPHORE-GET-WIN32-HANDLE-INFO-KHR
"
                       ((device cffi:foreign-pointer) (get-win32-handle-info (or vk:semaphore-get-win32-handle-info-khr cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (get-win32-handle-info '(:struct %vk:semaphore-get-win32-handle-info-khr) get-win32-handle-info :in)
  (handle '(:pointer :void) handle :out :handle))

(defvk-simple-fun (import-semaphore-win32-handle-khr
                   %vk:import-semaphore-win32-handle-khr
                   "Represents [vkImportSemaphoreWin32HandleKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkImportSemaphoreWin32HandleKHR.html).

Args:
 - DEVICE: <a description>
 - IMPORT-SEMAPHORE-WIN32-HANDLE-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See IMPORT-SEMAPHORE-WIN32-HANDLE-INFO-KHR
See RESULT
"
                   ((device cffi:foreign-pointer) (import-semaphore-win32-handle-info (or vk:import-semaphore-win32-handle-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (import-semaphore-win32-handle-info '(:struct %vk:import-semaphore-win32-handle-info-khr) import-semaphore-win32-handle-info :in))

(defvk-create-handle-fun (get-semaphore-fd-khr
                          %vk:get-semaphore-fd-khr
                          "Represents [vkGetSemaphoreFdKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetSemaphoreFdKHR.html).

Args:
 - DEVICE: <a description>
 - GET-FD-INFO: <a description>

Returns:
  (CL:VALUES
    INT
    RESULT)

See DEVICE
See RESULT
See SEMAPHORE-GET-FD-INFO-KHR
"
                          ((device cffi:foreign-pointer) (get-fd-info (or vk:semaphore-get-fd-info-khr cffi:foreign-pointer)))
                          ()
                          nil)
  (device '%vk:device device :in :handle)
  (get-fd-info '(:struct %vk:semaphore-get-fd-info-khr) get-fd-info :in)
  (fd :int fd :out))

(defvk-simple-fun (import-semaphore-fd-khr
                   %vk:import-semaphore-fd-khr
                   "Represents [vkImportSemaphoreFdKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkImportSemaphoreFdKHR.html).

Args:
 - DEVICE: <a description>
 - IMPORT-SEMAPHORE-FD-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See IMPORT-SEMAPHORE-FD-INFO-KHR
See RESULT
"
                   ((device cffi:foreign-pointer) (import-semaphore-fd-info (or vk:import-semaphore-fd-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (import-semaphore-fd-info '(:struct %vk:import-semaphore-fd-info-khr) import-semaphore-fd-info :in))

(defvk-get-struct-fun (get-semaphore-zircon-handle-fuchsia
                       %vk:get-semaphore-zircon-handle-fuchsia
                       "Represents [vkGetSemaphoreZirconHandleFUCHSIA](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetSemaphoreZirconHandleFUCHSIA.html).

Args:
 - DEVICE: <a description>
 - GET-ZIRCON-HANDLE-INFO: <a description>

Returns:
  (CL:VALUES
    ZX_HANDLE_T
    RESULT)

See DEVICE
See RESULT
See SEMAPHORE-GET-ZIRCON-HANDLE-INFO-FUCHSIA
See ZX_HANDLE_T
"
                       ((device cffi:foreign-pointer) (get-zircon-handle-info (or vk:semaphore-get-zircon-handle-info-fuchsia cffi:foreign-pointer)))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (get-zircon-handle-info '(:struct %vk:semaphore-get-zircon-handle-info-fuchsia) get-zircon-handle-info :in)
  (zircon-handle '(:pointer :void) zircon-handle :out :handle))

(defvk-simple-fun (import-semaphore-zircon-handle-fuchsia
                   %vk:import-semaphore-zircon-handle-fuchsia
                   "Represents [vkImportSemaphoreZirconHandleFUCHSIA](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkImportSemaphoreZirconHandleFUCHSIA.html).

Args:
 - DEVICE: <a description>
 - IMPORT-SEMAPHORE-ZIRCON-HANDLE-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See IMPORT-SEMAPHORE-ZIRCON-HANDLE-INFO-FUCHSIA
See RESULT
"
                   ((device cffi:foreign-pointer) (import-semaphore-zircon-handle-info (or vk:import-semaphore-zircon-handle-info-fuchsia cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (import-semaphore-zircon-handle-info '(:struct %vk:import-semaphore-zircon-handle-info-fuchsia) import-semaphore-zircon-handle-info :in))

(defvk-get-struct-fun (get-physical-device-external-fence-properties
                       %vk:get-physical-device-external-fence-properties
                       "Represents [vkGetPhysicalDeviceExternalFenceProperties](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceExternalFenceProperties.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - EXTERNAL-FENCE-INFO: <a description>

Returns:
  (CL:VALUES
    EXTERNAL-FENCE-PROPERTIES)

See EXTERNAL-FENCE-PROPERTIES
See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-EXTERNAL-FENCE-INFO
"
                       ((physical-device cffi:foreign-pointer) (external-fence-info (or vk:physical-device-external-fence-info cffi:foreign-pointer)))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (external-fence-info '(:struct %vk:physical-device-external-fence-info) external-fence-info :in)
  (external-fence-properties '(:struct %vk:external-fence-properties) external-fence-properties :out))

(defvk-get-struct-fun (get-physical-device-external-fence-properties-khr
                       %vk:get-physical-device-external-fence-properties-khr
                       "Represents [vkGetPhysicalDeviceExternalFencePropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceExternalFencePropertiesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - EXTERNAL-FENCE-INFO: <a description>

Returns:
  (CL:VALUES
    EXTERNAL-FENCE-PROPERTIES)

See EXTERNAL-FENCE-PROPERTIES
See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-EXTERNAL-FENCE-INFO
"
                       ((physical-device cffi:foreign-pointer) (external-fence-info (or vk:physical-device-external-fence-info cffi:foreign-pointer)))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (external-fence-info '(:struct %vk:physical-device-external-fence-info) external-fence-info :in)
  (external-fence-properties '(:struct %vk:external-fence-properties) external-fence-properties :out))

(defvk-get-struct-fun (get-fence-win32-handle-khr
                       %vk:get-fence-win32-handle-khr
                       "Represents [vkGetFenceWin32HandleKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetFenceWin32HandleKHR.html).

Args:
 - DEVICE: <a description>
 - GET-WIN32-HANDLE-INFO: <a description>

Returns:
  (CL:VALUES
    HANDLE
    RESULT)

See DEVICE
See FENCE-GET-WIN32-HANDLE-INFO-KHR
See HANDLE
See RESULT
"
                       ((device cffi:foreign-pointer) (get-win32-handle-info (or vk:fence-get-win32-handle-info-khr cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (get-win32-handle-info '(:struct %vk:fence-get-win32-handle-info-khr) get-win32-handle-info :in)
  (handle '(:pointer :void) handle :out :handle))

(defvk-simple-fun (import-fence-win32-handle-khr
                   %vk:import-fence-win32-handle-khr
                   "Represents [vkImportFenceWin32HandleKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkImportFenceWin32HandleKHR.html).

Args:
 - DEVICE: <a description>
 - IMPORT-FENCE-WIN32-HANDLE-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See IMPORT-FENCE-WIN32-HANDLE-INFO-KHR
See RESULT
"
                   ((device cffi:foreign-pointer) (import-fence-win32-handle-info (or vk:import-fence-win32-handle-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (import-fence-win32-handle-info '(:struct %vk:import-fence-win32-handle-info-khr) import-fence-win32-handle-info :in))

(defvk-create-handle-fun (get-fence-fd-khr
                          %vk:get-fence-fd-khr
                          "Represents [vkGetFenceFdKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetFenceFdKHR.html).

Args:
 - DEVICE: <a description>
 - GET-FD-INFO: <a description>

Returns:
  (CL:VALUES
    INT
    RESULT)

See DEVICE
See FENCE-GET-FD-INFO-KHR
See RESULT
"
                          ((device cffi:foreign-pointer) (get-fd-info (or vk:fence-get-fd-info-khr cffi:foreign-pointer)))
                          ()
                          nil)
  (device '%vk:device device :in :handle)
  (get-fd-info '(:struct %vk:fence-get-fd-info-khr) get-fd-info :in)
  (fd :int fd :out))

(defvk-simple-fun (import-fence-fd-khr
                   %vk:import-fence-fd-khr
                   "Represents [vkImportFenceFdKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkImportFenceFdKHR.html).

Args:
 - DEVICE: <a description>
 - IMPORT-FENCE-FD-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See IMPORT-FENCE-FD-INFO-KHR
See RESULT
"
                   ((device cffi:foreign-pointer) (import-fence-fd-info (or vk:import-fence-fd-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (import-fence-fd-info '(:struct %vk:import-fence-fd-info-khr) import-fence-fd-info :in))

(defvk-simple-fun (release-display-ext
                   %vk:release-display-ext
                   "Represents [vkReleaseDisplayEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkReleaseDisplayEXT.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - DISPLAY: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DISPLAY-KHR
See PHYSICAL-DEVICE
See RESULT
"
                   ((physical-device cffi:foreign-pointer) (display cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (display '%vk:display-khr display :in :handle))

(defvk-simple-fun (acquire-xlib-display-ext
                   %vk:acquire-xlib-display-ext
                   "Represents [vkAcquireXlibDisplayEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkAcquireXlibDisplayEXT.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - DPY: <a description>
 - DISPLAY: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DISPLAY
See DISPLAY-KHR
See PHYSICAL-DEVICE
See RESULT
"
                   ((physical-device cffi:foreign-pointer) (dpy cffi:foreign-pointer) (display cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (dpy '(:pointer :void) dpy :in :handle)
  (display '%vk:display-khr display :in :handle))

(defvk-create-handle-fun (get-rand-r-output-display-ext
                          %vk:get-rand-r-output-display-ext
                          "Represents [vkGetRandROutputDisplayEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetRandROutputDisplayEXT.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - DPY: <a description>
 - RR-OUTPUT: <a description>

Returns:
  (CL:VALUES
    DISPLAY-KHR
    RESULT)

See DISPLAY
See DISPLAY-KHR
See PHYSICAL-DEVICE
See RESULT
See RR-OUTPUT
"
                          ((physical-device cffi:foreign-pointer) (dpy cffi:foreign-pointer) (rr-output cffi:foreign-pointer))
                          ()
                          nil
                          t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (dpy '(:pointer :void) dpy :in :handle)
  (rr-output '(:pointer :void) rr-output :in :handle)
  (display '%vk:display-khr display :out :handle))

(defvk-simple-fun (acquire-winrt-display-nv
                   %vk:acquire-winrt-display-nv
                   "Represents [vkAcquireWinrtDisplayNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkAcquireWinrtDisplayNV.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - DISPLAY: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DISPLAY-KHR
See PHYSICAL-DEVICE
See RESULT
"
                   ((physical-device cffi:foreign-pointer) (display cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (display '%vk:display-khr display :in :handle))

(defvk-create-handle-fun (get-winrt-display-nv
                          %vk:get-winrt-display-nv
                          "Represents [vkGetWinrtDisplayNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetWinrtDisplayNV.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - DEVICE-RELATIVE-ID: <a description>

Returns:
  (CL:VALUES
    DISPLAY-KHR
    RESULT)

See DISPLAY-KHR
See PHYSICAL-DEVICE
See RESULT
"
                          ((physical-device cffi:foreign-pointer) (device-relative-id unsigned-byte))
                          ()
                          nil
                          t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (device-relative-id :uint32 device-relative-id :in :raw)
  (display '%vk:display-khr display :out :handle))

(defvk-simple-fun (display-power-control-ext
                   %vk:display-power-control-ext
                   "Represents [vkDisplayPowerControlEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDisplayPowerControlEXT.html).

Args:
 - DEVICE: <a description>
 - DISPLAY: <a description>
 - DISPLAY-POWER-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See DISPLAY-KHR
See DISPLAY-POWER-INFO-EXT
See RESULT
"
                   ((device cffi:foreign-pointer) (display cffi:foreign-pointer) (display-power-info (or vk:display-power-info-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (display '%vk:display-khr display :in :handle)
  (display-power-info '(:struct %vk:display-power-info-ext) display-power-info :in))

(defvk-create-handle-fun (register-device-event-ext
                          %vk:register-device-event-ext
                          "Represents [vkRegisterDeviceEventEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkRegisterDeviceEventEXT.html).

Args:
 - DEVICE: <a description>
 - DEVICE-EVENT-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    FENCE
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See DEVICE-EVENT-INFO-EXT
See FENCE
See RESULT
"
                          ((device cffi:foreign-pointer) (device-event-info (or vk:device-event-info-ext cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (device '%vk:device device :in :handle)
  (device-event-info '(:struct %vk:device-event-info-ext) device-event-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (fence '%vk:fence fence :out :handle))

(defvk-create-handle-fun (register-display-event-ext
                          %vk:register-display-event-ext
                          "Represents [vkRegisterDisplayEventEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkRegisterDisplayEventEXT.html).

Args:
 - DEVICE: <a description>
 - DISPLAY: <a description>
 - DISPLAY-EVENT-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    FENCE
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See DISPLAY-EVENT-INFO-EXT
See DISPLAY-KHR
See FENCE
See RESULT
"
                          ((device cffi:foreign-pointer) (display cffi:foreign-pointer) (display-event-info (or vk:display-event-info-ext cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (device '%vk:device device :in :handle)
  (display '%vk:display-khr display :in :handle)
  (display-event-info '(:struct %vk:display-event-info-ext) display-event-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (fence '%vk:fence fence :out :handle))

(defvk-create-handle-fun (get-swapchain-counter-ext
                          %vk:get-swapchain-counter-ext
                          "Represents [vkGetSwapchainCounterEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetSwapchainCounterEXT.html).

Args:
 - DEVICE: <a description>
 - SWAPCHAIN: <a description>
 - COUNTER: <a description>

Returns:
  (CL:VALUES
    UINT-6-4_T
    RESULT)

See DEVICE
See RESULT
See SURFACE-COUNTER-FLAG-BITS-EXT
See SWAPCHAIN-KHR
"
                          ((device cffi:foreign-pointer) (swapchain cffi:foreign-pointer) (counter keyword))
                          ()
                          nil
                          t)
  (device '%vk:device device :in :handle)
  (swapchain '%vk:swapchain-khr swapchain :in :handle)
  (counter '%vk:surface-counter-flag-bits-ext counter :in :raw)
  (counter-value :uint64 counter-value :out))

(defvk-get-struct-fun (get-physical-device-surface-capabilities-2-ext
                       %vk:get-physical-device-surface-capabilities-2-ext
                       "Represents [vkGetPhysicalDeviceSurfaceCapabilities2EXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSurfaceCapabilities2EXT.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - SURFACE: <a description>

Returns:
  (CL:VALUES
    SURFACE-CAPABILITIES-2-EXT
    RESULT)

See PHYSICAL-DEVICE
See RESULT
See SURFACE-CAPABILITIES-2-EXT
See SURFACE-KHR
"
                       ((physical-device cffi:foreign-pointer) (surface cffi:foreign-pointer))
                       ()
                       t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (surface '%vk:surface-khr surface :in :handle)
  (surface-capabilities '(:struct %vk:surface-capabilities-2-ext) surface-capabilities :out))

(defvk-enumerate-fun (enumerate-physical-device-groups
                      %vk:enumerate-physical-device-groups
                      "Represents [vkEnumeratePhysicalDeviceGroups](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkEnumeratePhysicalDeviceGroups.html).

Args:
 - INSTANCE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PHYSICAL-DEVICE-GROUP-PROPERTIES
    RESULT)

See INSTANCE
See PHYSICAL-DEVICE-GROUP-PROPERTIES
See RESULT
"
                      ((instance cffi:foreign-pointer))
                      ()
                      physical-device-group-count
                      physical-device-group-properties
                      nil)
  (instance '%vk:instance instance :in :handle)
  (physical-device-group-count :uint32 physical-device-group-count :out)
  (physical-device-group-properties '(:struct %vk:physical-device-group-properties) physical-device-group-properties :out :list))

(defvk-enumerate-fun (enumerate-physical-device-groups-khr
                      %vk:enumerate-physical-device-groups-khr
                      "Represents [vkEnumeratePhysicalDeviceGroupsKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkEnumeratePhysicalDeviceGroupsKHR.html).

Args:
 - INSTANCE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PHYSICAL-DEVICE-GROUP-PROPERTIES
    RESULT)

See INSTANCE
See PHYSICAL-DEVICE-GROUP-PROPERTIES
See RESULT
"
                      ((instance cffi:foreign-pointer))
                      ()
                      physical-device-group-count
                      physical-device-group-properties
                      nil)
  (instance '%vk:instance instance :in :handle)
  (physical-device-group-count :uint32 physical-device-group-count :out)
  (physical-device-group-properties '(:struct %vk:physical-device-group-properties) physical-device-group-properties :out :list))

(defvk-get-struct-fun (get-device-group-peer-memory-features
                       %vk:get-device-group-peer-memory-features
                       "Represents [vkGetDeviceGroupPeerMemoryFeatures](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceGroupPeerMemoryFeatures.html).

Args:
 - DEVICE: <a description>
 - HEAP-INDEX: <a description>
 - LOCAL-DEVICE-INDEX: <a description>
 - REMOTE-DEVICE-INDEX: <a description>

Returns:
  (CL:VALUES
    PEER-MEMORY-FEATURE-FLAGS)

See DEVICE
See PEER-MEMORY-FEATURE-FLAGS
"
                       ((device cffi:foreign-pointer) (heap-index unsigned-byte) (local-device-index unsigned-byte) (remote-device-index unsigned-byte))
                       ())
  (device '%vk:device device :in :handle)
  (heap-index :uint32 heap-index :in :raw)
  (local-device-index :uint32 local-device-index :in :raw)
  (remote-device-index :uint32 remote-device-index :in :raw)
  (peer-memory-features '%vk:peer-memory-feature-flags peer-memory-features :out :raw))

(defvk-get-struct-fun (get-device-group-peer-memory-features-khr
                       %vk:get-device-group-peer-memory-features-khr
                       "Represents [vkGetDeviceGroupPeerMemoryFeaturesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceGroupPeerMemoryFeaturesKHR.html).

Args:
 - DEVICE: <a description>
 - HEAP-INDEX: <a description>
 - LOCAL-DEVICE-INDEX: <a description>
 - REMOTE-DEVICE-INDEX: <a description>

Returns:
  (CL:VALUES
    PEER-MEMORY-FEATURE-FLAGS)

See DEVICE
See PEER-MEMORY-FEATURE-FLAGS
"
                       ((device cffi:foreign-pointer) (heap-index unsigned-byte) (local-device-index unsigned-byte) (remote-device-index unsigned-byte))
                       ())
  (device '%vk:device device :in :handle)
  (heap-index :uint32 heap-index :in :raw)
  (local-device-index :uint32 local-device-index :in :raw)
  (remote-device-index :uint32 remote-device-index :in :raw)
  (peer-memory-features '%vk:peer-memory-feature-flags peer-memory-features :out :raw))

(defvk-simple-fun (bind-buffer-memory-2
                   %vk:bind-buffer-memory-2
                   "Represents [vkBindBufferMemory2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkBindBufferMemory2.html).

Args:
 - DEVICE: <a description>
 - BIND-INFOS: <a description>

Returns:
  (CL:VALUES
    RESULT)

See BIND-BUFFER-MEMORY-INFO
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (bind-infos list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (bind-info-count :uint32 (length bind-infos) :in :raw)
  (bind-infos '(:struct %vk:bind-buffer-memory-info) bind-infos :in :list))

(defvk-simple-fun (bind-buffer-memory-2-khr
                   %vk:bind-buffer-memory-2-khr
                   "Represents [vkBindBufferMemory2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkBindBufferMemory2KHR.html).

Args:
 - DEVICE: <a description>
 - BIND-INFOS: <a description>

Returns:
  (CL:VALUES
    RESULT)

See BIND-BUFFER-MEMORY-INFO
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (bind-infos list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (bind-info-count :uint32 (length bind-infos) :in :raw)
  (bind-infos '(:struct %vk:bind-buffer-memory-info) bind-infos :in :list))

(defvk-simple-fun (bind-image-memory-2
                   %vk:bind-image-memory-2
                   "Represents [vkBindImageMemory2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkBindImageMemory2.html).

Args:
 - DEVICE: <a description>
 - BIND-INFOS: <a description>

Returns:
  (CL:VALUES
    RESULT)

See BIND-IMAGE-MEMORY-INFO
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (bind-infos list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (bind-info-count :uint32 (length bind-infos) :in :raw)
  (bind-infos '(:struct %vk:bind-image-memory-info) bind-infos :in :list))

(defvk-simple-fun (bind-image-memory-2-khr
                   %vk:bind-image-memory-2-khr
                   "Represents [vkBindImageMemory2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkBindImageMemory2KHR.html).

Args:
 - DEVICE: <a description>
 - BIND-INFOS: <a description>

Returns:
  (CL:VALUES
    RESULT)

See BIND-IMAGE-MEMORY-INFO
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (bind-infos list))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (bind-info-count :uint32 (length bind-infos) :in :raw)
  (bind-infos '(:struct %vk:bind-image-memory-info) bind-infos :in :list))

(defvk-simple-fun (cmd-set-device-mask
                   %vk:cmd-set-device-mask
                   "Represents [vkCmdSetDeviceMask](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetDeviceMask.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DEVICE-MASK: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (device-mask unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (device-mask :uint32 device-mask :in :raw))

(defvk-simple-fun (cmd-set-device-mask-khr
                   %vk:cmd-set-device-mask-khr
                   "Represents [vkCmdSetDeviceMaskKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetDeviceMaskKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DEVICE-MASK: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (device-mask unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (device-mask :uint32 device-mask :in :raw))

(defvk-get-struct-fun (get-device-group-present-capabilities-khr
                       %vk:get-device-group-present-capabilities-khr
                       "Represents [vkGetDeviceGroupPresentCapabilitiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceGroupPresentCapabilitiesKHR.html).

Args:
 - DEVICE: <a description>

Returns:
  (CL:VALUES
    DEVICE-GROUP-PRESENT-CAPABILITIES-KHR
    RESULT)

See DEVICE
See DEVICE-GROUP-PRESENT-CAPABILITIES-KHR
See RESULT
"
                       ((device cffi:foreign-pointer))
                       ())
  (device '%vk:device device :in :handle)
  (device-group-present-capabilities '(:struct %vk:device-group-present-capabilities-khr) device-group-present-capabilities :out))

(defvk-get-struct-fun (get-device-group-surface-present-modes-khr
                       %vk:get-device-group-surface-present-modes-khr
                       "Represents [vkGetDeviceGroupSurfacePresentModesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceGroupSurfacePresentModesKHR.html).

Args:
 - DEVICE: <a description>
 - SURFACE: <a description>

Returns:
  (CL:VALUES
    DEVICE-GROUP-PRESENT-MODE-FLAGS-KHR
    RESULT)

See DEVICE
See DEVICE-GROUP-PRESENT-MODE-FLAGS-KHR
See RESULT
See SURFACE-KHR
"
                       ((device cffi:foreign-pointer) (surface cffi:foreign-pointer))
                       ())
  (device '%vk:device device :in :handle)
  (surface '%vk:surface-khr surface :in :handle)
  (modes '%vk:device-group-present-mode-flags-khr modes :out :raw))

(defvk-create-handle-fun (acquire-next-image-2-khr
                          %vk:acquire-next-image-2-khr
                          "Represents [vkAcquireNextImage2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkAcquireNextImage2KHR.html).

Args:
 - DEVICE: <a description>
 - ACQUIRE-INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    RESULT)

See ACQUIRE-NEXT-IMAGE-INFO-KHR
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer) (acquire-info (or vk:acquire-next-image-info-khr cffi:foreign-pointer)))
                          ()
                          nil)
  (device '%vk:device device :in :handle)
  (acquire-info '(:struct %vk:acquire-next-image-info-khr) acquire-info :in)
  (image-index :uint32 image-index :out))

(defvk-simple-fun (cmd-dispatch-base
                   %vk:cmd-dispatch-base
                   "Represents [vkCmdDispatchBase](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDispatchBase.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BASE-GROUP-X: <a description>
 - BASE-GROUP-Y: <a description>
 - BASE-GROUP-Z: <a description>
 - GROUP-COUNT-X: <a description>
 - GROUP-COUNT-Y: <a description>
 - GROUP-COUNT-Z: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (base-group-x unsigned-byte) (base-group-y unsigned-byte) (base-group-z unsigned-byte) (group-count-x unsigned-byte) (group-count-y unsigned-byte) (group-count-z unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (base-group-x :uint32 base-group-x :in :raw)
  (base-group-y :uint32 base-group-y :in :raw)
  (base-group-z :uint32 base-group-z :in :raw)
  (group-count-x :uint32 group-count-x :in :raw)
  (group-count-y :uint32 group-count-y :in :raw)
  (group-count-z :uint32 group-count-z :in :raw))

(defvk-simple-fun (cmd-dispatch-base-khr
                   %vk:cmd-dispatch-base-khr
                   "Represents [vkCmdDispatchBaseKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDispatchBaseKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BASE-GROUP-X: <a description>
 - BASE-GROUP-Y: <a description>
 - BASE-GROUP-Z: <a description>
 - GROUP-COUNT-X: <a description>
 - GROUP-COUNT-Y: <a description>
 - GROUP-COUNT-Z: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (base-group-x unsigned-byte) (base-group-y unsigned-byte) (base-group-z unsigned-byte) (group-count-x unsigned-byte) (group-count-y unsigned-byte) (group-count-z unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (base-group-x :uint32 base-group-x :in :raw)
  (base-group-y :uint32 base-group-y :in :raw)
  (base-group-z :uint32 base-group-z :in :raw)
  (group-count-x :uint32 group-count-x :in :raw)
  (group-count-y :uint32 group-count-y :in :raw)
  (group-count-z :uint32 group-count-z :in :raw))

(defvk-enumerate-fun (get-physical-device-present-rectangles-khr
                      %vk:get-physical-device-present-rectangles-khr
                      "Represents [vkGetPhysicalDevicePresentRectanglesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDevicePresentRectanglesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - SURFACE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    RECT-2D
    RESULT)

See PHYSICAL-DEVICE
See RECT-2D
See RESULT
See SURFACE-KHR
"
                      ((physical-device cffi:foreign-pointer) (surface cffi:foreign-pointer))
                      ()
                      rect-count
                      rects
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (surface '%vk:surface-khr surface :in :handle)
  (rect-count :uint32 rect-count :out)
  (rects '(:struct %vk:rect-2d) rects :out :list))

(defvk-create-handle-fun (create-descriptor-update-template
                          %vk:create-descriptor-update-template
                          "Represents [vkCreateDescriptorUpdateTemplate](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDescriptorUpdateTemplate.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    DESCRIPTOR-UPDATE-TEMPLATE
    RESULT)

See ALLOCATION-CALLBACKS
See DESCRIPTOR-UPDATE-TEMPLATE
See DESCRIPTOR-UPDATE-TEMPLATE-CREATE-INFO
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:descriptor-update-template-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:descriptor-update-template-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (descriptor-update-template '%vk:descriptor-update-template descriptor-update-template :out :handle))

(defvk-create-handle-fun (create-descriptor-update-template-khr
                          %vk:create-descriptor-update-template-khr
                          "Represents [vkCreateDescriptorUpdateTemplateKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDescriptorUpdateTemplateKHR.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    DESCRIPTOR-UPDATE-TEMPLATE
    RESULT)

See ALLOCATION-CALLBACKS
See DESCRIPTOR-UPDATE-TEMPLATE
See DESCRIPTOR-UPDATE-TEMPLATE-CREATE-INFO
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:descriptor-update-template-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:descriptor-update-template-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (descriptor-update-template '%vk:descriptor-update-template descriptor-update-template :out :handle))

(defvk-simple-fun (destroy-descriptor-update-template
                   %vk:destroy-descriptor-update-template
                   "Represents [vkDestroyDescriptorUpdateTemplate](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyDescriptorUpdateTemplate.html).

Args:
 - DEVICE: <a description>
 - DESCRIPTOR-UPDATE-TEMPLATE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DESCRIPTOR-UPDATE-TEMPLATE
See DEVICE
"
                   ((device cffi:foreign-pointer))
                   (((descriptor-update-template (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (descriptor-update-template '%vk:descriptor-update-template descriptor-update-template :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (destroy-descriptor-update-template-khr
                   %vk:destroy-descriptor-update-template-khr
                   "Represents [vkDestroyDescriptorUpdateTemplateKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyDescriptorUpdateTemplateKHR.html).

Args:
 - DEVICE: <a description>
 - DESCRIPTOR-UPDATE-TEMPLATE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DESCRIPTOR-UPDATE-TEMPLATE
See DEVICE
"
                   ((device cffi:foreign-pointer))
                   (((descriptor-update-template (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (descriptor-update-template '%vk:descriptor-update-template descriptor-update-template :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (update-descriptor-set-with-template
                   %vk:update-descriptor-set-with-template
                   "Represents [vkUpdateDescriptorSetWithTemplate](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkUpdateDescriptorSetWithTemplate.html).

Args:
 - DEVICE: <a description>
 - DESCRIPTOR-SET: <a description>
 - DESCRIPTOR-UPDATE-TEMPLATE: <a description>
 - DATA: <a description>

See DESCRIPTOR-SET
See DESCRIPTOR-UPDATE-TEMPLATE
See DEVICE
"
                   ((device cffi:foreign-pointer) (descriptor-set cffi:foreign-pointer) (descriptor-update-template cffi:foreign-pointer) (data cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (descriptor-set '%vk:descriptor-set descriptor-set :in :handle)
  (descriptor-update-template '%vk:descriptor-update-template descriptor-update-template :in :handle)
  (data '(:pointer :void) data :in :handle))

(defvk-simple-fun (update-descriptor-set-with-template-khr
                   %vk:update-descriptor-set-with-template-khr
                   "Represents [vkUpdateDescriptorSetWithTemplateKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkUpdateDescriptorSetWithTemplateKHR.html).

Args:
 - DEVICE: <a description>
 - DESCRIPTOR-SET: <a description>
 - DESCRIPTOR-UPDATE-TEMPLATE: <a description>
 - DATA: <a description>

See DESCRIPTOR-SET
See DESCRIPTOR-UPDATE-TEMPLATE
See DEVICE
"
                   ((device cffi:foreign-pointer) (descriptor-set cffi:foreign-pointer) (descriptor-update-template cffi:foreign-pointer) (data cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (descriptor-set '%vk:descriptor-set descriptor-set :in :handle)
  (descriptor-update-template '%vk:descriptor-update-template descriptor-update-template :in :handle)
  (data '(:pointer :void) data :in :handle))

(defvk-simple-fun (cmd-push-descriptor-set-with-template-khr
                   %vk:cmd-push-descriptor-set-with-template-khr
                   "Represents [vkCmdPushDescriptorSetWithTemplateKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdPushDescriptorSetWithTemplateKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DESCRIPTOR-UPDATE-TEMPLATE: <a description>
 - LAYOUT: <a description>
 - SET: <a description>
 - DATA: <a description>

See COMMAND-BUFFER
See DESCRIPTOR-UPDATE-TEMPLATE
See PIPELINE-LAYOUT
"
                   ((command-buffer cffi:foreign-pointer) (descriptor-update-template cffi:foreign-pointer) (layout cffi:foreign-pointer) (set unsigned-byte) (data cffi:foreign-pointer))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (descriptor-update-template '%vk:descriptor-update-template descriptor-update-template :in :handle)
  (layout '%vk:pipeline-layout layout :in :handle)
  (set :uint32 set :in :raw)
  (data '(:pointer :void) data :in :handle))

(defvk-simple-fun (set-hdr-metadata-ext
                   %vk:set-hdr-metadata-ext
                   "Represents [vkSetHdrMetadataEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkSetHdrMetadataEXT.html).

Args:
 - DEVICE: <a description>
 - SWAPCHAINS: <a description>
 - METADATA: <a description>

See DEVICE
See HDR-METADATA-EXT
See SWAPCHAIN-KHR
"
                   ((device cffi:foreign-pointer) (swapchains list) (metadata list))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (swapchain-count :uint32 (length metadata) :in :raw)
  (swapchains '%vk:swapchain-khr swapchains :in :handle :list)
  (metadata '(:struct %vk:hdr-metadata-ext) metadata :in :list))

(defvk-simple-fun (get-swapchain-status-khr
                   %vk:get-swapchain-status-khr
                   "Represents [vkGetSwapchainStatusKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetSwapchainStatusKHR.html).

Args:
 - DEVICE: <a description>
 - SWAPCHAIN: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See RESULT
See SWAPCHAIN-KHR
"
                   ((device cffi:foreign-pointer) (swapchain cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (swapchain '%vk:swapchain-khr swapchain :in :handle))

(defvk-get-struct-fun (get-refresh-cycle-duration-google
                       %vk:get-refresh-cycle-duration-google
                       "Represents [vkGetRefreshCycleDurationGOOGLE](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetRefreshCycleDurationGOOGLE.html).

Args:
 - DEVICE: <a description>
 - SWAPCHAIN: <a description>

Returns:
  (CL:VALUES
    REFRESH-CYCLE-DURATION-GOOGLE
    RESULT)

See DEVICE
See REFRESH-CYCLE-DURATION-GOOGLE
See RESULT
See SWAPCHAIN-KHR
"
                       ((device cffi:foreign-pointer) (swapchain cffi:foreign-pointer))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (swapchain '%vk:swapchain-khr swapchain :in :handle)
  (display-timing-properties '(:struct %vk:refresh-cycle-duration-google) display-timing-properties :out))

(defvk-enumerate-fun (get-past-presentation-timing-google
                      %vk:get-past-presentation-timing-google
                      "Represents [vkGetPastPresentationTimingGOOGLE](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPastPresentationTimingGOOGLE.html).

Args:
 - DEVICE: <a description>
 - SWAPCHAIN: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PAST-PRESENTATION-TIMING-GOOGLE
    RESULT)

See DEVICE
See PAST-PRESENTATION-TIMING-GOOGLE
See RESULT
See SWAPCHAIN-KHR
"
                      ((device cffi:foreign-pointer) (swapchain cffi:foreign-pointer))
                      ()
                      presentation-timing-count
                      presentation-timings
                      nil
                      t)
  (device '%vk:device device :in :handle)
  (swapchain '%vk:swapchain-khr swapchain :in :handle)
  (presentation-timing-count :uint32 presentation-timing-count :out)
  (presentation-timings '(:struct %vk:past-presentation-timing-google) presentation-timings :out :list))

(defvk-create-handle-fun (create-i-os-surface-mvk
                          %vk:create-i-os-surface-mvk
                          "Represents [vkCreateIOSSurfaceMVK](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateIOSSurfaceMVK.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See I-OS-SURFACE-CREATE-INFO-MVK
See INSTANCE
See RESULT
See SURFACE-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:i-os-surface-create-info-mvk cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:i-os-surface-create-info-mvk) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-create-handle-fun (create-mac-os-surface-mvk
                          %vk:create-mac-os-surface-mvk
                          "Represents [vkCreateMacOSSurfaceMVK](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateMacOSSurfaceMVK.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See INSTANCE
See MAC-OS-SURFACE-CREATE-INFO-MVK
See RESULT
See SURFACE-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:mac-os-surface-create-info-mvk cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:mac-os-surface-create-info-mvk) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-create-handle-fun (create-metal-surface-ext
                          %vk:create-metal-surface-ext
                          "Represents [vkCreateMetalSurfaceEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateMetalSurfaceEXT.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See INSTANCE
See METAL-SURFACE-CREATE-INFO-EXT
See RESULT
See SURFACE-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:metal-surface-create-info-ext cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:metal-surface-create-info-ext) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-simple-fun (cmd-set-viewport-w-scaling-nv
                   %vk:cmd-set-viewport-w-scaling-nv
                   "Represents [vkCmdSetViewportWScalingNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetViewportWScalingNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-VIEWPORT: <a description>
 - VIEWPORT-W-SCALINGS: <a description>

See COMMAND-BUFFER
See VIEWPORT-W-SCALING-NV
"
                   ((command-buffer cffi:foreign-pointer) (first-viewport unsigned-byte) (viewport-w-scalings list))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-viewport :uint32 first-viewport :in :raw)
  (viewport-count :uint32 (length viewport-w-scalings) :in :raw)
  (viewport-w-scalings '(:struct %vk:viewport-w-scaling-nv) viewport-w-scalings :in :list))

(defvk-simple-fun (cmd-set-discard-rectangle-ext
                   %vk:cmd-set-discard-rectangle-ext
                   "Represents [vkCmdSetDiscardRectangleEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetDiscardRectangleEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-DISCARD-RECTANGLE: <a description>
 - DISCARD-RECTANGLES: <a description>

See COMMAND-BUFFER
See RECT-2D
"
                   ((command-buffer cffi:foreign-pointer) (first-discard-rectangle unsigned-byte) (discard-rectangles list))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-discard-rectangle :uint32 first-discard-rectangle :in :raw)
  (discard-rectangle-count :uint32 (length discard-rectangles) :in :raw)
  (discard-rectangles '(:struct %vk:rect-2d) discard-rectangles :in :list))

(defvk-simple-fun (cmd-set-sample-locations-ext
                   %vk:cmd-set-sample-locations-ext
                   "Represents [vkCmdSetSampleLocationsEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetSampleLocationsEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SAMPLE-LOCATIONS-INFO: <a description>

See COMMAND-BUFFER
See SAMPLE-LOCATIONS-INFO-EXT
"
                   ((command-buffer cffi:foreign-pointer) (sample-locations-info (or vk:sample-locations-info-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (sample-locations-info '(:struct %vk:sample-locations-info-ext) sample-locations-info :in))

(defvk-get-struct-fun (get-physical-device-multisample-properties-ext
                       %vk:get-physical-device-multisample-properties-ext
                       "Represents [vkGetPhysicalDeviceMultisamplePropertiesEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceMultisamplePropertiesEXT.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - SAMPLES: <a description>

Returns:
  (CL:VALUES
    MULTISAMPLE-PROPERTIES-EXT)

See MULTISAMPLE-PROPERTIES-EXT
See PHYSICAL-DEVICE
See SAMPLE-COUNT-FLAG-BITS
"
                       ((physical-device cffi:foreign-pointer) (samples keyword))
                       ()
                       t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (samples '%vk:sample-count-flag-bits samples :in :raw)
  (multisample-properties '(:struct %vk:multisample-properties-ext) multisample-properties :out))

(defvk-get-struct-fun (get-physical-device-surface-capabilities-2-khr
                       %vk:get-physical-device-surface-capabilities-2-khr
                       "Represents [vkGetPhysicalDeviceSurfaceCapabilities2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSurfaceCapabilities2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - SURFACE-INFO: <a description>

Returns:
  (CL:VALUES
    SURFACE-CAPABILITIES-2-KHR
    RESULT)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-SURFACE-INFO-2-KHR
See RESULT
See SURFACE-CAPABILITIES-2-KHR
"
                       ((physical-device cffi:foreign-pointer) (surface-info (or vk:physical-device-surface-info-2-khr cffi:foreign-pointer)))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (surface-info '(:struct %vk:physical-device-surface-info-2-khr) surface-info :in)
  (surface-capabilities '(:struct %vk:surface-capabilities-2-khr) surface-capabilities :out))

(defvk-enumerate-fun (get-physical-device-surface-formats-2-khr
                      %vk:get-physical-device-surface-formats-2-khr
                      "Represents [vkGetPhysicalDeviceSurfaceFormats2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSurfaceFormats2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - SURFACE-INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    SURFACE-FORMAT-2-KHR
    RESULT)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-SURFACE-INFO-2-KHR
See RESULT
See SURFACE-FORMAT-2-KHR
"
                      ((physical-device cffi:foreign-pointer) (surface-info (or vk:physical-device-surface-info-2-khr cffi:foreign-pointer)))
                      ()
                      surface-format-count
                      surface-formats
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (surface-info '(:struct %vk:physical-device-surface-info-2-khr) surface-info :in)
  (surface-format-count :uint32 surface-format-count :out)
  (surface-formats '(:struct %vk:surface-format-2-khr) surface-formats :out :list))

(defvk-enumerate-fun (get-physical-device-display-properties-2-khr
                      %vk:get-physical-device-display-properties-2-khr
                      "Represents [vkGetPhysicalDeviceDisplayProperties2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceDisplayProperties2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    DISPLAY-PROPERTIES-2-KHR
    RESULT)

See DISPLAY-PROPERTIES-2-KHR
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer))
                      ()
                      property-count
                      properties
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:display-properties-2-khr) properties :out :list))

(defvk-enumerate-fun (get-physical-device-display-plane-properties-2-khr
                      %vk:get-physical-device-display-plane-properties-2-khr
                      "Represents [vkGetPhysicalDeviceDisplayPlaneProperties2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceDisplayPlaneProperties2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    DISPLAY-PLANE-PROPERTIES-2-KHR
    RESULT)

See DISPLAY-PLANE-PROPERTIES-2-KHR
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer))
                      ()
                      property-count
                      properties
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:display-plane-properties-2-khr) properties :out :list))

(defvk-enumerate-fun (get-display-mode-properties-2-khr
                      %vk:get-display-mode-properties-2-khr
                      "Represents [vkGetDisplayModeProperties2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDisplayModeProperties2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - DISPLAY: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    DISPLAY-MODE-PROPERTIES-2-KHR
    RESULT)

See DISPLAY-KHR
See DISPLAY-MODE-PROPERTIES-2-KHR
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer) (display cffi:foreign-pointer))
                      ()
                      property-count
                      properties
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (display '%vk:display-khr display :in :handle)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:display-mode-properties-2-khr) properties :out :list))

(defvk-get-struct-fun (get-display-plane-capabilities-2-khr
                       %vk:get-display-plane-capabilities-2-khr
                       "Represents [vkGetDisplayPlaneCapabilities2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDisplayPlaneCapabilities2KHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - DISPLAY-PLANE-INFO: <a description>

Returns:
  (CL:VALUES
    DISPLAY-PLANE-CAPABILITIES-2-KHR
    RESULT)

See DISPLAY-PLANE-CAPABILITIES-2-KHR
See DISPLAY-PLANE-INFO-2-KHR
See PHYSICAL-DEVICE
See RESULT
"
                       ((physical-device cffi:foreign-pointer) (display-plane-info (or vk:display-plane-info-2-khr cffi:foreign-pointer)))
                       ())
  (physical-device '%vk:physical-device physical-device :in :handle)
  (display-plane-info '(:struct %vk:display-plane-info-2-khr) display-plane-info :in)
  (capabilities '(:struct %vk:display-plane-capabilities-2-khr) capabilities :out))

(defvk-get-struct-fun (get-buffer-memory-requirements-2
                       %vk:get-buffer-memory-requirements-2
                       "Represents [vkGetBufferMemoryRequirements2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetBufferMemoryRequirements2.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    MEMORY-REQUIREMENTS-2)

See BUFFER-MEMORY-REQUIREMENTS-INFO-2
See DEVICE
See MEMORY-REQUIREMENTS-2
"
                       ((device cffi:foreign-pointer) (info (or vk:buffer-memory-requirements-info-2 cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:buffer-memory-requirements-info-2) info :in)
  (memory-requirements '(:struct %vk:memory-requirements-2) memory-requirements :out))

(defvk-get-struct-fun (get-buffer-memory-requirements-2-khr
                       %vk:get-buffer-memory-requirements-2-khr
                       "Represents [vkGetBufferMemoryRequirements2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetBufferMemoryRequirements2KHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    MEMORY-REQUIREMENTS-2)

See BUFFER-MEMORY-REQUIREMENTS-INFO-2
See DEVICE
See MEMORY-REQUIREMENTS-2
"
                       ((device cffi:foreign-pointer) (info (or vk:buffer-memory-requirements-info-2 cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:buffer-memory-requirements-info-2) info :in)
  (memory-requirements '(:struct %vk:memory-requirements-2) memory-requirements :out))

(defvk-get-struct-fun (get-image-memory-requirements-2
                       %vk:get-image-memory-requirements-2
                       "Represents [vkGetImageMemoryRequirements2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetImageMemoryRequirements2.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    MEMORY-REQUIREMENTS-2)

See DEVICE
See IMAGE-MEMORY-REQUIREMENTS-INFO-2
See MEMORY-REQUIREMENTS-2
"
                       ((device cffi:foreign-pointer) (info (or vk:image-memory-requirements-info-2 cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:image-memory-requirements-info-2) info :in)
  (memory-requirements '(:struct %vk:memory-requirements-2) memory-requirements :out))

(defvk-get-struct-fun (get-image-memory-requirements-2-khr
                       %vk:get-image-memory-requirements-2-khr
                       "Represents [vkGetImageMemoryRequirements2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetImageMemoryRequirements2KHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    MEMORY-REQUIREMENTS-2)

See DEVICE
See IMAGE-MEMORY-REQUIREMENTS-INFO-2
See MEMORY-REQUIREMENTS-2
"
                       ((device cffi:foreign-pointer) (info (or vk:image-memory-requirements-info-2 cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:image-memory-requirements-info-2) info :in)
  (memory-requirements '(:struct %vk:memory-requirements-2) memory-requirements :out))

(defvk-get-structs-fun (get-image-sparse-memory-requirements-2
                        %vk:get-image-sparse-memory-requirements-2
                        "Represents [vkGetImageSparseMemoryRequirements2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetImageSparseMemoryRequirements2.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    SPARSE-IMAGE-MEMORY-REQUIREMENTS-2)

See DEVICE
See IMAGE-SPARSE-MEMORY-REQUIREMENTS-INFO-2
See SPARSE-IMAGE-MEMORY-REQUIREMENTS-2
"
                        ((device cffi:foreign-pointer) (info (or vk:image-sparse-memory-requirements-info-2 cffi:foreign-pointer)))
                        ()
                        sparse-memory-requirement-count
                        sparse-memory-requirements
                      t)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:image-sparse-memory-requirements-info-2) info :in)
  (sparse-memory-requirement-count :uint32 sparse-memory-requirement-count :out)
  (sparse-memory-requirements '(:struct %vk:sparse-image-memory-requirements-2) sparse-memory-requirements :out :list))

(defvk-get-structs-fun (get-image-sparse-memory-requirements-2-khr
                        %vk:get-image-sparse-memory-requirements-2-khr
                        "Represents [vkGetImageSparseMemoryRequirements2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetImageSparseMemoryRequirements2KHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    SPARSE-IMAGE-MEMORY-REQUIREMENTS-2)

See DEVICE
See IMAGE-SPARSE-MEMORY-REQUIREMENTS-INFO-2
See SPARSE-IMAGE-MEMORY-REQUIREMENTS-2
"
                        ((device cffi:foreign-pointer) (info (or vk:image-sparse-memory-requirements-info-2 cffi:foreign-pointer)))
                        ()
                        sparse-memory-requirement-count
                        sparse-memory-requirements
                      t)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:image-sparse-memory-requirements-info-2) info :in)
  (sparse-memory-requirement-count :uint32 sparse-memory-requirement-count :out)
  (sparse-memory-requirements '(:struct %vk:sparse-image-memory-requirements-2) sparse-memory-requirements :out :list))

(defvk-create-handle-fun (create-sampler-ycbcr-conversion
                          %vk:create-sampler-ycbcr-conversion
                          "Represents [vkCreateSamplerYcbcrConversion](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateSamplerYcbcrConversion.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SAMPLER-YCBCR-CONVERSION
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RESULT
See SAMPLER-YCBCR-CONVERSION
See SAMPLER-YCBCR-CONVERSION-CREATE-INFO
"
                          ((device cffi:foreign-pointer) (create-info (or vk:sampler-ycbcr-conversion-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:sampler-ycbcr-conversion-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (ycbcr-conversion '%vk:sampler-ycbcr-conversion ycbcr-conversion :out :handle))

(defvk-create-handle-fun (create-sampler-ycbcr-conversion-khr
                          %vk:create-sampler-ycbcr-conversion-khr
                          "Represents [vkCreateSamplerYcbcrConversionKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateSamplerYcbcrConversionKHR.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SAMPLER-YCBCR-CONVERSION
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RESULT
See SAMPLER-YCBCR-CONVERSION
See SAMPLER-YCBCR-CONVERSION-CREATE-INFO
"
                          ((device cffi:foreign-pointer) (create-info (or vk:sampler-ycbcr-conversion-create-info cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:sampler-ycbcr-conversion-create-info) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (ycbcr-conversion '%vk:sampler-ycbcr-conversion ycbcr-conversion :out :handle))

(defvk-simple-fun (destroy-sampler-ycbcr-conversion
                   %vk:destroy-sampler-ycbcr-conversion
                   "Represents [vkDestroySamplerYcbcrConversion](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroySamplerYcbcrConversion.html).

Args:
 - DEVICE: <a description>
 - YCBCR-CONVERSION: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See SAMPLER-YCBCR-CONVERSION
"
                   ((device cffi:foreign-pointer))
                   (((ycbcr-conversion (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (ycbcr-conversion '%vk:sampler-ycbcr-conversion ycbcr-conversion :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (destroy-sampler-ycbcr-conversion-khr
                   %vk:destroy-sampler-ycbcr-conversion-khr
                   "Represents [vkDestroySamplerYcbcrConversionKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroySamplerYcbcrConversionKHR.html).

Args:
 - DEVICE: <a description>
 - YCBCR-CONVERSION: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See SAMPLER-YCBCR-CONVERSION
"
                   ((device cffi:foreign-pointer))
                   (((ycbcr-conversion (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (ycbcr-conversion '%vk:sampler-ycbcr-conversion ycbcr-conversion :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (get-device-queue-2
                          %vk:get-device-queue-2
                          "Represents [vkGetDeviceQueue2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceQueue2.html).

Args:
 - DEVICE: <a description>
 - QUEUE-INFO: <a description>

Returns:
  (CL:VALUES
    QUEUE)

See DEVICE
See DEVICE-QUEUE-INFO-2
See QUEUE
"
                          ((device cffi:foreign-pointer) (queue-info (or vk:device-queue-info-2 cffi:foreign-pointer)))
                          ()
                          t)
  (device '%vk:device device :in :handle)
  (queue-info '(:struct %vk:device-queue-info-2) queue-info :in)
  (queue '%vk:queue queue :out :handle))

(defvk-create-handle-fun (create-validation-cache-ext
                          %vk:create-validation-cache-ext
                          "Represents [vkCreateValidationCacheEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateValidationCacheEXT.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    VALIDATION-CACHE-EXT
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RESULT
See VALIDATION-CACHE-CREATE-INFO-EXT
See VALIDATION-CACHE-EXT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:validation-cache-create-info-ext cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:validation-cache-create-info-ext) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (validation-cache '%vk:validation-cache-ext validation-cache :out :handle))

(defvk-simple-fun (destroy-validation-cache-ext
                   %vk:destroy-validation-cache-ext
                   "Represents [vkDestroyValidationCacheEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyValidationCacheEXT.html).

Args:
 - DEVICE: <a description>
 - VALIDATION-CACHE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See VALIDATION-CACHE-EXT
"
                   ((device cffi:foreign-pointer))
                   (((validation-cache (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (validation-cache '%vk:validation-cache-ext validation-cache :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-create-handle-fun (get-validation-cache-data-ext
                          %vk:get-validation-cache-data-ext
                          "Represents [vkGetValidationCacheDataEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetValidationCacheDataEXT.html).

Args:
 - DEVICE: <a description>
 - VALIDATION-CACHE: <a description>
 - DATA: (optional) <a description>

Returns:
  (CL:VALUES
    SIZE_T
    RESULT)

See DEVICE
See RESULT
See VALIDATION-CACHE-EXT
"
                          ((device cffi:foreign-pointer) (validation-cache cffi:foreign-pointer))
                          (((data nil) cffi:foreign-pointer))
                          nil
                          t)
  (device '%vk:device device :in :handle)
  (validation-cache '%vk:validation-cache-ext validation-cache :in :handle)
  (data-size '%vk:size-t data-size :out)
  (data '(:pointer :void) data :in :handle :optional))

(defvk-simple-fun (merge-validation-caches-ext
                   %vk:merge-validation-caches-ext
                   "Represents [vkMergeValidationCachesEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkMergeValidationCachesEXT.html).

Args:
 - DEVICE: <a description>
 - DST-CACHE: <a description>
 - SRC-CACHES: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See RESULT
See VALIDATION-CACHE-EXT
"
                   ((device cffi:foreign-pointer) (dst-cache cffi:foreign-pointer) (src-caches list))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (dst-cache '%vk:validation-cache-ext dst-cache :in :handle)
  (src-cache-count :uint32 (length src-caches) :in :raw)
  (src-caches '%vk:validation-cache-ext src-caches :in :handle :list))

(defvk-get-struct-fun (get-descriptor-set-layout-support
                       %vk:get-descriptor-set-layout-support
                       "Represents [vkGetDescriptorSetLayoutSupport](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDescriptorSetLayoutSupport.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>

Returns:
  (CL:VALUES
    DESCRIPTOR-SET-LAYOUT-SUPPORT)

See DESCRIPTOR-SET-LAYOUT-CREATE-INFO
See DESCRIPTOR-SET-LAYOUT-SUPPORT
See DEVICE
"
                       ((device cffi:foreign-pointer) (create-info (or vk:descriptor-set-layout-create-info cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:descriptor-set-layout-create-info) create-info :in)
  (support '(:struct %vk:descriptor-set-layout-support) support :out))

(defvk-get-struct-fun (get-descriptor-set-layout-support-khr
                       %vk:get-descriptor-set-layout-support-khr
                       "Represents [vkGetDescriptorSetLayoutSupportKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDescriptorSetLayoutSupportKHR.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>

Returns:
  (CL:VALUES
    DESCRIPTOR-SET-LAYOUT-SUPPORT)

See DESCRIPTOR-SET-LAYOUT-CREATE-INFO
See DESCRIPTOR-SET-LAYOUT-SUPPORT
See DEVICE
"
                       ((device cffi:foreign-pointer) (create-info (or vk:descriptor-set-layout-create-info cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:descriptor-set-layout-create-info) create-info :in)
  (support '(:struct %vk:descriptor-set-layout-support) support :out))

(defvk-create-handle-fun (get-shader-info-amd
                          %vk:get-shader-info-amd
                          "Represents [vkGetShaderInfoAMD](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetShaderInfoAMD.html).

Args:
 - DEVICE: <a description>
 - PIPELINE: <a description>
 - SHADER-STAGE: <a description>
 - INFO-TYPE: <a description>
 - INFO: (optional) <a description>

Returns:
  (CL:VALUES
    SIZE_T
    RESULT)

See DEVICE
See PIPELINE
See RESULT
See SHADER-INFO-TYPE-AMD
See SHADER-STAGE-FLAG-BITS
"
                          ((device cffi:foreign-pointer) (pipeline cffi:foreign-pointer) (shader-stage keyword) (info-type keyword))
                          (((info nil) cffi:foreign-pointer))
                          nil
                          t)
  (device '%vk:device device :in :handle)
  (pipeline '%vk:pipeline pipeline :in :handle)
  (shader-stage '%vk:shader-stage-flag-bits shader-stage :in :raw)
  (info-type '%vk:shader-info-type-amd info-type :in :raw)
  (info-size '%vk:size-t info-size :out)
  (info '(:pointer :void) info :in :handle :optional))

(defvk-simple-fun (set-local-dimming-amd
                   %vk:set-local-dimming-amd
                   "Represents [vkSetLocalDimmingAMD](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkSetLocalDimmingAMD.html).

Args:
 - DEVICE: <a description>
 - SWAP-CHAIN: <a description>
 - LOCAL-DIMMING-ENABLE: <a description>

See BOOL32
See DEVICE
See SWAPCHAIN-KHR
"
                   ((device cffi:foreign-pointer) (swap-chain cffi:foreign-pointer) (local-dimming-enable boolean))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (swap-chain '%vk:swapchain-khr swap-chain :in :handle)
  (local-dimming-enable '%vk:bool32 local-dimming-enable :in :raw))

(defvk-enumerate-fun (get-physical-device-calibrateable-time-domains-ext
                      %vk:get-physical-device-calibrateable-time-domains-ext
                      "Represents [vkGetPhysicalDeviceCalibrateableTimeDomainsEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceCalibrateableTimeDomainsEXT.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    TIME-DOMAIN-EXT
    RESULT)

See PHYSICAL-DEVICE
See RESULT
See TIME-DOMAIN-EXT
"
                      ((physical-device cffi:foreign-pointer))
                      ()
                      time-domain-count
                      time-domains
                      nil
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (time-domain-count :uint32 time-domain-count :out)
  (time-domains '%vk:time-domain-ext time-domains :out :raw :list))

(defvk-get-array-and-singular-fun (get-calibrated-timestamps-ext
                                   %vk:get-calibrated-timestamps-ext
                                   "Represents [vkGetCalibratedTimestampsEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetCalibratedTimestampsEXT.html).

Args:
 - DEVICE: <a description>
 - TIMESTAMP-INFOS: <a description>

Returns:
  (CL:VALUES
    UINT-6-4_T
    UINT-6-4_T
    RESULT)

See CALIBRATED-TIMESTAMP-INFO-EXT
See DEVICE
See RESULT
"
                                   ((device cffi:foreign-pointer) (timestamp-infos list))
                                   ()
                                   (length timestamp-infos)
                                   timestamps
                                   t)
  (device '%vk:device device :in :handle)
  (timestamp-count :uint32 (length timestamp-infos) :in :raw)
  (timestamp-infos '(:struct %vk:calibrated-timestamp-info-ext) timestamp-infos :in :list)
  (timestamps :uint64 timestamps :out :list)
  (max-deviation :uint64 max-deviation :out))

(defvk-simple-fun (set-debug-utils-object-name-ext
                   %vk:set-debug-utils-object-name-ext
                   "Represents [vkSetDebugUtilsObjectNameEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkSetDebugUtilsObjectNameEXT.html).

Args:
 - DEVICE: <a description>
 - NAME-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEBUG-UTILS-OBJECT-NAME-INFO-EXT
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (name-info (or vk:debug-utils-object-name-info-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (name-info '(:struct %vk:debug-utils-object-name-info-ext) name-info :in))

(defvk-simple-fun (set-debug-utils-object-tag-ext
                   %vk:set-debug-utils-object-tag-ext
                   "Represents [vkSetDebugUtilsObjectTagEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkSetDebugUtilsObjectTagEXT.html).

Args:
 - DEVICE: <a description>
 - TAG-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEBUG-UTILS-OBJECT-TAG-INFO-EXT
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (tag-info (or vk:debug-utils-object-tag-info-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (tag-info '(:struct %vk:debug-utils-object-tag-info-ext) tag-info :in))

(defvk-simple-fun (queue-begin-debug-utils-label-ext
                   %vk:queue-begin-debug-utils-label-ext
                   "Represents [vkQueueBeginDebugUtilsLabelEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkQueueBeginDebugUtilsLabelEXT.html).

Args:
 - QUEUE: <a description>
 - LABEL-INFO: <a description>

See DEBUG-UTILS-LABEL-EXT
See QUEUE
"
                   ((queue cffi:foreign-pointer) (label-info (or vk:debug-utils-label-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (queue '%vk:queue queue :in :handle)
  (label-info '(:struct %vk:debug-utils-label-ext) label-info :in))

(defvk-simple-fun (queue-end-debug-utils-label-ext
                   %vk:queue-end-debug-utils-label-ext
                   "Represents [vkQueueEndDebugUtilsLabelEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkQueueEndDebugUtilsLabelEXT.html).

Args:
 - QUEUE: <a description>

See QUEUE
"
                   ((queue cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (queue '%vk:queue queue :in :handle))

(defvk-simple-fun (queue-insert-debug-utils-label-ext
                   %vk:queue-insert-debug-utils-label-ext
                   "Represents [vkQueueInsertDebugUtilsLabelEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkQueueInsertDebugUtilsLabelEXT.html).

Args:
 - QUEUE: <a description>
 - LABEL-INFO: <a description>

See DEBUG-UTILS-LABEL-EXT
See QUEUE
"
                   ((queue cffi:foreign-pointer) (label-info (or vk:debug-utils-label-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (queue '%vk:queue queue :in :handle)
  (label-info '(:struct %vk:debug-utils-label-ext) label-info :in))

(defvk-simple-fun (cmd-begin-debug-utils-label-ext
                   %vk:cmd-begin-debug-utils-label-ext
                   "Represents [vkCmdBeginDebugUtilsLabelEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBeginDebugUtilsLabelEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - LABEL-INFO: <a description>

See COMMAND-BUFFER
See DEBUG-UTILS-LABEL-EXT
"
                   ((command-buffer cffi:foreign-pointer) (label-info (or vk:debug-utils-label-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (label-info '(:struct %vk:debug-utils-label-ext) label-info :in))

(defvk-simple-fun (cmd-end-debug-utils-label-ext
                   %vk:cmd-end-debug-utils-label-ext
                   "Represents [vkCmdEndDebugUtilsLabelEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdEndDebugUtilsLabelEXT.html).

Args:
 - COMMAND-BUFFER: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle))

(defvk-simple-fun (cmd-insert-debug-utils-label-ext
                   %vk:cmd-insert-debug-utils-label-ext
                   "Represents [vkCmdInsertDebugUtilsLabelEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdInsertDebugUtilsLabelEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - LABEL-INFO: <a description>

See COMMAND-BUFFER
See DEBUG-UTILS-LABEL-EXT
"
                   ((command-buffer cffi:foreign-pointer) (label-info (or vk:debug-utils-label-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (label-info '(:struct %vk:debug-utils-label-ext) label-info :in))

(defvk-create-handle-fun (create-debug-utils-messenger-ext
                          %vk:create-debug-utils-messenger-ext
                          "Represents [vkCreateDebugUtilsMessengerEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDebugUtilsMessengerEXT.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    DEBUG-UTILS-MESSENGER-EXT
    RESULT)

See ALLOCATION-CALLBACKS
See DEBUG-UTILS-MESSENGER-CREATE-INFO-EXT
See DEBUG-UTILS-MESSENGER-EXT
See INSTANCE
See RESULT
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:debug-utils-messenger-create-info-ext cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:debug-utils-messenger-create-info-ext) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (messenger '%vk:debug-utils-messenger-ext messenger :out :handle))

(defvk-simple-fun (destroy-debug-utils-messenger-ext
                   %vk:destroy-debug-utils-messenger-ext
                   "Represents [vkDestroyDebugUtilsMessengerEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyDebugUtilsMessengerEXT.html).

Args:
 - INSTANCE: <a description>
 - MESSENGER: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEBUG-UTILS-MESSENGER-EXT
See INSTANCE
"
                   ((instance cffi:foreign-pointer))
                   (((messenger (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil
                  t)
  (instance '%vk:instance instance :in :handle)
  (messenger '%vk:debug-utils-messenger-ext messenger :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (submit-debug-utils-message-ext
                   %vk:submit-debug-utils-message-ext
                   "Represents [vkSubmitDebugUtilsMessageEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkSubmitDebugUtilsMessageEXT.html).

Args:
 - INSTANCE: <a description>
 - MESSAGE-SEVERITY: <a description>
 - MESSAGE-TYPES: <a description>
 - CALLBACK-DATA: <a description>

See DEBUG-UTILS-MESSAGE-SEVERITY-FLAG-BITS-EXT
See DEBUG-UTILS-MESSAGE-TYPE-FLAGS-EXT
See DEBUG-UTILS-MESSENGER-CALLBACK-DATA-EXT
See INSTANCE
"
                   ((instance cffi:foreign-pointer) (message-severity keyword) (message-types (or unsigned-byte list)) (callback-data (or vk:debug-utils-messenger-callback-data-ext cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (instance '%vk:instance instance :in :handle)
  (message-severity '%vk:debug-utils-message-severity-flag-bits-ext message-severity :in :raw)
  (message-types '%vk:debug-utils-message-type-flags-ext message-types :in :raw)
  (callback-data '(:struct %vk:debug-utils-messenger-callback-data-ext) callback-data :in))

(defvk-get-struct-fun (get-memory-host-pointer-properties-ext
                       %vk:get-memory-host-pointer-properties-ext
                       "Represents [vkGetMemoryHostPointerPropertiesEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetMemoryHostPointerPropertiesEXT.html).

Args:
 - DEVICE: <a description>
 - HANDLE-TYPE: <a description>
 - HOST-POINTER: <a description>

Returns:
  (CL:VALUES
    MEMORY-HOST-POINTER-PROPERTIES-EXT
    RESULT)

See DEVICE
See EXTERNAL-MEMORY-HANDLE-TYPE-FLAG-BITS
See MEMORY-HOST-POINTER-PROPERTIES-EXT
See RESULT
"
                       ((device cffi:foreign-pointer) (handle-type keyword) (host-pointer cffi:foreign-pointer))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (handle-type '%vk:external-memory-handle-type-flag-bits handle-type :in :raw)
  (host-pointer '(:pointer :void) host-pointer :in :handle)
  (memory-host-pointer-properties '(:struct %vk:memory-host-pointer-properties-ext) memory-host-pointer-properties :out))

(defvk-simple-fun (cmd-write-buffer-marker-amd
                   %vk:cmd-write-buffer-marker-amd
                   "Represents [vkCmdWriteBufferMarkerAMD](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdWriteBufferMarkerAMD.html).

Args:
 - COMMAND-BUFFER: <a description>
 - PIPELINE-STAGE: <a description>
 - DST-BUFFER: <a description>
 - DST-OFFSET: <a description>
 - MARKER: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
See PIPELINE-STAGE-FLAG-BITS
"
                   ((command-buffer cffi:foreign-pointer) (pipeline-stage keyword) (dst-buffer cffi:foreign-pointer) (dst-offset unsigned-byte) (marker unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (pipeline-stage '%vk:pipeline-stage-flag-bits pipeline-stage :in :raw)
  (dst-buffer '%vk:buffer dst-buffer :in :handle)
  (dst-offset '%vk:device-size dst-offset :in :raw)
  (marker :uint32 marker :in :raw))

(defvk-create-handle-fun (create-render-pass-2
                          %vk:create-render-pass-2
                          "Represents [vkCreateRenderPass2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateRenderPass2.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    RENDER-PASS
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RENDER-PASS
See RENDER-PASS-CREATE-INFO-2
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:render-pass-create-info-2 cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:render-pass-create-info-2) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (render-pass '%vk:render-pass render-pass :out :handle))

(defvk-create-handle-fun (create-render-pass-2-khr
                          %vk:create-render-pass-2-khr
                          "Represents [vkCreateRenderPass2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateRenderPass2KHR.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    RENDER-PASS
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See RENDER-PASS
See RENDER-PASS-CREATE-INFO-2
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:render-pass-create-info-2 cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:render-pass-create-info-2) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (render-pass '%vk:render-pass render-pass :out :handle))

(defvk-simple-fun (cmd-begin-render-pass-2
                   %vk:cmd-begin-render-pass-2
                   "Represents [vkCmdBeginRenderPass2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBeginRenderPass2.html).

Args:
 - COMMAND-BUFFER: <a description>
 - RENDER-PASS-BEGIN: <a description>
 - SUBPASS-BEGIN-INFO: <a description>

See COMMAND-BUFFER
See RENDER-PASS-BEGIN-INFO
See SUBPASS-BEGIN-INFO
"
                   ((command-buffer cffi:foreign-pointer) (render-pass-begin (or vk:render-pass-begin-info cffi:foreign-pointer)) (subpass-begin-info (or vk:subpass-begin-info cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (render-pass-begin '(:struct %vk:render-pass-begin-info) render-pass-begin :in)
  (subpass-begin-info '(:struct %vk:subpass-begin-info) subpass-begin-info :in))

(defvk-simple-fun (cmd-begin-render-pass-2-khr
                   %vk:cmd-begin-render-pass-2-khr
                   "Represents [vkCmdBeginRenderPass2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBeginRenderPass2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - RENDER-PASS-BEGIN: <a description>
 - SUBPASS-BEGIN-INFO: <a description>

See COMMAND-BUFFER
See RENDER-PASS-BEGIN-INFO
See SUBPASS-BEGIN-INFO
"
                   ((command-buffer cffi:foreign-pointer) (render-pass-begin (or vk:render-pass-begin-info cffi:foreign-pointer)) (subpass-begin-info (or vk:subpass-begin-info cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (render-pass-begin '(:struct %vk:render-pass-begin-info) render-pass-begin :in)
  (subpass-begin-info '(:struct %vk:subpass-begin-info) subpass-begin-info :in))

(defvk-simple-fun (cmd-next-subpass-2
                   %vk:cmd-next-subpass-2
                   "Represents [vkCmdNextSubpass2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdNextSubpass2.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SUBPASS-BEGIN-INFO: <a description>
 - SUBPASS-END-INFO: <a description>

See COMMAND-BUFFER
See SUBPASS-BEGIN-INFO
See SUBPASS-END-INFO
"
                   ((command-buffer cffi:foreign-pointer) (subpass-begin-info (or vk:subpass-begin-info cffi:foreign-pointer)) (subpass-end-info (or vk:subpass-end-info cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (subpass-begin-info '(:struct %vk:subpass-begin-info) subpass-begin-info :in)
  (subpass-end-info '(:struct %vk:subpass-end-info) subpass-end-info :in))

(defvk-simple-fun (cmd-next-subpass-2-khr
                   %vk:cmd-next-subpass-2-khr
                   "Represents [vkCmdNextSubpass2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdNextSubpass2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SUBPASS-BEGIN-INFO: <a description>
 - SUBPASS-END-INFO: <a description>

See COMMAND-BUFFER
See SUBPASS-BEGIN-INFO
See SUBPASS-END-INFO
"
                   ((command-buffer cffi:foreign-pointer) (subpass-begin-info (or vk:subpass-begin-info cffi:foreign-pointer)) (subpass-end-info (or vk:subpass-end-info cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (subpass-begin-info '(:struct %vk:subpass-begin-info) subpass-begin-info :in)
  (subpass-end-info '(:struct %vk:subpass-end-info) subpass-end-info :in))

(defvk-simple-fun (cmd-end-render-pass-2
                   %vk:cmd-end-render-pass-2
                   "Represents [vkCmdEndRenderPass2](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdEndRenderPass2.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SUBPASS-END-INFO: <a description>

See COMMAND-BUFFER
See SUBPASS-END-INFO
"
                   ((command-buffer cffi:foreign-pointer) (subpass-end-info (or vk:subpass-end-info cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (subpass-end-info '(:struct %vk:subpass-end-info) subpass-end-info :in))

(defvk-simple-fun (cmd-end-render-pass-2-khr
                   %vk:cmd-end-render-pass-2-khr
                   "Represents [vkCmdEndRenderPass2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdEndRenderPass2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SUBPASS-END-INFO: <a description>

See COMMAND-BUFFER
See SUBPASS-END-INFO
"
                   ((command-buffer cffi:foreign-pointer) (subpass-end-info (or vk:subpass-end-info cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (subpass-end-info '(:struct %vk:subpass-end-info) subpass-end-info :in))

(defvk-create-handle-fun (get-semaphore-counter-value
                          %vk:get-semaphore-counter-value
                          "Represents [vkGetSemaphoreCounterValue](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetSemaphoreCounterValue.html).

Args:
 - DEVICE: <a description>
 - SEMAPHORE: <a description>

Returns:
  (CL:VALUES
    UINT-6-4_T
    RESULT)

See DEVICE
See RESULT
See SEMAPHORE
"
                          ((device cffi:foreign-pointer) (semaphore cffi:foreign-pointer))
                          ()
                          nil)
  (device '%vk:device device :in :handle)
  (semaphore '%vk:semaphore semaphore :in :handle)
  (value :uint64 value :out))

(defvk-create-handle-fun (get-semaphore-counter-value-khr
                          %vk:get-semaphore-counter-value-khr
                          "Represents [vkGetSemaphoreCounterValueKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetSemaphoreCounterValueKHR.html).

Args:
 - DEVICE: <a description>
 - SEMAPHORE: <a description>

Returns:
  (CL:VALUES
    UINT-6-4_T
    RESULT)

See DEVICE
See RESULT
See SEMAPHORE
"
                          ((device cffi:foreign-pointer) (semaphore cffi:foreign-pointer))
                          ()
                          nil)
  (device '%vk:device device :in :handle)
  (semaphore '%vk:semaphore semaphore :in :handle)
  (value :uint64 value :out))

(defvk-simple-fun (wait-semaphores
                   %vk:wait-semaphores
                   "Represents [vkWaitSemaphores](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkWaitSemaphores.html).

Args:
 - DEVICE: <a description>
 - WAIT-INFO: <a description>
 - TIMEOUT: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See RESULT
See SEMAPHORE-WAIT-INFO
"
                   ((device cffi:foreign-pointer) (wait-info (or vk:semaphore-wait-info cffi:foreign-pointer)) (timeout unsigned-byte))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (wait-info '(:struct %vk:semaphore-wait-info) wait-info :in)
  (timeout :uint64 timeout :in :raw))

(defvk-simple-fun (wait-semaphores-khr
                   %vk:wait-semaphores-khr
                   "Represents [vkWaitSemaphoresKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkWaitSemaphoresKHR.html).

Args:
 - DEVICE: <a description>
 - WAIT-INFO: <a description>
 - TIMEOUT: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See RESULT
See SEMAPHORE-WAIT-INFO
"
                   ((device cffi:foreign-pointer) (wait-info (or vk:semaphore-wait-info cffi:foreign-pointer)) (timeout unsigned-byte))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (wait-info '(:struct %vk:semaphore-wait-info) wait-info :in)
  (timeout :uint64 timeout :in :raw))

(defvk-simple-fun (signal-semaphore
                   %vk:signal-semaphore
                   "Represents [vkSignalSemaphore](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkSignalSemaphore.html).

Args:
 - DEVICE: <a description>
 - SIGNAL-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See RESULT
See SEMAPHORE-SIGNAL-INFO
"
                   ((device cffi:foreign-pointer) (signal-info (or vk:semaphore-signal-info cffi:foreign-pointer)))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (signal-info '(:struct %vk:semaphore-signal-info) signal-info :in))

(defvk-simple-fun (signal-semaphore-khr
                   %vk:signal-semaphore-khr
                   "Represents [vkSignalSemaphoreKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkSignalSemaphoreKHR.html).

Args:
 - DEVICE: <a description>
 - SIGNAL-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See RESULT
See SEMAPHORE-SIGNAL-INFO
"
                   ((device cffi:foreign-pointer) (signal-info (or vk:semaphore-signal-info cffi:foreign-pointer)))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (signal-info '(:struct %vk:semaphore-signal-info) signal-info :in))

(defvk-get-struct-fun (get-android-hardware-buffer-properties-android
                       %vk:get-android-hardware-buffer-properties-android
                       "Represents [vkGetAndroidHardwareBufferPropertiesANDROID](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetAndroidHardwareBufferPropertiesANDROID.html).

Args:
 - DEVICE: <a description>
 - BUFFER: <a description>

Returns:
  (CL:VALUES
    ANDROID-HARDWARE-BUFFER-PROPERTIES-ANDROID
    RESULT)

See A-HARDWARE-BUFFER
See ANDROID-HARDWARE-BUFFER-PROPERTIES-ANDROID
See DEVICE
See RESULT
"
                       ((device cffi:foreign-pointer) (buffer cffi:foreign-pointer))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (buffer '(:pointer :void) buffer :in)
  (properties '(:struct %vk:android-hardware-buffer-properties-android) properties :out))

(defvk-get-struct-fun (get-memory-android-hardware-buffer-android
                       %vk:get-memory-android-hardware-buffer-android
                       "Represents [vkGetMemoryAndroidHardwareBufferANDROID](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetMemoryAndroidHardwareBufferANDROID.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    A-HARDWARE-BUFFER
    RESULT)

See A-HARDWARE-BUFFER
See DEVICE
See MEMORY-GET-ANDROID-HARDWARE-BUFFER-INFO-ANDROID
See RESULT
"
                       ((device cffi:foreign-pointer) (info (or vk:memory-get-android-hardware-buffer-info-android cffi:foreign-pointer)))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:memory-get-android-hardware-buffer-info-android) info :in)
  (buffer '(:pointer :void) buffer :out))

(defvk-simple-fun (cmd-draw-indirect-count
                   %vk:cmd-draw-indirect-count
                   "Represents [vkCmdDrawIndirectCount](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndirectCount.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - COUNT-BUFFER: <a description>
 - COUNT-BUFFER-OFFSET: <a description>
 - MAX-DRAW-COUNT: <a description>
 - STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (count-buffer cffi:foreign-pointer) (count-buffer-offset unsigned-byte) (max-draw-count unsigned-byte) (stride unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (count-buffer '%vk:buffer count-buffer :in :handle)
  (count-buffer-offset '%vk:device-size count-buffer-offset :in :raw)
  (max-draw-count :uint32 max-draw-count :in :raw)
  (stride :uint32 stride :in :raw))

(defvk-simple-fun (cmd-draw-indirect-count-amd
                   %vk:cmd-draw-indirect-count-amd
                   "Represents [vkCmdDrawIndirectCountAMD](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndirectCountAMD.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - COUNT-BUFFER: <a description>
 - COUNT-BUFFER-OFFSET: <a description>
 - MAX-DRAW-COUNT: <a description>
 - STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (count-buffer cffi:foreign-pointer) (count-buffer-offset unsigned-byte) (max-draw-count unsigned-byte) (stride unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (count-buffer '%vk:buffer count-buffer :in :handle)
  (count-buffer-offset '%vk:device-size count-buffer-offset :in :raw)
  (max-draw-count :uint32 max-draw-count :in :raw)
  (stride :uint32 stride :in :raw))

(defvk-simple-fun (cmd-draw-indirect-count-khr
                   %vk:cmd-draw-indirect-count-khr
                   "Represents [vkCmdDrawIndirectCountKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndirectCountKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - COUNT-BUFFER: <a description>
 - COUNT-BUFFER-OFFSET: <a description>
 - MAX-DRAW-COUNT: <a description>
 - STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (count-buffer cffi:foreign-pointer) (count-buffer-offset unsigned-byte) (max-draw-count unsigned-byte) (stride unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (count-buffer '%vk:buffer count-buffer :in :handle)
  (count-buffer-offset '%vk:device-size count-buffer-offset :in :raw)
  (max-draw-count :uint32 max-draw-count :in :raw)
  (stride :uint32 stride :in :raw))

(defvk-simple-fun (cmd-draw-indexed-indirect-count
                   %vk:cmd-draw-indexed-indirect-count
                   "Represents [vkCmdDrawIndexedIndirectCount](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndexedIndirectCount.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - COUNT-BUFFER: <a description>
 - COUNT-BUFFER-OFFSET: <a description>
 - MAX-DRAW-COUNT: <a description>
 - STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (count-buffer cffi:foreign-pointer) (count-buffer-offset unsigned-byte) (max-draw-count unsigned-byte) (stride unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (count-buffer '%vk:buffer count-buffer :in :handle)
  (count-buffer-offset '%vk:device-size count-buffer-offset :in :raw)
  (max-draw-count :uint32 max-draw-count :in :raw)
  (stride :uint32 stride :in :raw))

(defvk-simple-fun (cmd-draw-indexed-indirect-count-amd
                   %vk:cmd-draw-indexed-indirect-count-amd
                   "Represents [vkCmdDrawIndexedIndirectCountAMD](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndexedIndirectCountAMD.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - COUNT-BUFFER: <a description>
 - COUNT-BUFFER-OFFSET: <a description>
 - MAX-DRAW-COUNT: <a description>
 - STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (count-buffer cffi:foreign-pointer) (count-buffer-offset unsigned-byte) (max-draw-count unsigned-byte) (stride unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (count-buffer '%vk:buffer count-buffer :in :handle)
  (count-buffer-offset '%vk:device-size count-buffer-offset :in :raw)
  (max-draw-count :uint32 max-draw-count :in :raw)
  (stride :uint32 stride :in :raw))

(defvk-simple-fun (cmd-draw-indexed-indirect-count-khr
                   %vk:cmd-draw-indexed-indirect-count-khr
                   "Represents [vkCmdDrawIndexedIndirectCountKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndexedIndirectCountKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - COUNT-BUFFER: <a description>
 - COUNT-BUFFER-OFFSET: <a description>
 - MAX-DRAW-COUNT: <a description>
 - STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (count-buffer cffi:foreign-pointer) (count-buffer-offset unsigned-byte) (max-draw-count unsigned-byte) (stride unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (count-buffer '%vk:buffer count-buffer :in :handle)
  (count-buffer-offset '%vk:device-size count-buffer-offset :in :raw)
  (max-draw-count :uint32 max-draw-count :in :raw)
  (stride :uint32 stride :in :raw))

(defvk-simple-fun (cmd-set-checkpoint-nv
                   %vk:cmd-set-checkpoint-nv
                   "Represents [vkCmdSetCheckpointNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetCheckpointNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - CHECKPOINT-MARKER: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (checkpoint-marker cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (checkpoint-marker '(:pointer :void) checkpoint-marker :in :handle))

(defvk-get-structs-fun (get-queue-checkpoint-data-nv
                        %vk:get-queue-checkpoint-data-nv
                        "Represents [vkGetQueueCheckpointDataNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetQueueCheckpointDataNV.html).

Args:
 - QUEUE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    CHECKPOINT-DATA-NV)

See CHECKPOINT-DATA-NV
See QUEUE
"
                        ((queue cffi:foreign-pointer))
                        ()
                        checkpoint-data-count
                        checkpoint-data
                      t
                        t)
  (queue '%vk:queue queue :in :handle)
  (checkpoint-data-count :uint32 checkpoint-data-count :out)
  (checkpoint-data '(:struct %vk:checkpoint-data-nv) checkpoint-data :out :list))

(defvk-simple-fun (cmd-bind-transform-feedback-buffers-ext
                   %vk:cmd-bind-transform-feedback-buffers-ext
                   "Represents [vkCmdBindTransformFeedbackBuffersEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBindTransformFeedbackBuffersEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-BINDING: <a description>
 - BUFFERS: <a description>
 - OFFSETS: <a description>
 - SIZES: (optional) <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (first-binding unsigned-byte) (buffers list) (offsets list))
                   (((sizes nil) list))
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-binding :uint32 first-binding :in :raw)
  (binding-count :uint32 (length sizes) :in :raw)
  (buffers '%vk:buffer buffers :in :handle :list)
  (offsets '%vk:device-size offsets :in :list)
  (sizes '%vk:device-size sizes :in :list :optional))

(defvk-simple-fun (cmd-begin-transform-feedback-ext
                   %vk:cmd-begin-transform-feedback-ext
                   "Represents [vkCmdBeginTransformFeedbackEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBeginTransformFeedbackEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-COUNTER-BUFFER: <a description>
 - COUNTER-BUFFERS: <a description>
 - COUNTER-BUFFER-OFFSETS: (optional) <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (first-counter-buffer unsigned-byte) (counter-buffers list))
                   (((counter-buffer-offsets nil) list))
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-counter-buffer :uint32 first-counter-buffer :in :raw)
  (counter-buffer-count :uint32 (length counter-buffer-offsets) :in :raw)
  (counter-buffers '%vk:buffer counter-buffers :in :handle :list)
  (counter-buffer-offsets '%vk:device-size counter-buffer-offsets :in :list :optional))

(defvk-simple-fun (cmd-end-transform-feedback-ext
                   %vk:cmd-end-transform-feedback-ext
                   "Represents [vkCmdEndTransformFeedbackEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdEndTransformFeedbackEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-COUNTER-BUFFER: <a description>
 - COUNTER-BUFFERS: <a description>
 - COUNTER-BUFFER-OFFSETS: (optional) <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (first-counter-buffer unsigned-byte) (counter-buffers list))
                   (((counter-buffer-offsets nil) list))
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-counter-buffer :uint32 first-counter-buffer :in :raw)
  (counter-buffer-count :uint32 (length counter-buffer-offsets) :in :raw)
  (counter-buffers '%vk:buffer counter-buffers :in :handle :list)
  (counter-buffer-offsets '%vk:device-size counter-buffer-offsets :in :list :optional))

(defvk-simple-fun (cmd-begin-query-indexed-ext
                   %vk:cmd-begin-query-indexed-ext
                   "Represents [vkCmdBeginQueryIndexedEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBeginQueryIndexedEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - QUERY-POOL: <a description>
 - QUERY: <a description>
 - INDEX: <a description>
 - FLAGS: (optional) <a description>

See COMMAND-BUFFER
See QUERY-CONTROL-FLAGS
See QUERY-POOL
"
                   ((command-buffer cffi:foreign-pointer) (query-pool cffi:foreign-pointer) (query unsigned-byte) (index unsigned-byte))
                   (((flags nil) (or unsigned-byte list)))
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (query :uint32 query :in :raw)
  (flags '%vk:query-control-flags flags :in :raw :optional)
  (index :uint32 index :in :raw))

(defvk-simple-fun (cmd-end-query-indexed-ext
                   %vk:cmd-end-query-indexed-ext
                   "Represents [vkCmdEndQueryIndexedEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdEndQueryIndexedEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - QUERY-POOL: <a description>
 - QUERY: <a description>
 - INDEX: <a description>

See COMMAND-BUFFER
See QUERY-POOL
"
                   ((command-buffer cffi:foreign-pointer) (query-pool cffi:foreign-pointer) (query unsigned-byte) (index unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (query :uint32 query :in :raw)
  (index :uint32 index :in :raw))

(defvk-simple-fun (cmd-draw-indirect-byte-count-ext
                   %vk:cmd-draw-indirect-byte-count-ext
                   "Represents [vkCmdDrawIndirectByteCountEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawIndirectByteCountEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - INSTANCE-COUNT: <a description>
 - FIRST-INSTANCE: <a description>
 - COUNTER-BUFFER: <a description>
 - COUNTER-BUFFER-OFFSET: <a description>
 - COUNTER-OFFSET: <a description>
 - VERTEX-STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (instance-count unsigned-byte) (first-instance unsigned-byte) (counter-buffer cffi:foreign-pointer) (counter-buffer-offset unsigned-byte) (counter-offset unsigned-byte) (vertex-stride unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (instance-count :uint32 instance-count :in :raw)
  (first-instance :uint32 first-instance :in :raw)
  (counter-buffer '%vk:buffer counter-buffer :in :handle)
  (counter-buffer-offset '%vk:device-size counter-buffer-offset :in :raw)
  (counter-offset :uint32 counter-offset :in :raw)
  (vertex-stride :uint32 vertex-stride :in :raw))

(defvk-simple-fun (cmd-set-exclusive-scissor-nv
                   %vk:cmd-set-exclusive-scissor-nv
                   "Represents [vkCmdSetExclusiveScissorNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetExclusiveScissorNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-EXCLUSIVE-SCISSOR: <a description>
 - EXCLUSIVE-SCISSORS: <a description>

See COMMAND-BUFFER
See RECT-2D
"
                   ((command-buffer cffi:foreign-pointer) (first-exclusive-scissor unsigned-byte) (exclusive-scissors list))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-exclusive-scissor :uint32 first-exclusive-scissor :in :raw)
  (exclusive-scissor-count :uint32 (length exclusive-scissors) :in :raw)
  (exclusive-scissors '(:struct %vk:rect-2d) exclusive-scissors :in :list))

(defvk-simple-fun (cmd-bind-shading-rate-image-nv
                   %vk:cmd-bind-shading-rate-image-nv
                   "Represents [vkCmdBindShadingRateImageNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBindShadingRateImageNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - IMAGE-LAYOUT: <a description>
 - IMAGE-VIEW: (optional) <a description>

See COMMAND-BUFFER
See IMAGE-LAYOUT
See IMAGE-VIEW
"
                   ((command-buffer cffi:foreign-pointer) (image-layout keyword))
                   (((image-view (cffi:null-pointer)) cffi:foreign-pointer))
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (image-view '%vk:image-view image-view :in :handle :optional)
  (image-layout '%vk:image-layout image-layout :in :raw))

(defvk-simple-fun (cmd-set-viewport-shading-rate-palette-nv
                   %vk:cmd-set-viewport-shading-rate-palette-nv
                   "Represents [vkCmdSetViewportShadingRatePaletteNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetViewportShadingRatePaletteNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-VIEWPORT: <a description>
 - SHADING-RATE-PALETTES: <a description>

See COMMAND-BUFFER
See SHADING-RATE-PALETTE-NV
"
                   ((command-buffer cffi:foreign-pointer) (first-viewport unsigned-byte) (shading-rate-palettes list))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-viewport :uint32 first-viewport :in :raw)
  (viewport-count :uint32 (length shading-rate-palettes) :in :raw)
  (shading-rate-palettes '(:struct %vk:shading-rate-palette-nv) shading-rate-palettes :in :list))

(defvk-simple-fun (cmd-set-coarse-sample-order-nv
                   %vk:cmd-set-coarse-sample-order-nv
                   "Represents [vkCmdSetCoarseSampleOrderNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetCoarseSampleOrderNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SAMPLE-ORDER-TYPE: <a description>
 - CUSTOM-SAMPLE-ORDERS: <a description>

See COARSE-SAMPLE-ORDER-CUSTOM-NV
See COARSE-SAMPLE-ORDER-TYPE-NV
See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (sample-order-type keyword) (custom-sample-orders list))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (sample-order-type '%vk:coarse-sample-order-type-nv sample-order-type :in :raw)
  (custom-sample-order-count :uint32 (length custom-sample-orders) :in :raw)
  (custom-sample-orders '(:struct %vk:coarse-sample-order-custom-nv) custom-sample-orders :in :list))

(defvk-simple-fun (cmd-draw-mesh-tasks-nv
                   %vk:cmd-draw-mesh-tasks-nv
                   "Represents [vkCmdDrawMeshTasksNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawMeshTasksNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - TASK-COUNT: <a description>
 - FIRST-TASK: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (task-count unsigned-byte) (first-task unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (task-count :uint32 task-count :in :raw)
  (first-task :uint32 first-task :in :raw))

(defvk-simple-fun (cmd-draw-mesh-tasks-indirect-nv
                   %vk:cmd-draw-mesh-tasks-indirect-nv
                   "Represents [vkCmdDrawMeshTasksIndirectNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawMeshTasksIndirectNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - DRAW-COUNT: <a description>
 - STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (draw-count unsigned-byte) (stride unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (draw-count :uint32 draw-count :in :raw)
  (stride :uint32 stride :in :raw))

(defvk-simple-fun (cmd-draw-mesh-tasks-indirect-count-nv
                   %vk:cmd-draw-mesh-tasks-indirect-count-nv
                   "Represents [vkCmdDrawMeshTasksIndirectCountNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdDrawMeshTasksIndirectCountNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BUFFER: <a description>
 - OFFSET: <a description>
 - COUNT-BUFFER: <a description>
 - COUNT-BUFFER-OFFSET: <a description>
 - MAX-DRAW-COUNT: <a description>
 - STRIDE: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (buffer cffi:foreign-pointer) (offset unsigned-byte) (count-buffer cffi:foreign-pointer) (count-buffer-offset unsigned-byte) (max-draw-count unsigned-byte) (stride unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (buffer '%vk:buffer buffer :in :handle)
  (offset '%vk:device-size offset :in :raw)
  (count-buffer '%vk:buffer count-buffer :in :handle)
  (count-buffer-offset '%vk:device-size count-buffer-offset :in :raw)
  (max-draw-count :uint32 max-draw-count :in :raw)
  (stride :uint32 stride :in :raw))

(defvk-simple-fun (compile-deferred-nv
                   %vk:compile-deferred-nv
                   "Represents [vkCompileDeferredNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCompileDeferredNV.html).

Args:
 - DEVICE: <a description>
 - PIPELINE: <a description>
 - SHADER: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See PIPELINE
See RESULT
"
                   ((device cffi:foreign-pointer) (pipeline cffi:foreign-pointer) (shader unsigned-byte))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (pipeline '%vk:pipeline pipeline :in :handle)
  (shader :uint32 shader :in :raw))

(defvk-create-handle-fun (create-acceleration-structure-nv
                          %vk:create-acceleration-structure-nv
                          "Represents [vkCreateAccelerationStructureNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateAccelerationStructureNV.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    ACCELERATION-STRUCTURE-NV
    RESULT)

See ACCELERATION-STRUCTURE-CREATE-INFO-NV
See ACCELERATION-STRUCTURE-NV
See ALLOCATION-CALLBACKS
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:acceleration-structure-create-info-nv cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:acceleration-structure-create-info-nv) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (acceleration-structure '%vk:acceleration-structure-nv acceleration-structure :out :handle))

(defvk-simple-fun (destroy-acceleration-structure-khr
                   %vk:destroy-acceleration-structure-khr
                   "Represents [vkDestroyAccelerationStructureKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyAccelerationStructureKHR.html).

Args:
 - DEVICE: <a description>
 - ACCELERATION-STRUCTURE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ACCELERATION-STRUCTURE-KHR
See ALLOCATION-CALLBACKS
See DEVICE
"
                   ((device cffi:foreign-pointer))
                   (((acceleration-structure (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (acceleration-structure '%vk:acceleration-structure-khr acceleration-structure :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (destroy-acceleration-structure-nv
                   %vk:destroy-acceleration-structure-nv
                   "Represents [vkDestroyAccelerationStructureNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyAccelerationStructureNV.html).

Args:
 - DEVICE: <a description>
 - ACCELERATION-STRUCTURE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ACCELERATION-STRUCTURE-NV
See ALLOCATION-CALLBACKS
See DEVICE
"
                   ((device cffi:foreign-pointer))
                   (((acceleration-structure (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (acceleration-structure '%vk:acceleration-structure-nv acceleration-structure :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-get-struct-fun (get-acceleration-structure-memory-requirements-nv
                       %vk:get-acceleration-structure-memory-requirements-nv
                       "Represents [vkGetAccelerationStructureMemoryRequirementsNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetAccelerationStructureMemoryRequirementsNV.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    MEMORY-REQUIREMENTS-2-KHR)

See ACCELERATION-STRUCTURE-MEMORY-REQUIREMENTS-INFO-NV
See DEVICE
See MEMORY-REQUIREMENTS-2-KHR
"
                       ((device cffi:foreign-pointer) (info (or vk:acceleration-structure-memory-requirements-info-nv cffi:foreign-pointer)))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:acceleration-structure-memory-requirements-info-nv) info :in)
  (memory-requirements '%vk:memory-requirements-2-khr memory-requirements :out))

(defvk-simple-fun (bind-acceleration-structure-memory-nv
                   %vk:bind-acceleration-structure-memory-nv
                   "Represents [vkBindAccelerationStructureMemoryNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkBindAccelerationStructureMemoryNV.html).

Args:
 - DEVICE: <a description>
 - BIND-INFOS: <a description>

Returns:
  (CL:VALUES
    RESULT)

See BIND-ACCELERATION-STRUCTURE-MEMORY-INFO-NV
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (bind-infos list))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (bind-info-count :uint32 (length bind-infos) :in :raw)
  (bind-infos '(:struct %vk:bind-acceleration-structure-memory-info-nv) bind-infos :in :list))

(defvk-simple-fun (cmd-copy-acceleration-structure-nv
                   %vk:cmd-copy-acceleration-structure-nv
                   "Represents [vkCmdCopyAccelerationStructureNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyAccelerationStructureNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DST: <a description>
 - SRC: <a description>
 - MODE: <a description>

See ACCELERATION-STRUCTURE-NV
See COMMAND-BUFFER
See COPY-ACCELERATION-STRUCTURE-MODE-KHR
"
                   ((command-buffer cffi:foreign-pointer) (dst cffi:foreign-pointer) (src cffi:foreign-pointer) (mode keyword))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (dst '%vk:acceleration-structure-nv dst :in :handle)
  (src '%vk:acceleration-structure-nv src :in :handle)
  (mode '%vk:copy-acceleration-structure-mode-khr mode :in :raw))

(defvk-simple-fun (cmd-copy-acceleration-structure-khr
                   %vk:cmd-copy-acceleration-structure-khr
                   "Represents [vkCmdCopyAccelerationStructureKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyAccelerationStructureKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - INFO: <a description>

See COMMAND-BUFFER
See COPY-ACCELERATION-STRUCTURE-INFO-KHR
"
                   ((command-buffer cffi:foreign-pointer) (info (or vk:copy-acceleration-structure-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (info '(:struct %vk:copy-acceleration-structure-info-khr) info :in))

(defvk-simple-fun (copy-acceleration-structure-khr
                   %vk:copy-acceleration-structure-khr
                   "Represents [vkCopyAccelerationStructureKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCopyAccelerationStructureKHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>
 - DEFERRED-OPERATION: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See COPY-ACCELERATION-STRUCTURE-INFO-KHR
See DEFERRED-OPERATION-KHR
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (info (or vk:copy-acceleration-structure-info-khr cffi:foreign-pointer)))
                   (((deferred-operation (cffi:null-pointer)) cffi:foreign-pointer))
                  nil)
  (device '%vk:device device :in :handle)
  (deferred-operation '%vk:deferred-operation-khr deferred-operation :in :handle :optional)
  (info '(:struct %vk:copy-acceleration-structure-info-khr) info :in))

(defvk-simple-fun (cmd-copy-acceleration-structure-to-memory-khr
                   %vk:cmd-copy-acceleration-structure-to-memory-khr
                   "Represents [vkCmdCopyAccelerationStructureToMemoryKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyAccelerationStructureToMemoryKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - INFO: <a description>

See COMMAND-BUFFER
See COPY-ACCELERATION-STRUCTURE-TO-MEMORY-INFO-KHR
"
                   ((command-buffer cffi:foreign-pointer) (info (or vk:copy-acceleration-structure-to-memory-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (info '(:struct %vk:copy-acceleration-structure-to-memory-info-khr) info :in))

(defvk-simple-fun (copy-acceleration-structure-to-memory-khr
                   %vk:copy-acceleration-structure-to-memory-khr
                   "Represents [vkCopyAccelerationStructureToMemoryKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCopyAccelerationStructureToMemoryKHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>
 - DEFERRED-OPERATION: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See COPY-ACCELERATION-STRUCTURE-TO-MEMORY-INFO-KHR
See DEFERRED-OPERATION-KHR
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (info (or vk:copy-acceleration-structure-to-memory-info-khr cffi:foreign-pointer)))
                   (((deferred-operation (cffi:null-pointer)) cffi:foreign-pointer))
                  nil)
  (device '%vk:device device :in :handle)
  (deferred-operation '%vk:deferred-operation-khr deferred-operation :in :handle :optional)
  (info '(:struct %vk:copy-acceleration-structure-to-memory-info-khr) info :in))

(defvk-simple-fun (cmd-copy-memory-to-acceleration-structure-khr
                   %vk:cmd-copy-memory-to-acceleration-structure-khr
                   "Represents [vkCmdCopyMemoryToAccelerationStructureKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyMemoryToAccelerationStructureKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - INFO: <a description>

See COMMAND-BUFFER
See COPY-MEMORY-TO-ACCELERATION-STRUCTURE-INFO-KHR
"
                   ((command-buffer cffi:foreign-pointer) (info (or vk:copy-memory-to-acceleration-structure-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (info '(:struct %vk:copy-memory-to-acceleration-structure-info-khr) info :in))

(defvk-simple-fun (copy-memory-to-acceleration-structure-khr
                   %vk:copy-memory-to-acceleration-structure-khr
                   "Represents [vkCopyMemoryToAccelerationStructureKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCopyMemoryToAccelerationStructureKHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>
 - DEFERRED-OPERATION: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See COPY-MEMORY-TO-ACCELERATION-STRUCTURE-INFO-KHR
See DEFERRED-OPERATION-KHR
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (info (or vk:copy-memory-to-acceleration-structure-info-khr cffi:foreign-pointer)))
                   (((deferred-operation (cffi:null-pointer)) cffi:foreign-pointer))
                  nil)
  (device '%vk:device device :in :handle)
  (deferred-operation '%vk:deferred-operation-khr deferred-operation :in :handle :optional)
  (info '(:struct %vk:copy-memory-to-acceleration-structure-info-khr) info :in))

(defvk-simple-fun (cmd-write-acceleration-structures-properties-khr
                   %vk:cmd-write-acceleration-structures-properties-khr
                   "Represents [vkCmdWriteAccelerationStructuresPropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdWriteAccelerationStructuresPropertiesKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - ACCELERATION-STRUCTURES: <a description>
 - QUERY-TYPE: <a description>
 - QUERY-POOL: <a description>
 - FIRST-QUERY: <a description>

See ACCELERATION-STRUCTURE-KHR
See COMMAND-BUFFER
See QUERY-POOL
See QUERY-TYPE
"
                   ((command-buffer cffi:foreign-pointer) (acceleration-structures list) (query-type keyword) (query-pool cffi:foreign-pointer) (first-query unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (acceleration-structure-count :uint32 (length acceleration-structures) :in :raw)
  (acceleration-structures '%vk:acceleration-structure-khr acceleration-structures :in :handle :list)
  (query-type '%vk:query-type query-type :in :raw)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (first-query :uint32 first-query :in :raw))

(defvk-simple-fun (cmd-write-acceleration-structures-properties-nv
                   %vk:cmd-write-acceleration-structures-properties-nv
                   "Represents [vkCmdWriteAccelerationStructuresPropertiesNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdWriteAccelerationStructuresPropertiesNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - ACCELERATION-STRUCTURES: <a description>
 - QUERY-TYPE: <a description>
 - QUERY-POOL: <a description>
 - FIRST-QUERY: <a description>

See ACCELERATION-STRUCTURE-NV
See COMMAND-BUFFER
See QUERY-POOL
See QUERY-TYPE
"
                   ((command-buffer cffi:foreign-pointer) (acceleration-structures list) (query-type keyword) (query-pool cffi:foreign-pointer) (first-query unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (acceleration-structure-count :uint32 (length acceleration-structures) :in :raw)
  (acceleration-structures '%vk:acceleration-structure-nv acceleration-structures :in :handle :list)
  (query-type '%vk:query-type query-type :in :raw)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (first-query :uint32 first-query :in :raw))

(defvk-simple-fun (cmd-build-acceleration-structure-nv
                   %vk:cmd-build-acceleration-structure-nv
                   "Represents [vkCmdBuildAccelerationStructureNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBuildAccelerationStructureNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - INFO: <a description>
 - INSTANCE-OFFSET: <a description>
 - UPDATE: <a description>
 - DST: <a description>
 - SCRATCH: <a description>
 - SCRATCH-OFFSET: <a description>
 - INSTANCE-DATA: (optional) <a description>
 - SRC: (optional) <a description>

See ACCELERATION-STRUCTURE-INFO-NV
See ACCELERATION-STRUCTURE-NV
See BOOL32
See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (info (or vk:acceleration-structure-info-nv cffi:foreign-pointer)) (instance-offset unsigned-byte) (update boolean) (dst cffi:foreign-pointer) (scratch cffi:foreign-pointer) (scratch-offset unsigned-byte))
                   (((instance-data (cffi:null-pointer)) cffi:foreign-pointer) ((src (cffi:null-pointer)) cffi:foreign-pointer))
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (info '(:struct %vk:acceleration-structure-info-nv) info :in)
  (instance-data '%vk:buffer instance-data :in :handle :optional)
  (instance-offset '%vk:device-size instance-offset :in :raw)
  (update '%vk:bool32 update :in :raw)
  (dst '%vk:acceleration-structure-nv dst :in :handle)
  (src '%vk:acceleration-structure-nv src :in :handle :optional)
  (scratch '%vk:buffer scratch :in :handle)
  (scratch-offset '%vk:device-size scratch-offset :in :raw))

(defvk-simple-fun (write-acceleration-structures-properties-khr
                   %vk:write-acceleration-structures-properties-khr
                   "Represents [vkWriteAccelerationStructuresPropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkWriteAccelerationStructuresPropertiesKHR.html).

Args:
 - DEVICE: <a description>
 - ACCELERATION-STRUCTURES: <a description>
 - QUERY-TYPE: <a description>
 - DATA-SIZE: <a description>
 - DATA: <a description>
 - STRIDE: <a description>

Returns:
  (CL:VALUES
    RESULT)

See ACCELERATION-STRUCTURE-KHR
See DEVICE
See QUERY-TYPE
See RESULT
"
                   ((device cffi:foreign-pointer) (acceleration-structures list) (query-type keyword) (data-size unsigned-byte) (data cffi:foreign-pointer) (stride unsigned-byte))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (acceleration-structure-count :uint32 (length acceleration-structures) :in :raw)
  (acceleration-structures '%vk:acceleration-structure-khr acceleration-structures :in :handle :list)
  (query-type '%vk:query-type query-type :in :raw)
  (data-size '%vk:size-t data-size :in :raw)
  (data '(:pointer :void) data :in :handle)
  (stride '%vk:size-t stride :in :raw))

(defvk-simple-fun (cmd-trace-rays-khr
                   %vk:cmd-trace-rays-khr
                   "Represents [vkCmdTraceRaysKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdTraceRaysKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - RAYGEN-SHADER-BINDING-TABLE: <a description>
 - MISS-SHADER-BINDING-TABLE: <a description>
 - HIT-SHADER-BINDING-TABLE: <a description>
 - CALLABLE-SHADER-BINDING-TABLE: <a description>
 - WIDTH: <a description>
 - HEIGHT: <a description>
 - DEPTH: <a description>

See COMMAND-BUFFER
See STRIDED-DEVICE-ADDRESS-REGION-KHR
"
                   ((command-buffer cffi:foreign-pointer) (raygen-shader-binding-table (or vk:strided-device-address-region-khr cffi:foreign-pointer)) (miss-shader-binding-table (or vk:strided-device-address-region-khr cffi:foreign-pointer)) (hit-shader-binding-table (or vk:strided-device-address-region-khr cffi:foreign-pointer)) (callable-shader-binding-table (or vk:strided-device-address-region-khr cffi:foreign-pointer)) (width unsigned-byte) (height unsigned-byte) (depth unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (raygen-shader-binding-table '(:struct %vk:strided-device-address-region-khr) raygen-shader-binding-table :in)
  (miss-shader-binding-table '(:struct %vk:strided-device-address-region-khr) miss-shader-binding-table :in)
  (hit-shader-binding-table '(:struct %vk:strided-device-address-region-khr) hit-shader-binding-table :in)
  (callable-shader-binding-table '(:struct %vk:strided-device-address-region-khr) callable-shader-binding-table :in)
  (width :uint32 width :in :raw)
  (height :uint32 height :in :raw)
  (depth :uint32 depth :in :raw))

(defvk-simple-fun (cmd-trace-rays-nv
                   %vk:cmd-trace-rays-nv
                   "Represents [vkCmdTraceRaysNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdTraceRaysNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - RAYGEN-SHADER-BINDING-TABLE-BUFFER: <a description>
 - RAYGEN-SHADER-BINDING-OFFSET: <a description>
 - MISS-SHADER-BINDING-OFFSET: <a description>
 - MISS-SHADER-BINDING-STRIDE: <a description>
 - HIT-SHADER-BINDING-OFFSET: <a description>
 - HIT-SHADER-BINDING-STRIDE: <a description>
 - CALLABLE-SHADER-BINDING-OFFSET: <a description>
 - CALLABLE-SHADER-BINDING-STRIDE: <a description>
 - WIDTH: <a description>
 - HEIGHT: <a description>
 - DEPTH: <a description>
 - MISS-SHADER-BINDING-TABLE-BUFFER: (optional) <a description>
 - HIT-SHADER-BINDING-TABLE-BUFFER: (optional) <a description>
 - CALLABLE-SHADER-BINDING-TABLE-BUFFER: (optional) <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (raygen-shader-binding-table-buffer cffi:foreign-pointer) (raygen-shader-binding-offset unsigned-byte) (miss-shader-binding-offset unsigned-byte) (miss-shader-binding-stride unsigned-byte) (hit-shader-binding-offset unsigned-byte) (hit-shader-binding-stride unsigned-byte) (callable-shader-binding-offset unsigned-byte) (callable-shader-binding-stride unsigned-byte) (width unsigned-byte) (height unsigned-byte) (depth unsigned-byte))
                   (((miss-shader-binding-table-buffer (cffi:null-pointer)) cffi:foreign-pointer) ((hit-shader-binding-table-buffer (cffi:null-pointer)) cffi:foreign-pointer) ((callable-shader-binding-table-buffer (cffi:null-pointer)) cffi:foreign-pointer))
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (raygen-shader-binding-table-buffer '%vk:buffer raygen-shader-binding-table-buffer :in :handle)
  (raygen-shader-binding-offset '%vk:device-size raygen-shader-binding-offset :in :raw)
  (miss-shader-binding-table-buffer '%vk:buffer miss-shader-binding-table-buffer :in :handle :optional)
  (miss-shader-binding-offset '%vk:device-size miss-shader-binding-offset :in :raw)
  (miss-shader-binding-stride '%vk:device-size miss-shader-binding-stride :in :raw)
  (hit-shader-binding-table-buffer '%vk:buffer hit-shader-binding-table-buffer :in :handle :optional)
  (hit-shader-binding-offset '%vk:device-size hit-shader-binding-offset :in :raw)
  (hit-shader-binding-stride '%vk:device-size hit-shader-binding-stride :in :raw)
  (callable-shader-binding-table-buffer '%vk:buffer callable-shader-binding-table-buffer :in :handle :optional)
  (callable-shader-binding-offset '%vk:device-size callable-shader-binding-offset :in :raw)
  (callable-shader-binding-stride '%vk:device-size callable-shader-binding-stride :in :raw)
  (width :uint32 width :in :raw)
  (height :uint32 height :in :raw)
  (depth :uint32 depth :in :raw))

(defvk-simple-fun (get-ray-tracing-shader-group-handles-khr
                   %vk:get-ray-tracing-shader-group-handles-khr
                   "Represents [vkGetRayTracingShaderGroupHandlesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetRayTracingShaderGroupHandlesKHR.html).

Args:
 - DEVICE: <a description>
 - PIPELINE: <a description>
 - FIRST-GROUP: <a description>
 - GROUP-COUNT: <a description>
 - DATA-SIZE: <a description>
 - DATA: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See PIPELINE
See RESULT
"
                   ((device cffi:foreign-pointer) (pipeline cffi:foreign-pointer) (first-group unsigned-byte) (group-count unsigned-byte) (data-size unsigned-byte) (data cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (pipeline '%vk:pipeline pipeline :in :handle)
  (first-group :uint32 first-group :in :raw)
  (group-count :uint32 group-count :in :raw)
  (data-size '%vk:size-t data-size :in :raw)
  (data '(:pointer :void) data :in :handle))

(defvk-simple-fun (get-ray-tracing-shader-group-handles-nv
                   %vk:get-ray-tracing-shader-group-handles-nv
                   "Represents [vkGetRayTracingShaderGroupHandlesNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetRayTracingShaderGroupHandlesNV.html).

Args:
 - DEVICE: <a description>
 - PIPELINE: <a description>
 - FIRST-GROUP: <a description>
 - GROUP-COUNT: <a description>
 - DATA-SIZE: <a description>
 - DATA: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See PIPELINE
See RESULT
"
                   ((device cffi:foreign-pointer) (pipeline cffi:foreign-pointer) (first-group unsigned-byte) (group-count unsigned-byte) (data-size unsigned-byte) (data cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (pipeline '%vk:pipeline pipeline :in :handle)
  (first-group :uint32 first-group :in :raw)
  (group-count :uint32 group-count :in :raw)
  (data-size '%vk:size-t data-size :in :raw)
  (data '(:pointer :void) data :in :handle))

(defvk-simple-fun (get-ray-tracing-capture-replay-shader-group-handles-khr
                   %vk:get-ray-tracing-capture-replay-shader-group-handles-khr
                   "Represents [vkGetRayTracingCaptureReplayShaderGroupHandlesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetRayTracingCaptureReplayShaderGroupHandlesKHR.html).

Args:
 - DEVICE: <a description>
 - PIPELINE: <a description>
 - FIRST-GROUP: <a description>
 - GROUP-COUNT: <a description>
 - DATA-SIZE: <a description>
 - DATA: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See PIPELINE
See RESULT
"
                   ((device cffi:foreign-pointer) (pipeline cffi:foreign-pointer) (first-group unsigned-byte) (group-count unsigned-byte) (data-size unsigned-byte) (data cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (pipeline '%vk:pipeline pipeline :in :handle)
  (first-group :uint32 first-group :in :raw)
  (group-count :uint32 group-count :in :raw)
  (data-size '%vk:size-t data-size :in :raw)
  (data '(:pointer :void) data :in :handle))

(defvk-simple-fun (get-acceleration-structure-handle-nv
                   %vk:get-acceleration-structure-handle-nv
                   "Represents [vkGetAccelerationStructureHandleNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetAccelerationStructureHandleNV.html).

Args:
 - DEVICE: <a description>
 - ACCELERATION-STRUCTURE: <a description>
 - DATA-SIZE: <a description>
 - DATA: <a description>

Returns:
  (CL:VALUES
    RESULT)

See ACCELERATION-STRUCTURE-NV
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (acceleration-structure cffi:foreign-pointer) (data-size unsigned-byte) (data cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (acceleration-structure '%vk:acceleration-structure-nv acceleration-structure :in :handle)
  (data-size '%vk:size-t data-size :in :raw)
  (data '(:pointer :void) data :in :handle))

(defvk-create-handles-fun (create-ray-tracing-pipelines-nv
                           %vk:create-ray-tracing-pipelines-nv
                           "Represents [vkCreateRayTracingPipelinesNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateRayTracingPipelinesNV.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFOS: <a description>
 - PIPELINE-CACHE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    PIPELINE
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See PIPELINE
See PIPELINE-CACHE
See RAY-TRACING-PIPELINE-CREATE-INFO-NV
See RESULT
"
                           ((device cffi:foreign-pointer) (create-infos list))
                           (((pipeline-cache (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                           (length create-infos)
                           t)
  (device '%vk:device device :in :handle)
  (pipeline-cache '%vk:pipeline-cache pipeline-cache :in :handle :optional)
  (create-info-count :uint32 (length create-infos) :in :raw)
  (create-infos '(:struct %vk:ray-tracing-pipeline-create-info-nv) create-infos :in :list)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (pipelines '%vk:pipeline pipelines :out :handle :list))

(defvk-create-handles-fun (create-ray-tracing-pipelines-khr
                           %vk:create-ray-tracing-pipelines-khr
                           "Represents [vkCreateRayTracingPipelinesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateRayTracingPipelinesKHR.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFOS: <a description>
 - DEFERRED-OPERATION: (optional) <a description>
 - PIPELINE-CACHE: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    PIPELINE
    RESULT)

See ALLOCATION-CALLBACKS
See DEFERRED-OPERATION-KHR
See DEVICE
See PIPELINE
See PIPELINE-CACHE
See RAY-TRACING-PIPELINE-CREATE-INFO-KHR
See RESULT
"
                           ((device cffi:foreign-pointer) (create-infos list))
                           (((deferred-operation (cffi:null-pointer)) cffi:foreign-pointer) ((pipeline-cache (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                           (length create-infos))
  (device '%vk:device device :in :handle)
  (deferred-operation '%vk:deferred-operation-khr deferred-operation :in :handle :optional)
  (pipeline-cache '%vk:pipeline-cache pipeline-cache :in :handle :optional)
  (create-info-count :uint32 (length create-infos) :in :raw)
  (create-infos '(:struct %vk:ray-tracing-pipeline-create-info-khr) create-infos :in :list)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (pipelines '%vk:pipeline pipelines :out :handle :list))

(defvk-enumerate-fun (get-physical-device-cooperative-matrix-properties-nv
                      %vk:get-physical-device-cooperative-matrix-properties-nv
                      "Represents [vkGetPhysicalDeviceCooperativeMatrixPropertiesNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceCooperativeMatrixPropertiesNV.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    COOPERATIVE-MATRIX-PROPERTIES-NV
    RESULT)

See COOPERATIVE-MATRIX-PROPERTIES-NV
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer))
                      ()
                      property-count
                      properties
                      nil
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (property-count :uint32 property-count :out)
  (properties '(:struct %vk:cooperative-matrix-properties-nv) properties :out :list))

(defvk-simple-fun (cmd-trace-rays-indirect-khr
                   %vk:cmd-trace-rays-indirect-khr
                   "Represents [vkCmdTraceRaysIndirectKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdTraceRaysIndirectKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - RAYGEN-SHADER-BINDING-TABLE: <a description>
 - MISS-SHADER-BINDING-TABLE: <a description>
 - HIT-SHADER-BINDING-TABLE: <a description>
 - CALLABLE-SHADER-BINDING-TABLE: <a description>
 - INDIRECT-DEVICE-ADDRESS: <a description>

See COMMAND-BUFFER
See DEVICE-ADDRESS
See STRIDED-DEVICE-ADDRESS-REGION-KHR
"
                   ((command-buffer cffi:foreign-pointer) (raygen-shader-binding-table (or vk:strided-device-address-region-khr cffi:foreign-pointer)) (miss-shader-binding-table (or vk:strided-device-address-region-khr cffi:foreign-pointer)) (hit-shader-binding-table (or vk:strided-device-address-region-khr cffi:foreign-pointer)) (callable-shader-binding-table (or vk:strided-device-address-region-khr cffi:foreign-pointer)) (indirect-device-address unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (raygen-shader-binding-table '(:struct %vk:strided-device-address-region-khr) raygen-shader-binding-table :in)
  (miss-shader-binding-table '(:struct %vk:strided-device-address-region-khr) miss-shader-binding-table :in)
  (hit-shader-binding-table '(:struct %vk:strided-device-address-region-khr) hit-shader-binding-table :in)
  (callable-shader-binding-table '(:struct %vk:strided-device-address-region-khr) callable-shader-binding-table :in)
  (indirect-device-address '%vk:device-address indirect-device-address :in :raw))

(defvk-get-struct-fun (get-device-acceleration-structure-compatibility-khr
                       %vk:get-device-acceleration-structure-compatibility-khr
                       "Represents [vkGetDeviceAccelerationStructureCompatibilityKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceAccelerationStructureCompatibilityKHR.html).

Args:
 - DEVICE: <a description>
 - VERSION-INFO: <a description>

Returns:
  (CL:VALUES
    ACCELERATION-STRUCTURE-COMPATIBILITY-KHR)

See ACCELERATION-STRUCTURE-COMPATIBILITY-KHR
See ACCELERATION-STRUCTURE-VERSION-INFO-KHR
See DEVICE
"
                       ((device cffi:foreign-pointer) (version-info (or vk:acceleration-structure-version-info-khr cffi:foreign-pointer)))
                       ())
  (device '%vk:device device :in :handle)
  (version-info '(:struct %vk:acceleration-structure-version-info-khr) version-info :in)
  (compatibility '%vk:acceleration-structure-compatibility-khr compatibility :out :raw))

(defvk-simple-fun (get-ray-tracing-shader-group-stack-size-khr
                   %vk:get-ray-tracing-shader-group-stack-size-khr
                   "Represents [vkGetRayTracingShaderGroupStackSizeKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetRayTracingShaderGroupStackSizeKHR.html).

Args:
 - DEVICE: <a description>
 - PIPELINE: <a description>
 - GROUP: <a description>
 - GROUP-SHADER: <a description>

Returns:
  (CL:VALUES
    DEVICE-SIZE ;; (UNSIGNED-BYTE 64))

See DEVICE
See DEVICE-SIZE
See PIPELINE
See SHADER-GROUP-SHADER-KHR
"
                   ((device cffi:foreign-pointer) (pipeline cffi:foreign-pointer) (group unsigned-byte) (group-shader keyword))
                   ()
                  '%vk:device-size)
  (device '%vk:device device :in :handle)
  (pipeline '%vk:pipeline pipeline :in :handle)
  (group :uint32 group :in :raw)
  (group-shader '%vk:shader-group-shader-khr group-shader :in :raw))

(defvk-simple-fun (cmd-set-ray-tracing-pipeline-stack-size-khr
                   %vk:cmd-set-ray-tracing-pipeline-stack-size-khr
                   "Represents [vkCmdSetRayTracingPipelineStackSizeKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetRayTracingPipelineStackSizeKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - PIPELINE-STACK-SIZE: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (pipeline-stack-size unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (pipeline-stack-size :uint32 pipeline-stack-size :in :raw))

(defvk-simple-fun (get-image-view-handle-nv-x
                   %vk:get-image-view-handle-nv-x
                   "Represents [vkGetImageViewHandleNVX](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetImageViewHandleNVX.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    UNSIGNED-BYTE)

See DEVICE
See IMAGE-VIEW-HANDLE-INFO-NV-X
"
                   ((device cffi:foreign-pointer) (info (or vk:image-view-handle-info-nv-x cffi:foreign-pointer)))
                   ()
                  :uint32
                  t)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:image-view-handle-info-nv-x) info :in))

(defvk-get-struct-fun (get-image-view-address-nv-x
                       %vk:get-image-view-address-nv-x
                       "Represents [vkGetImageViewAddressNVX](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetImageViewAddressNVX.html).

Args:
 - DEVICE: <a description>
 - IMAGE-VIEW: <a description>

Returns:
  (CL:VALUES
    IMAGE-VIEW-ADDRESS-PROPERTIES-NV-X
    RESULT)

See DEVICE
See IMAGE-VIEW
See IMAGE-VIEW-ADDRESS-PROPERTIES-NV-X
See RESULT
"
                       ((device cffi:foreign-pointer) (image-view cffi:foreign-pointer))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (image-view '%vk:image-view image-view :in :handle)
  (properties '(:struct %vk:image-view-address-properties-nv-x) properties :out))

(defvk-enumerate-fun (get-physical-device-surface-present-modes-2-ext
                      %vk:get-physical-device-surface-present-modes-2-ext
                      "Represents [vkGetPhysicalDeviceSurfacePresentModes2EXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSurfacePresentModes2EXT.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - SURFACE-INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PRESENT-MODE-KHR
    RESULT)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-SURFACE-INFO-2-KHR
See PRESENT-MODE-KHR
See RESULT
"
                      ((physical-device cffi:foreign-pointer) (surface-info (or vk:physical-device-surface-info-2-khr cffi:foreign-pointer)))
                      ()
                      present-mode-count
                      present-modes
                      nil
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (surface-info '(:struct %vk:physical-device-surface-info-2-khr) surface-info :in)
  (present-mode-count :uint32 present-mode-count :out)
  (present-modes '%vk:present-mode-khr present-modes :out :raw :list))

(defvk-get-struct-fun (get-device-group-surface-present-modes-2-ext
                       %vk:get-device-group-surface-present-modes-2-ext
                       "Represents [vkGetDeviceGroupSurfacePresentModes2EXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceGroupSurfacePresentModes2EXT.html).

Args:
 - DEVICE: <a description>
 - SURFACE-INFO: <a description>

Returns:
  (CL:VALUES
    DEVICE-GROUP-PRESENT-MODE-FLAGS-KHR
    RESULT)

See DEVICE
See DEVICE-GROUP-PRESENT-MODE-FLAGS-KHR
See PHYSICAL-DEVICE-SURFACE-INFO-2-KHR
See RESULT
"
                       ((device cffi:foreign-pointer) (surface-info (or vk:physical-device-surface-info-2-khr cffi:foreign-pointer)))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (surface-info '(:struct %vk:physical-device-surface-info-2-khr) surface-info :in)
  (modes '%vk:device-group-present-mode-flags-khr modes :out :raw))

(defvk-simple-fun (acquire-full-screen-exclusive-mode-ext
                   %vk:acquire-full-screen-exclusive-mode-ext
                   "Represents [vkAcquireFullScreenExclusiveModeEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkAcquireFullScreenExclusiveModeEXT.html).

Args:
 - DEVICE: <a description>
 - SWAPCHAIN: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See RESULT
See SWAPCHAIN-KHR
"
                   ((device cffi:foreign-pointer) (swapchain cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (swapchain '%vk:swapchain-khr swapchain :in :handle))

(defvk-simple-fun (release-full-screen-exclusive-mode-ext
                   %vk:release-full-screen-exclusive-mode-ext
                   "Represents [vkReleaseFullScreenExclusiveModeEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkReleaseFullScreenExclusiveModeEXT.html).

Args:
 - DEVICE: <a description>
 - SWAPCHAIN: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See RESULT
See SWAPCHAIN-KHR
"
                   ((device cffi:foreign-pointer) (swapchain cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (swapchain '%vk:swapchain-khr swapchain :in :handle))

(defvk-enumerate-two-arrays-fun (enumerate-physical-device-queue-family-performance-query-counters-khr
                                 %vk:enumerate-physical-device-queue-family-performance-query-counters-khr
                                 "Represents [vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - QUEUE-FAMILY-INDEX: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PERFORMANCE-COUNTER-KHR
    PERFORMANCE-COUNTER-DESCRIPTION-KHR
    RESULT)

See PERFORMANCE-COUNTER-DESCRIPTION-KHR
See PERFORMANCE-COUNTER-KHR
See PHYSICAL-DEVICE
See RESULT
"
                                 ((physical-device cffi:foreign-pointer) (queue-family-index unsigned-byte))
                                 ()
                                 counter-count
                                 (counters counter-descriptions)
                                 nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (queue-family-index :uint32 queue-family-index :in :raw)
  (counter-count :uint32 counter-count :out)
  (counters '(:struct %vk:performance-counter-khr) counters :out :list)
  (counter-descriptions '(:struct %vk:performance-counter-description-khr) counter-descriptions :out :list))

(defvk-create-handle-fun (get-physical-device-queue-family-performance-query-passes-khr
                          %vk:get-physical-device-queue-family-performance-query-passes-khr
                          "Represents [vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>
 - PERFORMANCE-QUERY-CREATE-INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T)

See PHYSICAL-DEVICE
See QUERY-POOL-PERFORMANCE-CREATE-INFO-KHR
"
                          ((physical-device cffi:foreign-pointer) (performance-query-create-info (or vk:query-pool-performance-create-info-khr cffi:foreign-pointer)))
                          ()
                          t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (performance-query-create-info '(:struct %vk:query-pool-performance-create-info-khr) performance-query-create-info :in)
  (num-passes :uint32 num-passes :out))

(defvk-simple-fun (acquire-profiling-lock-khr
                   %vk:acquire-profiling-lock-khr
                   "Represents [vkAcquireProfilingLockKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkAcquireProfilingLockKHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See ACQUIRE-PROFILING-LOCK-INFO-KHR
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (info (or vk:acquire-profiling-lock-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:acquire-profiling-lock-info-khr) info :in))

(defvk-simple-fun (release-profiling-lock-khr
                   %vk:release-profiling-lock-khr
                   "Represents [vkReleaseProfilingLockKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkReleaseProfilingLockKHR.html).

Args:
 - DEVICE: <a description>

See DEVICE
"
                   ((device cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle))

(defvk-get-struct-fun (get-image-drm-format-modifier-properties-ext
                       %vk:get-image-drm-format-modifier-properties-ext
                       "Represents [vkGetImageDrmFormatModifierPropertiesEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetImageDrmFormatModifierPropertiesEXT.html).

Args:
 - DEVICE: <a description>
 - IMAGE: <a description>

Returns:
  (CL:VALUES
    IMAGE-DRM-FORMAT-MODIFIER-PROPERTIES-EXT
    RESULT)

See DEVICE
See IMAGE
See IMAGE-DRM-FORMAT-MODIFIER-PROPERTIES-EXT
See RESULT
"
                       ((device cffi:foreign-pointer) (image cffi:foreign-pointer))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (image '%vk:image image :in :handle)
  (properties '(:struct %vk:image-drm-format-modifier-properties-ext) properties :out))

(defvk-simple-fun (get-buffer-opaque-capture-address
                   %vk:get-buffer-opaque-capture-address
                   "Represents [vkGetBufferOpaqueCaptureAddress](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetBufferOpaqueCaptureAddress.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    UNSIGNED-BYTE)

See BUFFER-DEVICE-ADDRESS-INFO
See DEVICE
"
                   ((device cffi:foreign-pointer) (info (or vk:buffer-device-address-info cffi:foreign-pointer)))
                   ()
                  :uint64)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:buffer-device-address-info) info :in))

(defvk-simple-fun (get-buffer-opaque-capture-address-khr
                   %vk:get-buffer-opaque-capture-address-khr
                   "Represents [vkGetBufferOpaqueCaptureAddressKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetBufferOpaqueCaptureAddressKHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    UNSIGNED-BYTE)

See BUFFER-DEVICE-ADDRESS-INFO
See DEVICE
"
                   ((device cffi:foreign-pointer) (info (or vk:buffer-device-address-info cffi:foreign-pointer)))
                   ()
                  :uint64)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:buffer-device-address-info) info :in))

(defvk-simple-fun (get-buffer-device-address
                   %vk:get-buffer-device-address
                   "Represents [vkGetBufferDeviceAddress](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetBufferDeviceAddress.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    DEVICE-ADDRESS ;; (UNSIGNED-BYTE 64))

See BUFFER-DEVICE-ADDRESS-INFO
See DEVICE
See DEVICE-ADDRESS
"
                   ((device cffi:foreign-pointer) (info (or vk:buffer-device-address-info cffi:foreign-pointer)))
                   ()
                  '%vk:device-address)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:buffer-device-address-info) info :in))

(defvk-simple-fun (get-buffer-device-address-ext
                   %vk:get-buffer-device-address-ext
                   "Represents [vkGetBufferDeviceAddressEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetBufferDeviceAddressEXT.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    DEVICE-ADDRESS ;; (UNSIGNED-BYTE 64))

See BUFFER-DEVICE-ADDRESS-INFO
See DEVICE
See DEVICE-ADDRESS
"
                   ((device cffi:foreign-pointer) (info (or vk:buffer-device-address-info cffi:foreign-pointer)))
                   ()
                  '%vk:device-address
                  t)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:buffer-device-address-info) info :in))

(defvk-simple-fun (get-buffer-device-address-khr
                   %vk:get-buffer-device-address-khr
                   "Represents [vkGetBufferDeviceAddressKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetBufferDeviceAddressKHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    DEVICE-ADDRESS ;; (UNSIGNED-BYTE 64))

See BUFFER-DEVICE-ADDRESS-INFO
See DEVICE
See DEVICE-ADDRESS
"
                   ((device cffi:foreign-pointer) (info (or vk:buffer-device-address-info cffi:foreign-pointer)))
                   ()
                  '%vk:device-address)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:buffer-device-address-info) info :in))

(defvk-create-handle-fun (create-headless-surface-ext
                          %vk:create-headless-surface-ext
                          "Represents [vkCreateHeadlessSurfaceEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateHeadlessSurfaceEXT.html).

Args:
 - INSTANCE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    SURFACE-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See HEADLESS-SURFACE-CREATE-INFO-EXT
See INSTANCE
See RESULT
See SURFACE-KHR
"
                          ((instance cffi:foreign-pointer) (create-info (or vk:headless-surface-create-info-ext cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (instance '%vk:instance instance :in :handle)
  (create-info '(:struct %vk:headless-surface-create-info-ext) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (surface '%vk:surface-khr surface :out :handle))

(defvk-enumerate-fun (get-physical-device-supported-framebuffer-mixed-samples-combinations-nv
                      %vk:get-physical-device-supported-framebuffer-mixed-samples-combinations-nv
                      "Represents [vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    FRAMEBUFFER-MIXED-SAMPLES-COMBINATION-NV
    RESULT)

See FRAMEBUFFER-MIXED-SAMPLES-COMBINATION-NV
See PHYSICAL-DEVICE
See RESULT
"
                      ((physical-device cffi:foreign-pointer))
                      ()
                      combination-count
                      combinations
                      nil
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (combination-count :uint32 combination-count :out)
  (combinations '(:struct %vk:framebuffer-mixed-samples-combination-nv) combinations :out :list))

(defvk-simple-fun (initialize-performance-api-intel
                   %vk:initialize-performance-api-intel
                   "Represents [vkInitializePerformanceApiINTEL](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkInitializePerformanceApiINTEL.html).

Args:
 - DEVICE: <a description>
 - INITIALIZE-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See INITIALIZE-PERFORMANCE-API-INFO-INTEL
See RESULT
"
                   ((device cffi:foreign-pointer) (initialize-info (or vk:initialize-performance-api-info-intel cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (initialize-info '(:struct %vk:initialize-performance-api-info-intel) initialize-info :in))

(defvk-simple-fun (uninitialize-performance-api-intel
                   %vk:uninitialize-performance-api-intel
                   "Represents [vkUninitializePerformanceApiINTEL](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkUninitializePerformanceApiINTEL.html).

Args:
 - DEVICE: <a description>

See DEVICE
"
                   ((device cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle))

(defvk-simple-fun (cmd-set-performance-marker-intel
                   %vk:cmd-set-performance-marker-intel
                   "Represents [vkCmdSetPerformanceMarkerINTEL](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetPerformanceMarkerINTEL.html).

Args:
 - COMMAND-BUFFER: <a description>
 - MARKER-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See COMMAND-BUFFER
See PERFORMANCE-MARKER-INFO-INTEL
See RESULT
"
                   ((command-buffer cffi:foreign-pointer) (marker-info (or vk:performance-marker-info-intel cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (marker-info '(:struct %vk:performance-marker-info-intel) marker-info :in))

(defvk-simple-fun (cmd-set-performance-stream-marker-intel
                   %vk:cmd-set-performance-stream-marker-intel
                   "Represents [vkCmdSetPerformanceStreamMarkerINTEL](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetPerformanceStreamMarkerINTEL.html).

Args:
 - COMMAND-BUFFER: <a description>
 - MARKER-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See COMMAND-BUFFER
See PERFORMANCE-STREAM-MARKER-INFO-INTEL
See RESULT
"
                   ((command-buffer cffi:foreign-pointer) (marker-info (or vk:performance-stream-marker-info-intel cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (marker-info '(:struct %vk:performance-stream-marker-info-intel) marker-info :in))

(defvk-simple-fun (cmd-set-performance-override-intel
                   %vk:cmd-set-performance-override-intel
                   "Represents [vkCmdSetPerformanceOverrideINTEL](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetPerformanceOverrideINTEL.html).

Args:
 - COMMAND-BUFFER: <a description>
 - OVERRIDE-INFO: <a description>

Returns:
  (CL:VALUES
    RESULT)

See COMMAND-BUFFER
See PERFORMANCE-OVERRIDE-INFO-INTEL
See RESULT
"
                   ((command-buffer cffi:foreign-pointer) (override-info (or vk:performance-override-info-intel cffi:foreign-pointer)))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (override-info '(:struct %vk:performance-override-info-intel) override-info :in))

(defvk-create-handle-fun (acquire-performance-configuration-intel
                          %vk:acquire-performance-configuration-intel
                          "Represents [vkAcquirePerformanceConfigurationINTEL](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkAcquirePerformanceConfigurationINTEL.html).

Args:
 - DEVICE: <a description>
 - ACQUIRE-INFO: <a description>

Returns:
  (CL:VALUES
    PERFORMANCE-CONFIGURATION-INTEL
    RESULT)

See DEVICE
See PERFORMANCE-CONFIGURATION-ACQUIRE-INFO-INTEL
See PERFORMANCE-CONFIGURATION-INTEL
See RESULT
"
                          ((device cffi:foreign-pointer) (acquire-info (or vk:performance-configuration-acquire-info-intel cffi:foreign-pointer)))
                          ()
                          nil
                          t)
  (device '%vk:device device :in :handle)
  (acquire-info '(:struct %vk:performance-configuration-acquire-info-intel) acquire-info :in)
  (configuration '%vk:performance-configuration-intel configuration :out :handle))

(defvk-simple-fun (release-performance-configuration-intel
                   %vk:release-performance-configuration-intel
                   "Represents [vkReleasePerformanceConfigurationINTEL](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkReleasePerformanceConfigurationINTEL.html).

Args:
 - DEVICE: <a description>
 - CONFIGURATION: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See PERFORMANCE-CONFIGURATION-INTEL
See RESULT
"
                   ((device cffi:foreign-pointer))
                   (((configuration (cffi:null-pointer)) cffi:foreign-pointer))
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (configuration '%vk:performance-configuration-intel configuration :in :handle :optional))

(defvk-simple-fun (queue-set-performance-configuration-intel
                   %vk:queue-set-performance-configuration-intel
                   "Represents [vkQueueSetPerformanceConfigurationINTEL](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkQueueSetPerformanceConfigurationINTEL.html).

Args:
 - QUEUE: <a description>
 - CONFIGURATION: <a description>

Returns:
  (CL:VALUES
    RESULT)

See PERFORMANCE-CONFIGURATION-INTEL
See QUEUE
See RESULT
"
                   ((queue cffi:foreign-pointer) (configuration cffi:foreign-pointer))
                   ()
                  nil
                  t)
  (queue '%vk:queue queue :in :handle)
  (configuration '%vk:performance-configuration-intel configuration :in :handle))

(defvk-get-struct-fun (get-performance-parameter-intel
                       %vk:get-performance-parameter-intel
                       "Represents [vkGetPerformanceParameterINTEL](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPerformanceParameterINTEL.html).

Args:
 - DEVICE: <a description>
 - PARAMETER: <a description>

Returns:
  (CL:VALUES
    PERFORMANCE-VALUE-INTEL
    RESULT)

See DEVICE
See PERFORMANCE-PARAMETER-TYPE-INTEL
See PERFORMANCE-VALUE-INTEL
See RESULT
"
                       ((device cffi:foreign-pointer) (parameter keyword))
                       ()
                       t)
  (device '%vk:device device :in :handle)
  (parameter '%vk:performance-parameter-type-intel parameter :in :raw)
  (value '(:struct %vk:performance-value-intel) value :out))

(defvk-simple-fun (get-device-memory-opaque-capture-address
                   %vk:get-device-memory-opaque-capture-address
                   "Represents [vkGetDeviceMemoryOpaqueCaptureAddress](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceMemoryOpaqueCaptureAddress.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    UNSIGNED-BYTE)

See DEVICE
See DEVICE-MEMORY-OPAQUE-CAPTURE-ADDRESS-INFO
"
                   ((device cffi:foreign-pointer) (info (or vk:device-memory-opaque-capture-address-info cffi:foreign-pointer)))
                   ()
                  :uint64)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:device-memory-opaque-capture-address-info) info :in))

(defvk-simple-fun (get-device-memory-opaque-capture-address-khr
                   %vk:get-device-memory-opaque-capture-address-khr
                   "Represents [vkGetDeviceMemoryOpaqueCaptureAddressKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeviceMemoryOpaqueCaptureAddressKHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    UNSIGNED-BYTE)

See DEVICE
See DEVICE-MEMORY-OPAQUE-CAPTURE-ADDRESS-INFO
"
                   ((device cffi:foreign-pointer) (info (or vk:device-memory-opaque-capture-address-info cffi:foreign-pointer)))
                   ()
                  :uint64)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:device-memory-opaque-capture-address-info) info :in))

(defvk-enumerate-fun (get-pipeline-executable-properties-khr
                      %vk:get-pipeline-executable-properties-khr
                      "Represents [vkGetPipelineExecutablePropertiesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPipelineExecutablePropertiesKHR.html).

Args:
 - DEVICE: <a description>
 - PIPELINE-INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PIPELINE-EXECUTABLE-PROPERTIES-KHR
    RESULT)

See DEVICE
See PIPELINE-EXECUTABLE-PROPERTIES-KHR
See PIPELINE-INFO-KHR
See RESULT
"
                      ((device cffi:foreign-pointer) (pipeline-info (or vk:pipeline-info-khr cffi:foreign-pointer)))
                      ()
                      executable-count
                      properties
                      nil)
  (device '%vk:device device :in :handle)
  (pipeline-info '(:struct %vk:pipeline-info-khr) pipeline-info :in)
  (executable-count :uint32 executable-count :out)
  (properties '(:struct %vk:pipeline-executable-properties-khr) properties :out :list))

(defvk-enumerate-fun (get-pipeline-executable-statistics-khr
                      %vk:get-pipeline-executable-statistics-khr
                      "Represents [vkGetPipelineExecutableStatisticsKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPipelineExecutableStatisticsKHR.html).

Args:
 - DEVICE: <a description>
 - EXECUTABLE-INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PIPELINE-EXECUTABLE-STATISTIC-KHR
    RESULT)

See DEVICE
See PIPELINE-EXECUTABLE-INFO-KHR
See PIPELINE-EXECUTABLE-STATISTIC-KHR
See RESULT
"
                      ((device cffi:foreign-pointer) (executable-info (or vk:pipeline-executable-info-khr cffi:foreign-pointer)))
                      ()
                      statistic-count
                      statistics
                      nil)
  (device '%vk:device device :in :handle)
  (executable-info '(:struct %vk:pipeline-executable-info-khr) executable-info :in)
  (statistic-count :uint32 statistic-count :out)
  (statistics '(:struct %vk:pipeline-executable-statistic-khr) statistics :out :list))

(defvk-enumerate-fun (get-pipeline-executable-internal-representations-khr
                      %vk:get-pipeline-executable-internal-representations-khr
                      "Represents [vkGetPipelineExecutableInternalRepresentationsKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPipelineExecutableInternalRepresentationsKHR.html).

Args:
 - DEVICE: <a description>
 - EXECUTABLE-INFO: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PIPELINE-EXECUTABLE-INTERNAL-REPRESENTATION-KHR
    RESULT)

See DEVICE
See PIPELINE-EXECUTABLE-INFO-KHR
See PIPELINE-EXECUTABLE-INTERNAL-REPRESENTATION-KHR
See RESULT
"
                      ((device cffi:foreign-pointer) (executable-info (or vk:pipeline-executable-info-khr cffi:foreign-pointer)))
                      ()
                      internal-representation-count
                      internal-representations
                      nil)
  (device '%vk:device device :in :handle)
  (executable-info '(:struct %vk:pipeline-executable-info-khr) executable-info :in)
  (internal-representation-count :uint32 internal-representation-count :out)
  (internal-representations '(:struct %vk:pipeline-executable-internal-representation-khr) internal-representations :out :list))

(defvk-simple-fun (cmd-set-line-stipple-ext
                   %vk:cmd-set-line-stipple-ext
                   "Represents [vkCmdSetLineStippleEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetLineStippleEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - LINE-STIPPLE-FACTOR: <a description>
 - LINE-STIPPLE-PATTERN: <a description>

See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (line-stipple-factor unsigned-byte) (line-stipple-pattern unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (line-stipple-factor :uint32 line-stipple-factor :in :raw)
  (line-stipple-pattern :uint16 line-stipple-pattern :in :raw))

(defvk-enumerate-fun (get-physical-device-tool-properties-ext
                      %vk:get-physical-device-tool-properties-ext
                      "Represents [vkGetPhysicalDeviceToolPropertiesEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceToolPropertiesEXT.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PHYSICAL-DEVICE-TOOL-PROPERTIES-EXT
    RESULT)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-TOOL-PROPERTIES-EXT
See RESULT
"
                      ((physical-device cffi:foreign-pointer))
                      ()
                      tool-count
                      tool-properties
                      nil
                      t)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (tool-count :uint32 tool-count :out)
  (tool-properties '(:struct %vk:physical-device-tool-properties-ext) tool-properties :out :list))

(defvk-create-handle-fun (create-acceleration-structure-khr
                          %vk:create-acceleration-structure-khr
                          "Represents [vkCreateAccelerationStructureKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateAccelerationStructureKHR.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    ACCELERATION-STRUCTURE-KHR
    RESULT)

See ACCELERATION-STRUCTURE-CREATE-INFO-KHR
See ACCELERATION-STRUCTURE-KHR
See ALLOCATION-CALLBACKS
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:acceleration-structure-create-info-khr cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:acceleration-structure-create-info-khr) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (acceleration-structure '%vk:acceleration-structure-khr acceleration-structure :out :handle))

(defvk-simple-fun (cmd-build-acceleration-structures-khr
                   %vk:cmd-build-acceleration-structures-khr
                   "Represents [vkCmdBuildAccelerationStructuresKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBuildAccelerationStructuresKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - INFOS: <a description>
 - P-BUILD-RANGE-INFOS: <a description>

See ACCELERATION-STRUCTURE-BUILD-GEOMETRY-INFO-KHR
See ACCELERATION-STRUCTURE-BUILD-RANGE-INFO-KHR
See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (infos list) (p-build-range-infos list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (info-count :uint32 (length p-build-range-infos) :in :raw)
  (infos '(:struct %vk:acceleration-structure-build-geometry-info-khr) infos :in :list)
  (p-build-range-infos '(:struct %vk:acceleration-structure-build-range-info-khr) p-build-range-infos :in :list))

(defvk-simple-fun (cmd-build-acceleration-structures-indirect-khr
                   %vk:cmd-build-acceleration-structures-indirect-khr
                   "Represents [vkCmdBuildAccelerationStructuresIndirectKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBuildAccelerationStructuresIndirectKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - INFOS: <a description>
 - INDIRECT-DEVICE-ADDRESSES: <a description>
 - INDIRECT-STRIDES: <a description>
 - P-MAX-PRIMITIVE-COUNTS: <a description>

See ACCELERATION-STRUCTURE-BUILD-GEOMETRY-INFO-KHR
See COMMAND-BUFFER
See DEVICE-ADDRESS
"
                   ((command-buffer cffi:foreign-pointer) (infos list) (indirect-device-addresses list) (indirect-strides list) (p-max-primitive-counts list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (info-count :uint32 (length p-max-primitive-counts) :in :raw)
  (infos '(:struct %vk:acceleration-structure-build-geometry-info-khr) infos :in :list)
  (indirect-device-addresses '%vk:device-address indirect-device-addresses :in :list)
  (indirect-strides :uint32 indirect-strides :in :list)
  (p-max-primitive-counts :uint32 p-max-primitive-counts :in :list))

(defvk-simple-fun (build-acceleration-structures-khr
                   %vk:build-acceleration-structures-khr
                   "Represents [vkBuildAccelerationStructuresKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkBuildAccelerationStructuresKHR.html).

Args:
 - DEVICE: <a description>
 - INFOS: <a description>
 - P-BUILD-RANGE-INFOS: <a description>
 - DEFERRED-OPERATION: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See ACCELERATION-STRUCTURE-BUILD-GEOMETRY-INFO-KHR
See ACCELERATION-STRUCTURE-BUILD-RANGE-INFO-KHR
See DEFERRED-OPERATION-KHR
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (infos list) (p-build-range-infos list))
                   (((deferred-operation (cffi:null-pointer)) cffi:foreign-pointer))
                  nil)
  (device '%vk:device device :in :handle)
  (deferred-operation '%vk:deferred-operation-khr deferred-operation :in :handle :optional)
  (info-count :uint32 (length p-build-range-infos) :in :raw)
  (infos '(:struct %vk:acceleration-structure-build-geometry-info-khr) infos :in :list)
  (p-build-range-infos '(:struct %vk:acceleration-structure-build-range-info-khr) p-build-range-infos :in :list))

(defvk-simple-fun (get-acceleration-structure-device-address-khr
                   %vk:get-acceleration-structure-device-address-khr
                   "Represents [vkGetAccelerationStructureDeviceAddressKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetAccelerationStructureDeviceAddressKHR.html).

Args:
 - DEVICE: <a description>
 - INFO: <a description>

Returns:
  (CL:VALUES
    DEVICE-ADDRESS ;; (UNSIGNED-BYTE 64))

See ACCELERATION-STRUCTURE-DEVICE-ADDRESS-INFO-KHR
See DEVICE
See DEVICE-ADDRESS
"
                   ((device cffi:foreign-pointer) (info (or vk:acceleration-structure-device-address-info-khr cffi:foreign-pointer)))
                   ()
                  '%vk:device-address)
  (device '%vk:device device :in :handle)
  (info '(:struct %vk:acceleration-structure-device-address-info-khr) info :in))

(defvk-create-handle-fun (create-deferred-operation-khr
                          %vk:create-deferred-operation-khr
                          "Represents [vkCreateDeferredOperationKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreateDeferredOperationKHR.html).

Args:
 - DEVICE: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    DEFERRED-OPERATION-KHR
    RESULT)

See ALLOCATION-CALLBACKS
See DEFERRED-OPERATION-KHR
See DEVICE
See RESULT
"
                          ((device cffi:foreign-pointer))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil)
  (device '%vk:device device :in :handle)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (deferred-operation '%vk:deferred-operation-khr deferred-operation :out :handle))

(defvk-simple-fun (destroy-deferred-operation-khr
                   %vk:destroy-deferred-operation-khr
                   "Represents [vkDestroyDeferredOperationKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyDeferredOperationKHR.html).

Args:
 - DEVICE: <a description>
 - OPERATION: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEFERRED-OPERATION-KHR
See DEVICE
"
                   ((device cffi:foreign-pointer))
                   (((operation (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil)
  (device '%vk:device device :in :handle)
  (operation '%vk:deferred-operation-khr operation :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (get-deferred-operation-max-concurrency-khr
                   %vk:get-deferred-operation-max-concurrency-khr
                   "Represents [vkGetDeferredOperationMaxConcurrencyKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeferredOperationMaxConcurrencyKHR.html).

Args:
 - DEVICE: <a description>
 - OPERATION: <a description>

Returns:
  (CL:VALUES
    UNSIGNED-BYTE)

See DEFERRED-OPERATION-KHR
See DEVICE
"
                   ((device cffi:foreign-pointer) (operation cffi:foreign-pointer))
                   ()
                  :uint32)
  (device '%vk:device device :in :handle)
  (operation '%vk:deferred-operation-khr operation :in :handle))

(defvk-simple-fun (get-deferred-operation-result-khr
                   %vk:get-deferred-operation-result-khr
                   "Represents [vkGetDeferredOperationResultKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetDeferredOperationResultKHR.html).

Args:
 - DEVICE: <a description>
 - OPERATION: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEFERRED-OPERATION-KHR
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (operation cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (operation '%vk:deferred-operation-khr operation :in :handle))

(defvk-simple-fun (deferred-operation-join-khr
                   %vk:deferred-operation-join-khr
                   "Represents [vkDeferredOperationJoinKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDeferredOperationJoinKHR.html).

Args:
 - DEVICE: <a description>
 - OPERATION: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEFERRED-OPERATION-KHR
See DEVICE
See RESULT
"
                   ((device cffi:foreign-pointer) (operation cffi:foreign-pointer))
                   ()
                  nil)
  (device '%vk:device device :in :handle)
  (operation '%vk:deferred-operation-khr operation :in :handle))

(defvk-simple-fun (cmd-set-cull-mode-ext
                   %vk:cmd-set-cull-mode-ext
                   "Represents [vkCmdSetCullModeEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetCullModeEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - CULL-MODE: (optional) <a description>

See COMMAND-BUFFER
See CULL-MODE-FLAGS
"
                   ((command-buffer cffi:foreign-pointer))
                   (((cull-mode nil) (or unsigned-byte list)))
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (cull-mode '%vk:cull-mode-flags cull-mode :in :raw :optional))

(defvk-simple-fun (cmd-set-front-face-ext
                   %vk:cmd-set-front-face-ext
                   "Represents [vkCmdSetFrontFaceEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetFrontFaceEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FRONT-FACE: <a description>

See COMMAND-BUFFER
See FRONT-FACE
"
                   ((command-buffer cffi:foreign-pointer) (front-face keyword))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (front-face '%vk:front-face front-face :in :raw))

(defvk-simple-fun (cmd-set-primitive-topology-ext
                   %vk:cmd-set-primitive-topology-ext
                   "Represents [vkCmdSetPrimitiveTopologyEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetPrimitiveTopologyEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - PRIMITIVE-TOPOLOGY: <a description>

See COMMAND-BUFFER
See PRIMITIVE-TOPOLOGY
"
                   ((command-buffer cffi:foreign-pointer) (primitive-topology keyword))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (primitive-topology '%vk:primitive-topology primitive-topology :in :raw))

(defvk-simple-fun (cmd-set-viewport-with-count-ext
                   %vk:cmd-set-viewport-with-count-ext
                   "Represents [vkCmdSetViewportWithCountEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetViewportWithCountEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - VIEWPORTS: <a description>

See COMMAND-BUFFER
See VIEWPORT
"
                   ((command-buffer cffi:foreign-pointer) (viewports list))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (viewport-count :uint32 (length viewports) :in :raw)
  (viewports '(:struct %vk:viewport) viewports :in :list))

(defvk-simple-fun (cmd-set-scissor-with-count-ext
                   %vk:cmd-set-scissor-with-count-ext
                   "Represents [vkCmdSetScissorWithCountEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetScissorWithCountEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SCISSORS: <a description>

See COMMAND-BUFFER
See RECT-2D
"
                   ((command-buffer cffi:foreign-pointer) (scissors list))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (scissor-count :uint32 (length scissors) :in :raw)
  (scissors '(:struct %vk:rect-2d) scissors :in :list))

(defvk-simple-fun (cmd-bind-vertex-buffers-2-ext
                   %vk:cmd-bind-vertex-buffers-2-ext
                   "Represents [vkCmdBindVertexBuffers2EXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBindVertexBuffers2EXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FIRST-BINDING: <a description>
 - BUFFERS: <a description>
 - OFFSETS: <a description>
 - SIZES: (optional) <a description>
 - STRIDES: (optional) <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
"
                   ((command-buffer cffi:foreign-pointer) (first-binding unsigned-byte) (buffers list) (offsets list))
                   (((sizes nil) list) ((strides nil) list))
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (first-binding :uint32 first-binding :in :raw)
  (binding-count :uint32 (length strides) :in :raw)
  (buffers '%vk:buffer buffers :in :handle :list)
  (offsets '%vk:device-size offsets :in :list)
  (sizes '%vk:device-size sizes :in :list :optional)
  (strides '%vk:device-size strides :in :list :optional))

(defvk-simple-fun (cmd-set-depth-test-enable-ext
                   %vk:cmd-set-depth-test-enable-ext
                   "Represents [vkCmdSetDepthTestEnableEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetDepthTestEnableEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DEPTH-TEST-ENABLE: <a description>

See BOOL32
See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (depth-test-enable boolean))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (depth-test-enable '%vk:bool32 depth-test-enable :in :raw))

(defvk-simple-fun (cmd-set-depth-write-enable-ext
                   %vk:cmd-set-depth-write-enable-ext
                   "Represents [vkCmdSetDepthWriteEnableEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetDepthWriteEnableEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DEPTH-WRITE-ENABLE: <a description>

See BOOL32
See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (depth-write-enable boolean))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (depth-write-enable '%vk:bool32 depth-write-enable :in :raw))

(defvk-simple-fun (cmd-set-depth-compare-op-ext
                   %vk:cmd-set-depth-compare-op-ext
                   "Represents [vkCmdSetDepthCompareOpEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetDepthCompareOpEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DEPTH-COMPARE-OP: <a description>

See COMMAND-BUFFER
See COMPARE-OP
"
                   ((command-buffer cffi:foreign-pointer) (depth-compare-op keyword))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (depth-compare-op '%vk:compare-op depth-compare-op :in :raw))

(defvk-simple-fun (cmd-set-depth-bounds-test-enable-ext
                   %vk:cmd-set-depth-bounds-test-enable-ext
                   "Represents [vkCmdSetDepthBoundsTestEnableEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetDepthBoundsTestEnableEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DEPTH-BOUNDS-TEST-ENABLE: <a description>

See BOOL32
See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (depth-bounds-test-enable boolean))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (depth-bounds-test-enable '%vk:bool32 depth-bounds-test-enable :in :raw))

(defvk-simple-fun (cmd-set-stencil-test-enable-ext
                   %vk:cmd-set-stencil-test-enable-ext
                   "Represents [vkCmdSetStencilTestEnableEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetStencilTestEnableEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - STENCIL-TEST-ENABLE: <a description>

See BOOL32
See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (stencil-test-enable boolean))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (stencil-test-enable '%vk:bool32 stencil-test-enable :in :raw))

(defvk-simple-fun (cmd-set-stencil-op-ext
                   %vk:cmd-set-stencil-op-ext
                   "Represents [vkCmdSetStencilOpEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetStencilOpEXT.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FACE-MASK: <a description>
 - FAIL-OP: <a description>
 - PASS-OP: <a description>
 - DEPTH-FAIL-OP: <a description>
 - COMPARE-OP: <a description>

See COMMAND-BUFFER
See COMPARE-OP
See STENCIL-FACE-FLAGS
See STENCIL-OP
"
                   ((command-buffer cffi:foreign-pointer) (face-mask (or unsigned-byte list)) (fail-op keyword) (pass-op keyword) (depth-fail-op keyword) (compare-op keyword))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (face-mask '%vk:stencil-face-flags face-mask :in :raw)
  (fail-op '%vk:stencil-op fail-op :in :raw)
  (pass-op '%vk:stencil-op pass-op :in :raw)
  (depth-fail-op '%vk:stencil-op depth-fail-op :in :raw)
  (compare-op '%vk:compare-op compare-op :in :raw))

(defvk-create-handle-fun (create-private-data-slot-ext
                          %vk:create-private-data-slot-ext
                          "Represents [vkCreatePrivateDataSlotEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCreatePrivateDataSlotEXT.html).

Args:
 - DEVICE: <a description>
 - CREATE-INFO: <a description>
 - ALLOCATOR: (optional) <a description>

Returns:
  (CL:VALUES
    PRIVATE-DATA-SLOT-EXT
    RESULT)

See ALLOCATION-CALLBACKS
See DEVICE
See PRIVATE-DATA-SLOT-CREATE-INFO-EXT
See PRIVATE-DATA-SLOT-EXT
See RESULT
"
                          ((device cffi:foreign-pointer) (create-info (or vk:private-data-slot-create-info-ext cffi:foreign-pointer)))
                          (((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                          nil
                          t)
  (device '%vk:device device :in :handle)
  (create-info '(:struct %vk:private-data-slot-create-info-ext) create-info :in)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional)
  (private-data-slot '%vk:private-data-slot-ext private-data-slot :out :handle))

(defvk-simple-fun (destroy-private-data-slot-ext
                   %vk:destroy-private-data-slot-ext
                   "Represents [vkDestroyPrivateDataSlotEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkDestroyPrivateDataSlotEXT.html).

Args:
 - DEVICE: <a description>
 - PRIVATE-DATA-SLOT: (optional) <a description>
 - ALLOCATOR: (optional) <a description>

See ALLOCATION-CALLBACKS
See DEVICE
See PRIVATE-DATA-SLOT-EXT
"
                   ((device cffi:foreign-pointer))
                   (((private-data-slot (cffi:null-pointer)) cffi:foreign-pointer) ((allocator *default-allocator*) (or vk:allocation-callbacks cffi:foreign-pointer)))
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (private-data-slot '%vk:private-data-slot-ext private-data-slot :in :handle :optional)
  (allocator '(:struct %vk:allocation-callbacks) allocator :in :optional))

(defvk-simple-fun (set-private-data-ext
                   %vk:set-private-data-ext
                   "Represents [vkSetPrivateDataEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkSetPrivateDataEXT.html).

Args:
 - DEVICE: <a description>
 - OBJECT-TYPE: <a description>
 - OBJECT-HANDLE: <a description>
 - PRIVATE-DATA-SLOT: <a description>
 - DATA: <a description>

Returns:
  (CL:VALUES
    RESULT)

See DEVICE
See OBJECT-TYPE
See PRIVATE-DATA-SLOT-EXT
See RESULT
"
                   ((device cffi:foreign-pointer) (object-type keyword) (object-handle unsigned-byte) (private-data-slot cffi:foreign-pointer) (data unsigned-byte))
                   ()
                  nil
                  t)
  (device '%vk:device device :in :handle)
  (object-type '%vk:object-type object-type :in :raw)
  (object-handle :uint64 object-handle :in :raw)
  (private-data-slot '%vk:private-data-slot-ext private-data-slot :in :handle)
  (data :uint64 data :in :raw))

(defvk-create-handle-fun (get-private-data-ext
                          %vk:get-private-data-ext
                          "Represents [vkGetPrivateDataEXT](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPrivateDataEXT.html).

Args:
 - DEVICE: <a description>
 - OBJECT-TYPE: <a description>
 - OBJECT-HANDLE: <a description>
 - PRIVATE-DATA-SLOT: <a description>

Returns:
  (CL:VALUES
    UINT-6-4_T)

See DEVICE
See OBJECT-TYPE
See PRIVATE-DATA-SLOT-EXT
"
                          ((device cffi:foreign-pointer) (object-type keyword) (object-handle unsigned-byte) (private-data-slot cffi:foreign-pointer))
                          ()
                          t
                          t)
  (device '%vk:device device :in :handle)
  (object-type '%vk:object-type object-type :in :raw)
  (object-handle :uint64 object-handle :in :raw)
  (private-data-slot '%vk:private-data-slot-ext private-data-slot :in :handle)
  (data :uint64 data :out))

(defvk-simple-fun (cmd-copy-buffer-2-khr
                   %vk:cmd-copy-buffer-2-khr
                   "Represents [vkCmdCopyBuffer2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyBuffer2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - COPY-BUFFER-INFO: <a description>

See COMMAND-BUFFER
See COPY-BUFFER-INFO-2-KHR
"
                   ((command-buffer cffi:foreign-pointer) (copy-buffer-info (or vk:copy-buffer-info-2-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (copy-buffer-info '(:struct %vk:copy-buffer-info-2-khr) copy-buffer-info :in))

(defvk-simple-fun (cmd-copy-image-2-khr
                   %vk:cmd-copy-image-2-khr
                   "Represents [vkCmdCopyImage2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyImage2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - COPY-IMAGE-INFO: <a description>

See COMMAND-BUFFER
See COPY-IMAGE-INFO-2-KHR
"
                   ((command-buffer cffi:foreign-pointer) (copy-image-info (or vk:copy-image-info-2-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (copy-image-info '(:struct %vk:copy-image-info-2-khr) copy-image-info :in))

(defvk-simple-fun (cmd-blit-image-2-khr
                   %vk:cmd-blit-image-2-khr
                   "Represents [vkCmdBlitImage2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdBlitImage2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - BLIT-IMAGE-INFO: <a description>

See BLIT-IMAGE-INFO-2-KHR
See COMMAND-BUFFER
"
                   ((command-buffer cffi:foreign-pointer) (blit-image-info (or vk:blit-image-info-2-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (blit-image-info '(:struct %vk:blit-image-info-2-khr) blit-image-info :in))

(defvk-simple-fun (cmd-copy-buffer-to-image-2-khr
                   %vk:cmd-copy-buffer-to-image-2-khr
                   "Represents [vkCmdCopyBufferToImage2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyBufferToImage2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - COPY-BUFFER-TO-IMAGE-INFO: <a description>

See COMMAND-BUFFER
See COPY-BUFFER-TO-IMAGE-INFO-2-KHR
"
                   ((command-buffer cffi:foreign-pointer) (copy-buffer-to-image-info (or vk:copy-buffer-to-image-info-2-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (copy-buffer-to-image-info '(:struct %vk:copy-buffer-to-image-info-2-khr) copy-buffer-to-image-info :in))

(defvk-simple-fun (cmd-copy-image-to-buffer-2-khr
                   %vk:cmd-copy-image-to-buffer-2-khr
                   "Represents [vkCmdCopyImageToBuffer2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdCopyImageToBuffer2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - COPY-IMAGE-TO-BUFFER-INFO: <a description>

See COMMAND-BUFFER
See COPY-IMAGE-TO-BUFFER-INFO-2-KHR
"
                   ((command-buffer cffi:foreign-pointer) (copy-image-to-buffer-info (or vk:copy-image-to-buffer-info-2-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (copy-image-to-buffer-info '(:struct %vk:copy-image-to-buffer-info-2-khr) copy-image-to-buffer-info :in))

(defvk-simple-fun (cmd-resolve-image-2-khr
                   %vk:cmd-resolve-image-2-khr
                   "Represents [vkCmdResolveImage2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdResolveImage2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - RESOLVE-IMAGE-INFO: <a description>

See COMMAND-BUFFER
See RESOLVE-IMAGE-INFO-2-KHR
"
                   ((command-buffer cffi:foreign-pointer) (resolve-image-info (or vk:resolve-image-info-2-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (resolve-image-info '(:struct %vk:resolve-image-info-2-khr) resolve-image-info :in))

(defvk-simple-fun (cmd-set-fragment-shading-rate-khr
                   %vk:cmd-set-fragment-shading-rate-khr
                   "Represents [vkCmdSetFragmentShadingRateKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetFragmentShadingRateKHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - FRAGMENT-SIZE: <a description>
 - COMBINER-OPS: <a description>

See COMMAND-BUFFER
See EXTENT-2D
See FRAGMENT-SHADING-RATE-COMBINER-OP-KHR
"
                   ((command-buffer cffi:foreign-pointer) (fragment-size (or vk:extent-2d cffi:foreign-pointer)) (combiner-ops keyword))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (fragment-size '(:struct %vk:extent-2d) fragment-size :in)
  (combiner-ops '%vk:fragment-shading-rate-combiner-op-khr combiner-ops :in :raw))

(defvk-enumerate-fun (get-physical-device-fragment-shading-rates-khr
                      %vk:get-physical-device-fragment-shading-rates-khr
                      "Represents [vkGetPhysicalDeviceFragmentShadingRatesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetPhysicalDeviceFragmentShadingRatesKHR.html).

Args:
 - PHYSICAL-DEVICE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    PHYSICAL-DEVICE-FRAGMENT-SHADING-RATE-KHR
    RESULT)

See PHYSICAL-DEVICE
See PHYSICAL-DEVICE-FRAGMENT-SHADING-RATE-KHR
See RESULT
"
                      ((physical-device cffi:foreign-pointer))
                      ()
                      fragment-shading-rate-count
                      fragment-shading-rates
                      nil)
  (physical-device '%vk:physical-device physical-device :in :handle)
  (fragment-shading-rate-count :uint32 fragment-shading-rate-count :out)
  (fragment-shading-rates '(:struct %vk:physical-device-fragment-shading-rate-khr) fragment-shading-rates :out :list))

(defvk-simple-fun (cmd-set-fragment-shading-rate-enum-nv
                   %vk:cmd-set-fragment-shading-rate-enum-nv
                   "Represents [vkCmdSetFragmentShadingRateEnumNV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetFragmentShadingRateEnumNV.html).

Args:
 - COMMAND-BUFFER: <a description>
 - SHADING-RATE: <a description>
 - COMBINER-OPS: <a description>

See COMMAND-BUFFER
See FRAGMENT-SHADING-RATE-COMBINER-OP-KHR
See FRAGMENT-SHADING-RATE-NV
"
                   ((command-buffer cffi:foreign-pointer) (shading-rate keyword) (combiner-ops keyword))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (shading-rate '%vk:fragment-shading-rate-nv shading-rate :in :raw)
  (combiner-ops '%vk:fragment-shading-rate-combiner-op-khr combiner-ops :in :raw))

(defvk-get-struct-fun (get-acceleration-structure-build-sizes-khr
                       %vk:get-acceleration-structure-build-sizes-khr
                       "Represents [vkGetAccelerationStructureBuildSizesKHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetAccelerationStructureBuildSizesKHR.html).

Args:
 - DEVICE: <a description>
 - BUILD-TYPE: <a description>
 - BUILD-INFO: <a description>
 - MAX-PRIMITIVE-COUNTS: (optional) <a description>

Returns:
  (CL:VALUES
    ACCELERATION-STRUCTURE-BUILD-SIZES-INFO-KHR)

See ACCELERATION-STRUCTURE-BUILD-GEOMETRY-INFO-KHR
See ACCELERATION-STRUCTURE-BUILD-SIZES-INFO-KHR
See ACCELERATION-STRUCTURE-BUILD-TYPE-KHR
See DEVICE
"
                       ((device cffi:foreign-pointer) (build-type keyword) (build-info (or vk:acceleration-structure-build-geometry-info-khr cffi:foreign-pointer)))
                       (((max-primitive-counts nil) list)))
  (device '%vk:device device :in :handle)
  (build-type '%vk:acceleration-structure-build-type-khr build-type :in :raw)
  (build-info '(:struct %vk:acceleration-structure-build-geometry-info-khr) build-info :in)
  (max-primitive-counts :uint32 max-primitive-counts :in :list :optional)
  (size-info '(:struct %vk:acceleration-structure-build-sizes-info-khr) size-info :out))

(defvk-simple-fun (cmd-set-event-2-khr
                   %vk:cmd-set-event-2-khr
                   "Represents [vkCmdSetEvent2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdSetEvent2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - EVENT: <a description>
 - DEPENDENCY-INFO: <a description>

See COMMAND-BUFFER
See DEPENDENCY-INFO-KHR
See EVENT
"
                   ((command-buffer cffi:foreign-pointer) (event cffi:foreign-pointer) (dependency-info (or vk:dependency-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (event '%vk:event event :in :handle)
  (dependency-info '(:struct %vk:dependency-info-khr) dependency-info :in))

(defvk-simple-fun (cmd-reset-event-2-khr
                   %vk:cmd-reset-event-2-khr
                   "Represents [vkCmdResetEvent2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdResetEvent2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - EVENT: <a description>
 - STAGE-MASK: <a description>

See COMMAND-BUFFER
See EVENT
See PIPELINE-STAGE-FLAGS-2-KHR
"
                   ((command-buffer cffi:foreign-pointer) (event cffi:foreign-pointer) (stage-mask (or unsigned-byte list)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (event '%vk:event event :in :handle)
  (stage-mask '%vk:pipeline-stage-flags-2-khr stage-mask :in :raw))

(defvk-simple-fun (cmd-wait-events-2-khr
                   %vk:cmd-wait-events-2-khr
                   "Represents [vkCmdWaitEvents2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdWaitEvents2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - EVENTS: <a description>
 - DEPENDENCY-INFOS: <a description>

See COMMAND-BUFFER
See DEPENDENCY-INFO-KHR
See EVENT
"
                   ((command-buffer cffi:foreign-pointer) (events list) (dependency-infos list))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (event-count :uint32 (length dependency-infos) :in :raw)
  (events '%vk:event events :in :handle :list)
  (dependency-infos '(:struct %vk:dependency-info-khr) dependency-infos :in :list))

(defvk-simple-fun (cmd-pipeline-barrier-2-khr
                   %vk:cmd-pipeline-barrier-2-khr
                   "Represents [vkCmdPipelineBarrier2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdPipelineBarrier2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - DEPENDENCY-INFO: <a description>

See COMMAND-BUFFER
See DEPENDENCY-INFO-KHR
"
                   ((command-buffer cffi:foreign-pointer) (dependency-info (or vk:dependency-info-khr cffi:foreign-pointer)))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (dependency-info '(:struct %vk:dependency-info-khr) dependency-info :in))

(defvk-simple-fun (queue-submit-2-khr
                   %vk:queue-submit-2-khr
                   "Represents [vkQueueSubmit2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkQueueSubmit2KHR.html).

Args:
 - QUEUE: <a description>
 - SUBMITS: <a description>
 - FENCE: (optional) <a description>

Returns:
  (CL:VALUES
    RESULT)

See FENCE
See QUEUE
See RESULT
See SUBMIT-INFO-2-KHR
"
                   ((queue cffi:foreign-pointer) (submits list))
                   (((fence (cffi:null-pointer)) cffi:foreign-pointer))
                  nil)
  (queue '%vk:queue queue :in :handle)
  (submit-count :uint32 (length submits) :in :raw)
  (submits '(:struct %vk:submit-info-2-khr) submits :in :list)
  (fence '%vk:fence fence :in :handle :optional))

(defvk-simple-fun (cmd-write-timestamp-2-khr
                   %vk:cmd-write-timestamp-2-khr
                   "Represents [vkCmdWriteTimestamp2KHR](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdWriteTimestamp2KHR.html).

Args:
 - COMMAND-BUFFER: <a description>
 - STAGE: <a description>
 - QUERY-POOL: <a description>
 - QUERY: <a description>

See COMMAND-BUFFER
See PIPELINE-STAGE-FLAGS-2-KHR
See QUERY-POOL
"
                   ((command-buffer cffi:foreign-pointer) (stage (or unsigned-byte list)) (query-pool cffi:foreign-pointer) (query unsigned-byte))
                   ()
                  nil)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (stage '%vk:pipeline-stage-flags-2-khr stage :in :raw)
  (query-pool '%vk:query-pool query-pool :in :handle)
  (query :uint32 query :in :raw))

(defvk-simple-fun (cmd-write-buffer-marker-2-amd
                   %vk:cmd-write-buffer-marker-2-amd
                   "Represents [vkCmdWriteBufferMarker2AMD](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkCmdWriteBufferMarker2AMD.html).

Args:
 - COMMAND-BUFFER: <a description>
 - STAGE: <a description>
 - DST-BUFFER: <a description>
 - DST-OFFSET: <a description>
 - MARKER: <a description>

See BUFFER
See COMMAND-BUFFER
See DEVICE-SIZE
See PIPELINE-STAGE-FLAGS-2-KHR
"
                   ((command-buffer cffi:foreign-pointer) (stage (or unsigned-byte list)) (dst-buffer cffi:foreign-pointer) (dst-offset unsigned-byte) (marker unsigned-byte))
                   ()
                  nil
                  t)
  (command-buffer '%vk:command-buffer command-buffer :in :handle)
  (stage '%vk:pipeline-stage-flags-2-khr stage :in :raw)
  (dst-buffer '%vk:buffer dst-buffer :in :handle)
  (dst-offset '%vk:device-size dst-offset :in :raw)
  (marker :uint32 marker :in :raw))

(defvk-get-structs-fun (get-queue-checkpoint-data-2-nv
                        %vk:get-queue-checkpoint-data-2-nv
                        "Represents [vkGetQueueCheckpointData2NV](https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/vkGetQueueCheckpointData2NV.html).

Args:
 - QUEUE: <a description>

Returns:
  (CL:VALUES
    UINT-3-2_T
    CHECKPOINT-DATA-2-NV)

See CHECKPOINT-DATA-2-NV
See QUEUE
"
                        ((queue cffi:foreign-pointer))
                        ()
                        checkpoint-data-count
                        checkpoint-data
                      t
                        t)
  (queue '%vk:queue queue :in :handle)
  (checkpoint-data-count :uint32 checkpoint-data-count :out)
  (checkpoint-data '(:struct %vk:checkpoint-data-2-nv) checkpoint-data :out :list))

